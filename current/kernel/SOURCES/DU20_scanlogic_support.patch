--- cur/drivers/usb/storage/unusual_devs.h.chmou	2003-02-05 18:55:24.000000000 +0100
+++ cur/drivers/usb/storage/unusual_devs.h	2003-02-05 18:55:42.000000000 +0100
@@ -137,6 +137,21 @@
                "LS-120 Camera",
                US_SC_UFI, US_PR_CBI, NULL, 0),
 
+/* Reported by Leif Sawyer <leif@gci.net> */
+UNUSUAL_DEV(  0x04ce, 0x0002, 0x0240, 0x0240,
+		"H45 ScanLogic",
+		"SL11R-IDE 9951SQFP-1.2 K004",
+		US_SC_SCSI, US_PR_BULK, NULL,
+		US_FL_FIX_INQUIRY | US_FL_SL_IDE_BUG ),
+
+/* Reported by Rene Engelhard <mail@rene-engelhard.de> and
+    Dylan Egan <crack_me@bigpond.com.au> */
+UNUSUAL_DEV(  0x04ce, 0x0002, 0x0260, 0x0260,
+		"ScanLogic",
+		"SL11R-IDE unknown HW rev",
+		US_SC_SCSI, US_PR_BULK, NULL,
+		US_FL_SL_IDE_BUG ),
+
 /* Most of the following entries were developed with the help of
  * Shuttle/SCM directly.
  */
diff -uNp t1/drivers/usb/storage/usb.h.du23.orig t1/drivers/usb/storage/usb.h
--- t1/drivers/usb/storage/usb.h.du23.orig	2003-08-01 13:39:28.000000000 +0200
+++ t1/drivers/usb/storage/usb.h	2003-08-01 17:04:36.000000000 +0200
@@ -103,6 +103,7 @@ struct us_unusual_dev {
 #define US_FL_SCM_MULT_TARG   0x00000020 /* supports multiple targets */
 #define US_FL_FIX_INQUIRY     0x00000040 /* INQUIRY response needs fixing */
 #define US_FL_FIX_CAPACITY    0x00000080 /* READ_CAPACITY response too big */
+#define US_FL_SL_IDE_BUG      0x00000100 /* ScanLogic usb-ide workaround */
 
 #define USB_STOR_STRING_LEN 32
 
diff -uNp t1/drivers/usb/storage/transport.c.du23.orig t1/drivers/usb/storage/transport.c
--- t1/drivers/usb/storage/transport.c.du23.orig	2003-07-30 18:13:39.000000000 +0200
+++ t1/drivers/usb/storage/transport.c	2003-08-01 17:05:09.000000000 +0200
@@ -1251,7 +1251,7 @@ int usb_stor_Bulk_transport(Scsi_Cmnd *s
 		  le32_to_cpu(bcs->Signature), bcs->Tag, 
 		  bcs->Residue, bcs->Status);
 	if ((bcs->Signature != cpu_to_le32(US_BULK_CS_SIGN) && bcs->Signature != cpu_to_le32(US_BULK_CS_OLYMPUS_SIGN)) ||
-	    bcs->Tag != bcb->Tag || 
+	    ((bcs->Tag != bcb->Tag ) && (!(us->flags & US_FL_SL_IDE_BUG))) || 
 	    bcs->Status > US_BULK_STAT_PHASE || partial != 13) {
 		US_DEBUGP("Bulk logical error\n");
 		ret = USB_STOR_TRANSPORT_ERROR;
