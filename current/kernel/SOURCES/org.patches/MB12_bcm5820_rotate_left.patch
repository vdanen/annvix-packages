diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff bcm5820/3rdparty/bcm5820/ubsextrn.h alsa/3rdparty/bcm5820/ubsextrn.h
--- bcm5820/3rdparty/bcm5820/ubsextrn.h	2002-08-08 15:33:43.000000000 +0200
+++ alsa/3rdparty/bcm5820/ubsextrn.h	2002-08-08 15:58:08.000000000 +0200
@@ -52,7 +52,7 @@ extern ubsec_Status_t SetupOutputFragmen
 			ubsec_FragmentInfo_pt DestinationFragments,
 			ubsec_FragmentInfo_pt pExtraFragment);
 extern void revBytes(void *st, int len);
-extern UBS_UINT32  rol(UBS_UINT32 x, int n);
+extern UBS_UINT32  rotate_left(UBS_UINT32 x, int n);
 extern void copywords(UBS_UINT32 *out, UBS_UINT32 *in,int num);
 extern void InitSHA1State(ubsec_HMAC_State_pt HMAC_State,unsigned char *HashBlock);
 extern void InitMD5State(ubsec_HMAC_State_pt HMAC_State,unsigned char *HashKey);
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff bcm5820/3rdparty/bcm5820/ubsmd5.c alsa/3rdparty/bcm5820/ubsmd5.c
--- bcm5820/3rdparty/bcm5820/ubsmd5.c	2002-08-08 15:33:43.000000000 +0200
+++ alsa/3rdparty/bcm5820/ubsmd5.c	2002-08-08 15:58:29.000000000 +0200
@@ -219,8 +219,8 @@ static void MD5Update(struct MD5Context 
 			default: ;
 			}
 			prerolt = D + fn + m[MD5_P[i]] + MD5_T[i];
-			rolt = rol(D + fn + m[MD5_P[i]] + MD5_T[i], MD5_S[i]);
-			temp = A + rol(D + fn + m[MD5_P[i]] + MD5_T[i], MD5_S[i]);
+			rolt = rotate_left(D + fn + m[MD5_P[i]] + MD5_T[i], MD5_S[i]);
+			temp = A + rotate_left(D + fn + m[MD5_P[i]] + MD5_T[i], MD5_S[i]);
 			D = C;
 			C = B;
 			B = A;
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff bcm5820/3rdparty/bcm5820/ubssha1.c alsa/3rdparty/bcm5820/ubssha1.c
--- bcm5820/3rdparty/bcm5820/ubssha1.c	2002-08-08 15:33:43.000000000 +0200
+++ alsa/3rdparty/bcm5820/ubssha1.c	2002-08-08 15:58:57.000000000 +0200
@@ -186,11 +186,11 @@ SHAUpdate(SHA_CTX *ctx, unsigned char *H
       }
 
 			/* Build needed words beyond original 16 on the fly */
-      if (i >= 16) m[i % 16] = rol(m[(i-3) % 16] ^ m[(i-8) % 16] ^ m[(i-14) % 16] ^ m[(i-16) % 16], 1);
-      temp = rol(a, 5) + fn + e + m[i%16] + K;
+      if (i >= 16) m[i % 16] = rotate_left(m[(i-3) % 16] ^ m[(i-8) % 16] ^ m[(i-14) % 16] ^ m[(i-16) % 16], 1);
+      temp = rotate_left(a, 5) + fn + e + m[i%16] + K;
       e = d;
       d = c;
-      c = rol(b, 30);
+      c = rotate_left(b, 30);
       b = a;
       a = temp;
 
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff bcm5820/3rdparty/bcm5820/ubsutils.c alsa/3rdparty/bcm5820/ubsutils.c
--- bcm5820/3rdparty/bcm5820/ubsutils.c	2002-08-08 15:33:43.000000000 +0200
+++ alsa/3rdparty/bcm5820/ubsutils.c	2002-08-08 15:59:05.000000000 +0200
@@ -55,7 +55,7 @@ revBytes(void *st, int len)
 
 /* Reasonably fast rotate left of x by 'n' bits */
 UBS_UINT32
-rol(UBS_UINT32 x, int n)
+rotate_left(UBS_UINT32 x, int n)
 {
 	unsigned long result = (x << n) | (x >> (32-n));
 	return (result);
