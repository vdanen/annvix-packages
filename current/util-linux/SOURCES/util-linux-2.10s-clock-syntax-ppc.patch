--- util-linux-2.10s/clock-ppc.c	Tue May 15 16:10:16 2001
+++ util-linux-2.10s/clock-ppc.patched	Tue May 15 16:08:56 2001
@@ -154,9 +154,9 @@
     "clock [-u] -r|w|s|a|v\n"
     "  r: read and print CMOS clock\n"
     "  w: write CMOS clock from system time\n"
-    "  s: set system time from CMOS clock\n"
-    "  a: get system time and adjust CMOS clock\n"
-    "  u: CMOS clock is in universal time\n"
+    "  s, --hctosys: set system time from CMOS clock\n"
+    "  a, --systohc: get system time and adjust CMOS clock\n"
+    "  u, --utc: CMOS clock is in universal time\n"
     "  v: print version (" VERSION ") and exit\n"
   );
   exit(EXIT_FAILURE);
@@ -194,7 +194,12 @@
   /*   unsigned char save_control, save_freq_select; */
   unsigned char reply[16];
 
-  while ((arg = getopt (argc, argv, "rwsuaDv")) != -1)
+  /*  get clock-ppc to accept systohc, hctosys options like hwclock */
+  /* this will avoid having to customize initscripts for Mandrake PPC */
+  /*  May 15 2001 - S. Benedict <sbenedict@mandrakesoft.com>        */
+  extern char *optarg; 
+
+  while ((arg = getopt (argc, argv, "rwsuaDv-:")) != -1)
     {
       switch (arg)
 	{
@@ -219,6 +224,23 @@
 	case 'v':
 	  (void) fprintf( stderr, "clock " VERSION "\n" );
 	  exit(EXIT_SUCCESS);
+	case '-':
+	   if (!strncmp(optarg, "systohc", 7)) {
+	     adjustit = 1;
+	     break;
+	   } 
+	   if (!strncmp(optarg, "hctosys", 7)) {
+	     setit = 1;
+	     break;
+	   } 
+	   if (!strncmp(optarg, "localtime", 9)) {
+	     universal = 0;
+	     break;
+	   } 
+	   if (!strncmp(optarg, "utc", 3)) {
+	     universal = 1;
+	     break;
+	   } 
 	default:
 	  usage ();
 	}
