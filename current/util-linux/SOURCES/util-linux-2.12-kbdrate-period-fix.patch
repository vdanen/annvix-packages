--- util-linux-2.12/kbdrate/kbdrate.c~	2001-07-30 22:34:44.000000000 +0200
+++ util-linux-2.12/kbdrate/kbdrate.c	2004-01-30 14:26:12.933224029 +0100
@@ -106,7 +106,7 @@ KDKBDREP_ioctl_ok(double rate, int delay
 	struct kbd_repeat kbdrep_s;
 
 	/* don't change, just test */
-	kbdrep_s.rate = -1;
+	kbdrep_s.period = -1;
 	kbdrep_s.delay = -1;
 	if (ioctl( 0, KDKBDREP, &kbdrep_s )) {
 		if (errno == EINVAL)
@@ -117,11 +117,11 @@ KDKBDREP_ioctl_ok(double rate, int delay
 
 	/* do the change */
 	if (rate == 0)				/* switch repeat off */
-		kbdrep_s.rate = 0;
+		kbdrep_s.period = 0;
 	else
-		kbdrep_s.rate  = 1000.0 / rate;	/* convert cps to msec */
-	if (kbdrep_s.rate < 1)
-		kbdrep_s.rate = 1;
+		kbdrep_s.period  = 1000.0 / rate;	/* convert cps to msec */
+	if (kbdrep_s.period < 1)
+		kbdrep_s.period = 1;
 	kbdrep_s.delay = delay;
 	if (kbdrep_s.delay < 1)
 		kbdrep_s.delay = 1;
@@ -132,10 +132,10 @@ KDKBDREP_ioctl_ok(double rate, int delay
 	}
 
 	/* report */
-	if (kbdrep_s.rate == 0)
+	if (kbdrep_s.period == 0)
 		rate = 0;
 	else
-		rate = 1000.0 / (double) kbdrep_s.rate;
+		rate = 1000.0 / (double) kbdrep_s.period;
 
 	if (!silent)
 		printf( _("Typematic Rate set to %.1f cps (delay = %d ms)\n"),
@@ -160,10 +160,10 @@ KIOCSRATE_ioctl_ok(double rate, int dela
 		exit( 1 );
 	}
 
-	kbdrate_s.rate = (int) (rate + 0.5);  /* round up */
+	kbdrate_s.period = (int) (rate + 0.5);  /* round up */
 	kbdrate_s.delay = delay * HZ / 1000;  /* convert ms to Hz */
-	if (kbdrate_s.rate > 50)
-		kbdrate_s.rate = 50;
+	if (kbdrate_s.period > 50)
+		kbdrate_s.period = 50;
 
 	if (ioctl( fd, KIOCSRATE, &kbdrate_s )) {
 		perror( "ioctl(KIOCSRATE)" );
@@ -173,7 +173,7 @@ KIOCSRATE_ioctl_ok(double rate, int dela
 
 	if (!silent)
 		printf( "Typematic Rate set to %d cps (delay = %d ms)\n",
-			kbdrate_s.rate, kbdrate_s.delay * 1000 / HZ );
+			kbdrate_s.period, kbdrate_s.delay * 1000 / HZ );
 
 	return 1;
 #else /* no KIOCSRATE */
