--- linux-2.4.21/arch/x86_64/ia32/ia32_ioctl.c.x86_64-ioctl32-null-conversion	2003-07-23 12:58:54.000000000 -0400
+++ linux-2.4.21/arch/x86_64/ia32/ia32_ioctl.c	2003-07-23 13:53:20.000000000 -0400
@@ -3481,9 +3481,11 @@ static int mtrr_ioctl32(unsigned int fd,
 	return err;
 } 
 
+typedef int (*ioctl_trans_handler_t)(unsigned int, unsigned int, unsigned long, struct file * filp);
+
 struct ioctl_trans {
 	unsigned long cmd;
-	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);
+	ioctl_trans_handler_t handler;
 	struct ioctl_trans *next;
 };
 
@@ -4411,7 +4413,7 @@ static void free_ioctl(struct ioctl_tran
 	ioctl_free_list = t;
 } 
 
-int register_ioctl32_conversion(unsigned int cmd, int (*handler)(unsigned int, unsigned int, unsigned long, struct file *))
+int register_ioctl32_conversion(unsigned int cmd, ioctl_trans_handler_t handler)
 {
 	struct ioctl_trans *t;
 	unsigned long hash = ioctl32_hash(cmd);
@@ -4440,7 +4442,9 @@ int register_ioctl32_conversion(unsigned
 	
 	t->next = NULL;
 	t->cmd = cmd;
-	t->handler = handler; 
+	/* FIXME: 4th argument is not handled by sys_ioctl() but passed
+	   into register. So there is no problem? */
+	t->handler = handler ? handler : (ioctl_trans_handler_t)sys_ioctl;
 	ioctl32_insert_translation(t);
 
 	unlock_kernel();
@@ -4511,7 +4515,7 @@ asmlinkage long sys32_ioctl(unsigned int
 {
 	struct file * filp;
 	long error = -EBADF;
-	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);
+	ioctl_trans_handler_t handler;
 	struct ioctl_trans *t;
 
 	filp = fget(fd);
