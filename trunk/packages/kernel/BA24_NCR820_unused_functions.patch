diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff 2.4.19-rc3/drivers/scsi/NCR5380.c test/drivers/scsi/NCR5380.c
--- q1/drivers/scsi/NCR5380.c	2002-02-25 20:38:04.000000000 +0100
+++ q2/drivers/scsi/NCR5380.c	2002-07-29 22:35:34.000000000 +0200
@@ -351,88 +351,6 @@ static __inline__ void initialize_SCp(Sc
 
 #ifdef NDEBUG
 static struct {
-	unsigned char mask;
-	const char *name;
-} signals[] = { 
-	{SR_DBP, "PARITY"}, 
-	{SR_RST, "RST"}, 
-	{SR_BSY, "BSY"}, 
-	{SR_REQ, "REQ"}, 
-	{SR_MSG, "MSG"}, 
-	{SR_CD, "CD"}, 
-	{SR_IO, "IO"}, 
-	{SR_SEL, "SEL"}, 
-	{0, NULL}
-}, 
-basrs[] = {
-	{BASR_ATN, "ATN"}, 
-	{BASR_ACK, "ACK"}, 
-	{0, NULL}
-}, 
-icrs[] = { 
-	{ICR_ASSERT_RST, "ASSERT RST"}, 
-	{ICR_ASSERT_ACK, "ASSERT ACK"}, 
-	{ICR_ASSERT_BSY, "ASSERT BSY"}, 
-	{ICR_ASSERT_SEL, "ASSERT SEL"}, 
-	{ICR_ASSERT_ATN, "ASSERT ATN"}, 
-	{ICR_ASSERT_DATA, "ASSERT DATA"}, 
-	{0, NULL}
-}, 
-mrs[] = { 
-	{MR_BLOCK_DMA_MODE, "MODE BLOCK DMA"}, 
-	{MR_TARGET, "MODE TARGET"}, 
-	{MR_ENABLE_PAR_CHECK, "MODE PARITY CHECK"}, 
-	{MR_ENABLE_PAR_INTR, "MODE PARITY INTR"}, 
-	{MR_MONITOR_BSY, "MODE MONITOR BSY"}, 
-	{MR_DMA_MODE, "MODE DMA"}, 
-	{MR_ARBITRATE, "MODE ARBITRATION"}, 
-	{0, NULL}
-};
-
-/**
- *	NCR5380_print	-	print scsi bus signals
- *	@instance:	adapter state to dump
- *
- *	Print the SCSI bus signals for debugging purposes
- *
- *	Locks: none
- */
-
-static void NCR5380_print(struct Scsi_Host *instance)
-{
-	NCR5380_local_declare();
-	unsigned long flags;
-	unsigned char status, data, basr, mr, icr, i;
-	NCR5380_setup(instance);
-	/* FIXME - this needs proper locking */
-	save_flags(flags);
-	cli();
-	data = NCR5380_read(CURRENT_SCSI_DATA_REG);
-	status = NCR5380_read(STATUS_REG);
-	mr = NCR5380_read(MODE_REG);
-	icr = NCR5380_read(INITIATOR_COMMAND_REG);
-	basr = NCR5380_read(BUS_AND_STATUS_REG);
-	restore_flags(flags);
-	printk("STATUS_REG: %02x ", status);
-	for (i = 0; signals[i].mask; ++i)
-		if (status & signals[i].mask)
-			printk(",%s", signals[i].name);
-	printk("\nBASR: %02x ", basr);
-	for (i = 0; basrs[i].mask; ++i)
-		if (basr & basrs[i].mask)
-			printk(",%s", basrs[i].name);
-	printk("\nICR: %02x ", icr);
-	for (i = 0; icrs[i].mask; ++i)
-		if (icr & icrs[i].mask)
-			printk(",%s", icrs[i].name);
-	printk("\nMODE: %02x ", mr);
-	for (i = 0; mrs[i].mask; ++i)
-		if (mr & mrs[i].mask)
-			printk(",%s", mrs[i].name);
-	printk("\n");
-}
-
-static struct {
 	unsigned char value;
 	const char *name;
 } phases[] = {
@@ -445,30 +363,6 @@ static struct {
 	{PHASE_UNKNOWN, "UNKNOWN"}
 };
 
-/* 
- *	NCR5380_print_phase	-	show SCSI phase
- *	@instance: adapter to dump
- *
- * 	Print the current SCSI phase for debugging purposes
- *
- *	Locks: none
- */
-
-static void NCR5380_print_phase(struct Scsi_Host *instance)
-{
-	NCR5380_local_declare();
-	unsigned char status;
-	int i;
-	NCR5380_setup(instance);
-
-	status = NCR5380_read(STATUS_REG);
-	if (!(status & SR_REQ))
-		printk("scsi%d : REQ not asserted, phase unknown.\n", instance->host_no);
-	else {
-		for (i = 0; (phases[i].value != PHASE_UNKNOWN) && (phases[i].value != (status & PHASE_MASK)); ++i);
-		printk("scsi%d : phase %s\n", instance->host_no, phases[i].name);
-	}
-}
 #endif
 
 /*

diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff ../q1/q1/drivers/scsi/NCR5380.h test/drivers/scsi/NCR5380.h
--- ../q1/q1/drivers/scsi/NCR5380.h	2001-12-21 18:41:55.000000000 +0100
+++ test/drivers/scsi/NCR5380.h	2002-07-24 17:12:49.000000000 +0200
@@ -298,8 +298,6 @@ static void do_NCR5380_intr(int irq, voi
 #endif
 static void NCR5380_main(void);
 static void NCR5380_print_options(struct Scsi_Host *instance);
-static void NCR5380_print_phase(struct Scsi_Host *instance);
-static void NCR5380_print(struct Scsi_Host *instance);
 #ifndef NCR5380_abort
 static
 #endif
