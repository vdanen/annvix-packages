diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff 2.4.19-rc3/drivers/scsi/pcmcia/nsp_cs.c test/drivers/scsi/pcmcia/nsp_cs.c
--- 2.4.19-rc3/drivers/scsi/pcmcia/nsp_cs.c	2001-10-11 18:04:57.000000000 +0200
+++ test/drivers/scsi/pcmcia/nsp_cs.c	2002-07-22 18:48:09.000000000 +0200
@@ -169,12 +169,13 @@ static int nsp_queuecommand(Scsi_Cmnd *S
 #endif
 	nsp_hw_data *data = &nsp_data;
 
-	DEBUG(0, __FUNCTION__ "() SCpnt=0x%p target=%d lun=%d buff=0x%p bufflen=%d use_sg=%d\n",
+	DEBUG(0, "%s() SCpnt=0x%p target=%d lun=%d buff=0x%p bufflen=%d use_sg=%d\n", __FUNCTION__,
 	      SCpnt, target, SCpnt->lun, SCpnt->request_buffer, SCpnt->request_bufflen, SCpnt->use_sg);
 	//DEBUG(0, " before CurrentSC=0x%p\n", data->CurrentSC);
 
 	if(data->CurrentSC != NULL) {
-		printk(KERN_DEBUG " " __FUNCTION__ "() CurrentSC!=NULL this can't be happen\n");
+		printk(KERN_DEBUG " %s() CurrentSC!=NULL this can't be happen\n",
+		        __FUNCTION__);
 		data->CurrentSC = NULL;
 		SCpnt->result   = DID_BAD_TARGET << 16;
 		done(SCpnt);
@@ -220,7 +221,7 @@ static int nsp_queuecommand(Scsi_Cmnd *S
 	}
 
 
-	//DEBUG(0, __FUNCTION__ "() out\n");
+	//DEBUG(0, "%s() out\n", __FUNCTION__);
 	return 0;
 }
 
@@ -232,7 +233,7 @@ static void nsp_setup_fifo(nsp_hw_data *
 	unsigned int  base = data->BaseAddress;
 	unsigned char transfer_mode_reg;
 
-	//DEBUG(0, __FUNCTION__ "() enabled=%d\n", enabled);
+	//DEBUG(0, "%s() enabled=%d\n", __FUNCTION__, enabled);
 
 	if (enabled != FALSE) {
 		transfer_mode_reg = TRANSFER_GO | BRAIND;
@@ -257,7 +258,7 @@ static int nsphw_init(nsp_hw_data *data)
 				  SyncOffset:	   0
 	};
 
-	DEBUG(0, __FUNCTION__ "() in base=0x%x\n", base);
+	DEBUG(0, "%s() in base=0x%x\n", __FUNCTION__, base);
 
 	data->ScsiClockDiv = CLOCK_40M;
 	data->CurrentSC    = NULL;
@@ -325,7 +326,7 @@ static unsigned int nsphw_start_selectio
 	int	      wait_count;
 	unsigned char phase, arbit;
 
-	//DEBUG(0, __FUNCTION__ "()in\n");
+	//DEBUG(0, "%s()in\n", __FUNCTION__);
 
 	phase = nsp_index_read(base, SCSIBUSMON);
 	if(phase != BUSMON_BUS_FREE) {
@@ -407,7 +408,7 @@ static int nsp_msg(Scsi_Cmnd *SCpnt, nsp
 	int		       i;
 
 
-	DEBUG(0, __FUNCTION__ "()\n");
+	DEBUG(0, "%s()\n", __FUNCTION__);
 
 /**!**/
 
@@ -462,7 +463,7 @@ static void nsp_start_timer(Scsi_Cmnd *S
 {
 	unsigned int base = SCpnt->host->io_port;
 
-	//DEBUG(0, __FUNCTION__ "() in SCpnt=0x%p, time=%d\n", SCpnt, time);
+	//DEBUG(0, "%s() in SCpnt=0x%p, time=%d\n", __FUNCTION__, SCpnt, time);
 	data->TimerCount = time;
 	nsp_index_write(base, TIMERCOUNT, time);
 }
@@ -476,7 +477,7 @@ static int nsp_negate_signal(Scsi_Cmnd *
 	unsigned char reg;
 	int	      count, i = TRUE;
 
-	//DEBUG(0, __FUNCTION__ "()\n");
+	//DEBUG(0, "%s()\n", __FUNCTION__);
 
 	count = jiffies + HZ;
 
@@ -488,7 +489,8 @@ static int nsp_negate_signal(Scsi_Cmnd *
 	} while ((i = time_before(jiffies, count)) && (reg & mask) != 0);
 
 	if (!i) {
-		printk(KERN_DEBUG __FUNCTION__ " %s signal off timeut\n", str);
+		printk(KERN_DEBUG "%s %s signal off timeut\n", 
+		       __FUNCTION__, str);
 	}
 
 	return 0;
@@ -505,7 +507,7 @@ static int nsp_expect_signal(Scsi_Cmnd	 
 	int	      wait_count;
 	unsigned char phase, i_src;
 
-	//DEBUG(0, __FUNCTION__ "() current_phase=0x%x, mask=0x%x\n", current_phase, mask);
+	//DEBUG(0, "%s() current_phase=0x%x, mask=0x%x\n", __FUNCTION__, current_phase, mask);
 
 	wait_count = jiffies + HZ;
 	do {
@@ -525,7 +527,7 @@ static int nsp_expect_signal(Scsi_Cmnd	 
 		}
 	} while(time_before(jiffies, wait_count));
 
-	//DEBUG(0, __FUNCTION__ " : " __FUNCTION__ " timeout\n");
+	//DEBUG(0, "%s : timeout\n", __FUNCTION__);
 	return -1;
 }
 
@@ -540,7 +542,7 @@ static int nsp_xfer(Scsi_Cmnd *SCpnt, ns
 	int	      ptr;
 	int	      ret;
 
-	//DEBUG(0, __FUNCTION__ "()\n");
+	//DEBUG(0, "%s()\n", __FUNCTION__);
 	for (ptr = 0; len > 0; len --, ptr ++) {
 
 		ret = nsp_expect_signal(SCpnt, phase, BUSMON_REQ);
@@ -575,7 +577,7 @@ static int nsp_dataphase_bypass(Scsi_Cmn
 {
 	unsigned int count;
 
-	//DEBUG(0, __FUNCTION__ "()\n");
+	//DEBUG(0, "%s()\n", __FUNCTION__);
 
 	if (SCpnt->SCp.have_data_in != IO_IN) {
 		return 0;
@@ -607,7 +609,7 @@ static int nsp_reselected(Scsi_Cmnd *SCp
 	unsigned int  base = SCpnt->host->io_port;
 	unsigned char reg;
 
-	//DEBUG(0, __FUNCTION__ "()\n");
+	//DEBUG(0, "%s()\n", __FUNCTION__);
 
 	nsp_negate_signal(SCpnt, BUSMON_SEL, "reselect<SEL>");
 
@@ -636,7 +638,7 @@ static int nsp_fifo_count(Scsi_Cmnd *SCp
 
 	count = (h << 16) | (m << 8) | (l << 0);
 
-	//DEBUG(0, __FUNCTION__ "() =0x%x\n", count);
+	//DEBUG(0, "%s() =0x%x\n", __FUNCTION__, count);
 
 	return count;
 }
@@ -657,7 +659,7 @@ static void nsp_pio_read(Scsi_Cmnd *SCpn
 
 	ocount = data->FifoCount;
 
-	DEBUG(0, __FUNCTION__ "() in SCpnt=0x%p resid=%d ocount=%d ptr=0x%p this_residual=%d buffers=0x%p nbuf=%d\n", SCpnt, RESID, ocount, SCpnt->SCp.ptr, SCpnt->SCp.this_residual, SCpnt->SCp.buffer, SCpnt->SCp.buffers_residual);
+	DEBUG(0, "%s() in SCpnt=0x%p resid=%d ocount=%d ptr=0x%p this_residual=%d buffers=0x%p nbuf=%d\n", __FUNCTION__, SCpnt, RESID, ocount, SCpnt->SCp.ptr, SCpnt->SCp.this_residual, SCpnt->SCp.buffer, SCpnt->SCp.buffers_residual);
 
 	time_out = jiffies + 10 * HZ;
 
@@ -723,7 +725,7 @@ static void nsp_pio_read(Scsi_Cmnd *SCpn
 	data->FifoCount = ocount;
 
 	if (!i) {
-		printk(KERN_DEBUG __FUNCTION__ "() pio read timeout resid=%d this_residual=%d buffers_residual=%d\n", RESID, SCpnt->SCp.this_residual, SCpnt->SCp.buffers_residual);
+		printk(KERN_DEBUG "%s() pio read timeout resid=%d this_residual=%d buffers_residual=%d\n", __FUNCTION__, RESID, SCpnt->SCp.this_residual, SCpnt->SCp.buffers_residual);
 	}
 	DEBUG(0, " read ocount=0x%x\n", ocount);
 }
@@ -740,7 +742,7 @@ static void nsp_pio_write(Scsi_Cmnd *SCp
 
 	ocount	 = data->FifoCount;
 
-	DEBUG(0, __FUNCTION__ "() in fifocount=%d ptr=0x%p this_residual=%d buffers=0x%p nbuf=%d resid=0x%x\n", data->FifoCount, SCpnt->SCp.ptr, SCpnt->SCp.this_residual, SCpnt->SCp.buffer, SCpnt->SCp.buffers_residual, RESID);
+	DEBUG(0, "%s() in fifocount=%d ptr=0x%p this_residual=%d buffers=0x%p nbuf=%d resid=0x%x\n", __FUNCTION__, data->FifoCount, SCpnt->SCp.ptr, SCpnt->SCp.this_residual, SCpnt->SCp.buffer, SCpnt->SCp.buffers_residual, RESID);
 
 	time_out = jiffies + 10 * HZ;
 
@@ -796,7 +798,8 @@ static void nsp_pio_write(Scsi_Cmnd *SCp
 	data->FifoCount = ocount;
 
 	if (!i) {
-		printk(KERN_DEBUG __FUNCTION__ "() pio write timeout resid=%d\n", RESID);
+		printk(KERN_DEBUG "%s() pio write timeout resid=%d\n",
+		       __FUNCTION__, RESID);
 	}
 	//DEBUG(0, " write ocount=%d\n", ocount);
 }
@@ -814,7 +817,7 @@ static int nsp_nexus(Scsi_Cmnd *SCpnt, n
 	unsigned char  lun    = SCpnt->lun;
 	sync_data     *sync   = &(data->Sync[target][lun]);
 
-	//DEBUG(0, __FUNCTION__ "() in SCpnt=0x%p\n", SCpnt);
+	//DEBUG(0, "%s() in SCpnt=0x%p\n", __FUNCTION__, SCpnt);
 
 	/* setup synch transfer registers */
 	nsp_index_write(base, SYNCREG,	sync->SyncRegister);
@@ -917,7 +920,7 @@ static void nspintr(int irq, void *dev_i
 	nsp_write(base, IRQCONTROL, IRQCONTROL_TIMER_CLEAR | IRQCONTROL_FIFO_CLEAR);
 
 	if (data->CurrentSC == NULL) {
-		printk(KERN_DEBUG __FUNCTION__ " CurrentSC==NULL irq_status=0x%x phase=0x%x irq_phase=0x%x this can't be happen\n", i_src, phase, irq_phase);
+		printk(KERN_DEBUG "%s CurrentSC==NULL irq_status=0x%x phase=0x%x irq_phase=0x%x this can't be happen\n", __FUNCTION__, i_src, phase, irq_phase);
 		return;
 	} else {
 		tmpSC    = data->CurrentSC;
@@ -931,7 +934,8 @@ static void nspintr(int irq, void *dev_i
 	 */
 	if ((i_src & IRQSTATUS_SCSI) != 0) {
 		if ((irq_phase & SCSI_RESET_IRQ) != 0) {
-			printk(KERN_DEBUG " " __FUNCTION__ "() bus reset (power off?)\n");
+			printk(KERN_DEBUG " %s() bus reset (power off?)\n",
+			       __FUNCTION__);
 			*sync_neg          = SYNC_NOT_YET;
 			data->CurrentSC    = NULL;
 			tmpSC->result	   = DID_RESET << 16;
@@ -1029,7 +1033,7 @@ static void nspintr(int irq, void *dev_i
 
 	/* check unexpected bus free state */
 	if (phase == 0) {
-		printk(KERN_DEBUG " " __FUNCTION__ " unexpected bus free. i_src=0x%x, phase=0x%x, irq_phase=0x%x\n", i_src, phase, irq_phase);
+		printk(KERN_DEBUG " %s unexpected bus free. i_src=0x%x, phase=0x%x, irq_phase=0x%x\n", __FUNCTION__, i_src, phase, irq_phase);
 
 		*sync_neg       = SYNC_NOT_YET;
 		data->CurrentSC = NULL;
@@ -1164,7 +1168,7 @@ static void nspintr(int irq, void *dev_i
 		break;
 	}
 
-	//DEBUG(0, __FUNCTION__ "() out\n");
+	//DEBUG(0, "%s() out\n", __FUNCTION__);
 	return;	
 
 timer_out:
@@ -1184,7 +1188,7 @@ static int nsp_detect(Scsi_Host_Template
 	struct Scsi_Host *host;	/* registered host structure */
 	nsp_hw_data *data = &nsp_data;
 
-	DEBUG(0, __FUNCTION__ " this_id=%d\n", sht->this_id);
+	DEBUG(0, "%s this_id=%d\n", __FUNCTION__, sht->this_id);
 
 	request_region(data->BaseAddress, data->NumAddress, "nsp_cs");
 	host		  = scsi_register(sht, 0);
@@ -1203,7 +1207,7 @@ static int nsp_detect(Scsi_Host_Template
 		host->irq);
 	sht->name	  = nspinfo;
 
-	DEBUG(0, __FUNCTION__ " end\n");
+	DEBUG(0, "%s end\n", __FUNCTION__);
 
 	return 1; /* detect done. */
 }
@@ -1235,7 +1239,7 @@ static const char *nsp_info(struct Scsi_
 /*---------------------------------------------------------------*/
 static int nsp_reset(Scsi_Cmnd *SCpnt, unsigned int why)
 {
-	DEBUG(0, __FUNCTION__ " SCpnt=0x%p why=%d\n", SCpnt, why);
+	DEBUG(0, "%s SCpnt=0x%p why=%d\n", __FUNCTION__, SCpnt, why);
 
 	nsp_eh_bus_reset(SCpnt);
 
@@ -1244,7 +1248,7 @@ static int nsp_reset(Scsi_Cmnd *SCpnt, u
 
 static int nsp_abort(Scsi_Cmnd *SCpnt)
 {
-	DEBUG(0, __FUNCTION__ " SCpnt=0x%p\n", SCpnt);
+	DEBUG(0, "%s SCpnt=0x%p\n", __FUNCTION__, SCpnt);
 
 	nsp_eh_bus_reset(SCpnt);
 
@@ -1258,7 +1262,7 @@ static int nsp_abort(Scsi_Cmnd *SCpnt)
 
 static int nsp_eh_abort(Scsi_Cmnd *SCpnt)
 {
-	DEBUG(0, __FUNCTION__ " SCpnt=0x%p\n", SCpnt);
+	DEBUG(0, "%s SCpnt=0x%p\n", __FUNCTION__, SCpnt);
 
 	nsp_eh_bus_reset(SCpnt);
 
@@ -1267,7 +1271,7 @@ static int nsp_eh_abort(Scsi_Cmnd *SCpnt
 
 static int nsp_eh_device_reset(Scsi_Cmnd *SCpnt)
 {
-	DEBUG(0, __FUNCTION__ " SCpnt=0x%p\n", SCpnt);
+	DEBUG(0, "%s SCpnt=0x%p\n", __FUNCTION__, SCpnt);
 
 	return FAILED;
 }
@@ -1277,7 +1281,7 @@ static int nsp_eh_bus_reset(Scsi_Cmnd *S
 	unsigned int base = SCpnt->host->io_port;
 	int	     i;
 
-	DEBUG(0, __FUNCTION__ "() SCpnt=0x%p base=0x%x\n", SCpnt, base);
+	DEBUG(0, "%s() SCpnt=0x%p base=0x%x\n", __FUNCTION__, SCpnt, base);
 
 	nsp_write(base, IRQCONTROL, IRQCONTROL_ALLMASK);
 
@@ -1297,7 +1301,7 @@ static int nsp_eh_host_reset(Scsi_Cmnd *
 {
 	nsp_hw_data *data = &nsp_data;
 
-	DEBUG(0, __FUNCTION__ "\n");
+	DEBUG(0, "%s\n", __FUNCTION__);
 
 	nsphw_init(data);
 
@@ -1332,7 +1336,7 @@ static dev_link_t *nsp_cs_attach(void)
 	dev_link_t   *link;
 	int	      ret, i;
 
-	DEBUG(0, __FUNCTION__ "()\n");
+	DEBUG(0, "%s()\n", __FUNCTION__);
 
 	/* Create new SCSI device */
 	info = kmalloc(sizeof(*info), GFP_KERNEL);
@@ -1403,7 +1407,7 @@ static void nsp_cs_detach(dev_link_t *li
 {
 	dev_link_t **linkp;
 
-	DEBUG(0, __FUNCTION__ "(0x%p)\n", link);
+	DEBUG(0, "%s(0x%p)\n", __FUNCTION__, link);
     
 	/* Locate device structure */
 	for (linkp = &dev_list; *linkp; linkp = &(*linkp)->next) {
@@ -1461,7 +1465,7 @@ static void nsp_cs_config(dev_link_t *li
 	struct Scsi_Host *host;
 	nsp_hw_data      *data = &nsp_data;
 
-	DEBUG(0, __FUNCTION__ "() in\n");
+	DEBUG(0, "%s() in\n", __FUNCTION__);
 
 	tuple.DesiredTuple    = CISTPL_CONFIG;
 	tuple.Attributes      = 0;
@@ -1494,7 +1498,7 @@ static void nsp_cs_config(dev_link_t *li
 			break;
 		}
 	next_entry:
-		DEBUG(0, __FUNCTION__ " next\n");
+		DEBUG(0, "%s next\n", __FUNCTION__);
 		CS_CHECK(GetNextTuple, handle, &tuple);
 	}
 
@@ -1509,7 +1513,7 @@ static void nsp_cs_config(dev_link_t *li
 	data->NumAddress  = link->io.NumPorts1;
 	data->IrqNumber   = link->irq.AssignedIRQ;
 
-	DEBUG(0, __FUNCTION__ " I/O[0x%x+0x%x] IRQ %d\n",
+	DEBUG(0, "%s I/O[0x%x+0x%x] IRQ %d\n", __FUNCTION__,
 	      data->BaseAddress, data->NumAddress, data->IrqNumber);
 
 	if(nsphw_init(data) == FALSE) {
@@ -1598,7 +1602,7 @@ static void nsp_cs_release(u_long arg)
 {
 	dev_link_t *link = (dev_link_t *)arg;
 
-	DEBUG(0, __FUNCTION__ "(0x%p)\n", link);
+	DEBUG(0, "%s(0x%p)\n", __FUNCTION__, link);
 
 	/*
 	 * If the device is currently in use, we won't release until it
@@ -1652,7 +1656,7 @@ static int nsp_cs_event(event_t		    eve
 	dev_link_t  *link = args->client_data;
 	scsi_info_t *info = link->priv;
 
-	DEBUG(1, __FUNCTION__ "(0x%06x)\n", event);
+	DEBUG(1, "%s(0x%06x)\n", __FUNCTION__, event);
 
 	switch (event) {
 	case CS_EVENT_CARD_REMOVAL:
@@ -1701,7 +1705,7 @@ static int nsp_cs_event(event_t		    eve
 		DEBUG(0, " event: unknown\n");
 		break;
 	}
-	DEBUG(0, __FUNCTION__ " end\n");
+	DEBUG(0, "%s end\n", __FUNCTION__);
 	return 0;
 } /* nsp_cs_event */
 
@@ -1712,7 +1716,7 @@ static int __init nsp_cs_init(void)
 {
 	servinfo_t serv;
 
-	DEBUG(0, __FUNCTION__ "() in\n");
+	DEBUG(0, "%s() in\n", __FUNCTION__);
 	DEBUG(0, "%s\n", version);
 	CardServices(GetCardServicesInfo, &serv);
 	if (serv.Revision != CS_RELEASE_CODE) {
@@ -1722,14 +1726,14 @@ static int __init nsp_cs_init(void)
 	}
 	register_pcmcia_driver(&dev_info, &nsp_cs_attach, &nsp_cs_detach);
 
-	DEBUG(0, __FUNCTION__ "() out\n");
+	DEBUG(0, "%s() out\n", __FUNCTION__);
 	return 0;
 }
 
 
 static void __exit nsp_cs_cleanup(void)
 {
-	DEBUG(0, __FUNCTION__ "() unloading\n");
+	DEBUG(0, "%s() unloading\n", __FUNCTION__);
 	unregister_pcmcia_driver(&dev_info);
 	while (dev_list != NULL) {
 		if (dev_list->state & DEV_CONFIG) {
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff 2.4.19-rc3/drivers/scsi/pcmcia/nsp_message.c test/drivers/scsi/pcmcia/nsp_message.c
--- 2.4.19-rc3/drivers/scsi/pcmcia/nsp_message.c	2001-10-11 18:04:57.000000000 +0200
+++ test/drivers/scsi/pcmcia/nsp_message.c	2002-07-22 18:48:09.000000000 +0200
@@ -64,7 +64,8 @@ static void nsp_message_out(Scsi_Cmnd *S
 	DEBUG(0, " msgout loop\n");
 	do {
 		if (nsp_xfer(SCpnt, data, BUSPHASE_MESSAGE_OUT)) {
-			printk(KERN_DEBUG " " __FUNCTION__ " msgout: xfer short\n");
+			printk(KERN_DEBUG " %s msgout: xfer short\n",
+			        __FUNCTION__);
 		}
 
 		/* catch a next signal */
