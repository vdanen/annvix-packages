diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff t6/sound/core/misc.c t5/sound/core/misc.c
--- t6/sound/core/misc.c	2002-08-12 10:43:44.000000000 +0200
+++ t5/sound/core/misc.c	2003-02-07 13:00:15.000000000 +0100
@@ -101,3 +101,64 @@ void snd_printd(const char *format, ...)
 	printk(tmpbuf);
 }
 #endif
+
+
+#if defined(CONFIG_DEVFS_FS) && LINUX_VERSION_CODE < KERNEL_VERSION(2,5,29)
+
+#include <linux/devfs_fs_kernel.h>
+
+void snd_compat_devfs_remove(const char *fmt, ...)
+{
+	char buf[64];
+	va_list args;
+	int n;
+
+	va_start(args, fmt);
+	n = vsnprintf(buf, 64, fmt, args);
+	if (n < 64) {
+		devfs_handle_t de = devfs_get_handle(NULL, buf, 0, 0, 0, 0);
+	        devfs_unregister(de);
+	        devfs_put(de);
+	}
+}
+
+#endif
+
+#include <linux/smp_lock.h>
+
+/* workqueue-alike; 2.5.45 */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 45)
+
+static int work_caller(void *data)
+{
+	struct work_struct *works = data;
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+	lock_kernel();
+#endif
+	daemonize();
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0) && LINUX_VERSION_CODE >= KERNEL_VERSION(2, 4, 0)
+	reparent_to_init();
+#endif
+	strcpy(current->comm, "snd-free"); /* FIXME: different names? */
+
+	works->func(works->data);
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+	unlock_kernel();
+#endif
+	kfree(works);
+
+	return 0;
+}
+
+int snd_compat_schedule_work(struct work_struct *works)
+{
+	struct work_struct *wp = kmalloc(sizeof(*wp), GFP_KERNEL);
+	if (! wp)
+		return 0;
+	*wp = *works;
+	return kernel_thread(work_caller, wp, 0) >= 0;
+}
+
+#endif
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff t6/sound/usb/usbaudio.c t5/sound/usb/usbaudio.c
--- t6/sound/usb/usbaudio.c	2003-02-07 13:12:56.000000000 +0100
+++ t5/sound/usb/usbaudio.c	2003-02-07 13:07:10.000000000 +0100
@@ -40,6 +40,16 @@
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 
+#ifdef OLD_USB
+#define snd_usb_complete_callback(x) __old_ ## x
+static void __old_snd_complete_urb(struct urb *urb);
+static void __old_snd_complete_sync_urb(struct urb *urb);
+
+static void * usb_audio_probe(struct usb_device *dev, unsigned int ifnum,
+                              const struct usb_device_id *id);
+static void usb_audio_disconnect(struct usb_device *dev, void *ptr);
+#endif
+
 #include "usbaudio.h"
 
 
@@ -2601,6 +2611,37 @@ static void __exit snd_usb_audio_cleanup
 module_init(snd_usb_audio_init);
 module_exit(snd_usb_audio_cleanup);
 
+#ifdef OLD_USB
+/*
+ * 2.4 USB kernel API
+ */
+static void *usb_audio_probe(struct usb_device *dev, unsigned int ifnum,
+			     const struct usb_device_id *id)
+{
+	return snd_usb_audio_probe(dev, usb_ifnum_to_if(dev, ifnum), id);
+}
+                                       
+static void usb_audio_disconnect(struct usb_device *dev, void *ptr)
+{
+	snd_usb_audio_disconnect(dev, ptr);
+}
+
+static void __old_snd_complete_urb(struct urb *urb)
+{
+	snd_complete_urb(urb, NULL);
+}
+
+static void __old_snd_complete_sync_urb(struct urb *urb)
+{
+	snd_complete_sync_urb(urb, NULL);
+}
+#endif
+
+/*
+ * workarounds / hacks for the older kernels follow below
+ */
+
+
 #ifndef MODULE
 /*
  * format is snd-usb-audio=enable,index,id,vid,pid
diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff t6/sound/usb/usbmidi.c t5/sound/usb/usbmidi.c
--- t6/sound/usb/usbmidi.c	2003-02-07 13:12:56.000000000 +0100
+++ t5/sound/usb/usbmidi.c	2003-02-07 13:00:15.000000000 +0100
@@ -47,6 +48,14 @@
 #include <sound/core.h>
 #include <sound/minors.h>
 #include <sound/rawmidi.h>
+
+#ifdef OLD_USB
+#define snd_usb_complete_callback(x) __old_ ## x
+static void __old_snd_usbmidi_in_urb_complete(struct urb* urb);
+static void __old_snd_usbmidi_in_midiman_complete(struct urb* urb);
+static void __old_snd_usbmidi_out_urb_complete(struct urb* urb);
+#endif
+
 #include "usbaudio.h"
 
 struct usb_ms_header_descriptor {
@@ -1098,3 +1107,20 @@ int snd_usb_create_midi_interface(snd_us
 					       GFP_KERNEL);
 	return 0;
 }
+
+#ifdef OLD_USB
+static void __old_snd_usbmidi_in_urb_complete(struct urb* urb)
+{
+	snd_usbmidi_in_urb_complete(urb, NULL);
+}
+
+static void __old_snd_usbmidi_in_midiman_complete(struct urb* urb)
+{
+	snd_usbmidi_in_midiman_complete(urb, NULL);
+}
+
+static void __old_snd_usbmidi_out_urb_complete(struct urb* urb)
+{
+	snd_usbmidi_out_urb_complete(urb, NULL);
+}
+#endif
