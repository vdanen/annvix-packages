

mountd currently always returns AUTH_NULL and AUTH_SYS as the allowable flavors
in mount replies.  We want it to also return gss flavors when appropriate.
For now as a hack we just have it always return the KRB5 flavors as well.

---

 nfs-utils-1.0.6-bfields/utils/mountd/mountd.c |    8 ++++++--
 1 files changed, 6 insertions(+), 2 deletions(-)

diff -puN utils/mountd/mountd.c~mountd_flavors utils/mountd/mountd.c
--- nfs-utils-1.0.6/utils/mountd/mountd.c~mountd_flavors	2004-09-27 18:18:59.000000000 -0400
+++ nfs-utils-1.0.6-bfields/utils/mountd/mountd.c	2004-09-27 18:18:59.000000000 -0400
@@ -234,7 +234,10 @@ mount_pathconf_2_svc(struct svc_req *rqs
 bool_t
 mount_mnt_3_svc(struct svc_req *rqstp, dirpath *path, mountres3 *res)
 {
-	static int	flavors[] = { AUTH_NULL, AUTH_UNIX };
+#define AUTH_GSS_KRB5 390003
+#define AUTH_GSS_KRB5I 390004
+#define AUTH_GSS_KRB5P 390005
+	static int	flavors[] = { AUTH_NULL, AUTH_UNIX, AUTH_GSS_KRB5, AUTH_GSS_KRB5I, AUTH_GSS_KRB5P};
 	struct nfs_fh_len *fh;
 
 	xlog(D_CALL, "MNT3(%s) called", *path);
@@ -243,7 +246,8 @@ mount_mnt_3_svc(struct svc_req *rqstp, d
 
 		ok->fhandle.fhandle3_len = fh->fh_size;
 		ok->fhandle.fhandle3_val = fh->fh_handle;
-		ok->auth_flavors.auth_flavors_len = 2;
+		ok->auth_flavors.auth_flavors_len
+			= sizeof(flavors)/sizeof(flavors[0]);
 		ok->auth_flavors.auth_flavors_val = flavors;
 	}
 	return 1;
_
