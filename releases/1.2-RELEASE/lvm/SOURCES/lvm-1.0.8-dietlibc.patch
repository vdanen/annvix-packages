--- LVM/1.0.8/tools/lib/liblvm.h.diet	2003-02-28 15:51:35.000000000 +0100
+++ LVM/1.0.8/tools/lib/liblvm.h	2004-11-28 12:06:20.729858153 +0100
@@ -76,6 +76,12 @@
 #  define uint64_t	unsigned long long int
 #endif
 
+#ifdef __dietlibc__
+#  define ushort unsigned short
+#  define uint unsigned int
+#  define ulong unsigned long
+#endif
+
 #include <sys/stat.h>
 
 #include <errno.h>
@@ -91,7 +97,10 @@
 #include <ctype.h>
 #include <time.h>
 #include <limits.h>
-#ifdef _G_LSEEK64
+#ifdef __dietlibc__
+#undef llseek
+#define llseek lseek64
+#elif defined(_G_LSEEK64)
 loff_t lseek64 ( unsigned int, unsigned long long, unsigned int);
 #define llseek lseek64
 #else
@@ -100,6 +109,9 @@
 
 #include <sys/ioctl.h>
 #include <linux/major.h>
+#ifdef __dietlibc__
+#define __KERNEL_STRICT_NAMES
+#endif
 #include <linux/genhd.h>
 
 #ifdef major
--- LVM/1.0.8/tools/lib/pv_move.c.diet	2003-02-06 16:05:34.000000000 +0100
+++ LVM/1.0.8/tools/lib/pv_move.c	2004-11-28 12:03:54.341075274 +0100
@@ -83,7 +83,7 @@
 
 /* internal functions */
 static ulong _read ( int, char*, ulong, char*);
-loff_t       _llseek ( int, loff_t, int);
+loff_t       pv_move_llseek ( int, loff_t, int);
 void         pv_move_interrupt ( int);
 int         _pe_lock ( char*, kdev_t, ulong, ushort, ushort, kdev_t);
 int         _pe_unlock ( char*);
@@ -469,7 +469,7 @@
    if ( opt_v > 1) printf ( "%s -- llseeking input physical volume \"%s\"\n",
                             cmd, vg->pv[src_pv_index]->pv_name);
    offset = ( loff_t) le_remap_req.old_pe * SECTOR_SIZE;
-   if ( ( result = _llseek ( in, offset, SEEK_SET)) == -1) {
+   if ( ( result = pv_move_llseek ( in, offset, SEEK_SET)) == -1) {
       fprintf ( stderr, "%s -- couldn't llseek to sector %u on input "
                         "physical volume \"%s\"\n",
                 cmd,
@@ -692,7 +692,7 @@
 }
 
 /* llseek with optional error ignore */
-loff_t _llseek ( int fh, loff_t offset, int whence) {
+loff_t pv_move_llseek ( int fh, loff_t offset, int whence) {
    loff_t pos = llseek ( fh, offset, whence);
 
    if ( opt_ignore &&
@@ -706,7 +706,7 @@
 static ulong _read ( int in, char *buffer, ulong to_read, char *pv_name) {
    ulong ret;
    ulong total_read = 0;
-   loff_t pos = _llseek ( in, 0, SEEK_CUR); /* get actual position */
+   loff_t pos = pv_move_llseek ( in, 0, SEEK_CUR); /* get actual position */
 
    /* if we can't even get our actual position */
    if ( pos <= 0) {
@@ -731,7 +731,7 @@
       while ( total_read < to_read) {
          /* If we can't position (for eg. on a test device),
             return buffer of zeroed bytes */
-         if ( _llseek ( in, pos, SEEK_SET) <= 0)
+         if ( pv_move_llseek ( in, pos, SEEK_SET) <= 0)
             return to_read;
 
          ret = read ( in, buffer, SECTOR_SIZE);
