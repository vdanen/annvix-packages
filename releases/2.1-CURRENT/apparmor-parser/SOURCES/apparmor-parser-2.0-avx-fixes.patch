--- Makefile.avx	2006-06-27 13:06:00.000000000 -0600
+++ Makefile	2006-06-27 13:06:00.000000000 -0600
@@ -176,6 +176,11 @@
 install-redhat:
 	install -m 755 -d $(DESTDIR)/etc/init.d
 	install -m 755 rc.apparmor.$(subst install-,,$@) $(DESTDIR)/etc/init.d/apparmor
+	
+.PHONY: install-annvix
+install-annvix:
+	install -m 755 -d $(DESTDIR)/etc/init.d
+	install -m 755 rc.apparmor.$(subst install-,,$@) $(DESTDIR)/etc/init.d/apparmor
 
 .PHONY: install-suse
 install-suse:
--- rc.apparmor.functions.avx	2006-03-27 08:17:10.000000000 -0700
+++ rc.apparmor.functions	2006-10-22 20:50:29.000000000 -0600
@@ -28,6 +28,9 @@
 
 # Some nice defines that we use
 
+# we need to source this so we can get all the e* functions
+. /etc/init.d/rc.functions.sh
+
 CONFIG_DIR=/etc/apparmor
 MODULE=apparmor
 OLD_MODULE=subdomain
@@ -102,6 +105,31 @@
 # keep exit status from parser during profile load.  0 is good, 1 is bad
 STATUS=0
 
+function sd_log_success_msg() {
+        eend "$*"
+}
+                
+function sd_log_warning_msg() {
+	ewarn "$*"
+	eend 0
+}
+                                
+function sd_log_failure_msg() {
+	eend 1 "$*"
+}
+                                                
+function sd_action() {
+	STRING=$1
+	shift
+	cmd="$@"
+	ebegin "${STRING}"
+	${cmd}
+	rc=$?
+	eend ${rc}
+	return ${rc}
+}
+                                                                                
+
 function parse_profiles() {	
 	# get parser arg
 	case "$1" in
@@ -117,7 +145,7 @@
 			exit 1
 			;;
 	esac
-	echo -n "$PARSER_MSG"
+	ebegin "${PARSER_MSG}"
 	# run the parser on all of the apparmor profiles
 	if [ ! -f "$PARSER" ]; then
 		sd_log_failure_msg "- AppArmor parser not found"
@@ -139,13 +167,13 @@
 		     "${profile%.rpmsave}" != "${profile}" -o \
 		     "${profile%\~}" != "${profile}" ]
 		then 
-			echo " Skipping profile $profile"
+			einfo " Skipping profile $profile"
 			logger -t "AppArmor(init)" -p daemon.warn "Skipping profile $profile"
 			STATUS=2
 		elif [ -f "${profile}" ] ; then
 			$PARSER $ABSTRACTIONS $PARSER_ARGS "$profile" > /dev/null
 			if [ $? -ne 0 ]; then
-				echo " Profile $profile failed to load"
+				einfo " Profile $profile failed to load"
 				STATUS=1
 			fi
 		fi
@@ -337,18 +365,26 @@
 
 function start_sd_event() {
 	if [ -x "$AA_EV_BIN" -a "${APPARMOR_ENABLE_AAEVENTD}" = "yes" ] ; then
-		sd_action "Starting AppArmor Event daemon" startproc -f -p $AA_EV_PIDFILE $AA_EV_BIN -p $AA_EV_PIDFILE
+		ebegin "Starting AppArmor Event daemon"
+		daemon $AA_EV_BIN -p $AA_EV_PIDFILE
+		eend $?
 	elif [ -x "$SD_EV_BIN" -a "${APPARMOR_ENABLE_AAEVENTD}" = "yes" ] ; then
-		sd_action "Starting AppArmor Event daemon" startproc -f -p $SD_EV_PIDFILE $SD_EV_BIN -p $SD_EV_PIDFILE
+		ebegin "Starting AppArmor Event daemon"
+		daemon $SD_EV_BIN -p $SD_EV_PIDFILE
+		eend $?
 	fi
 }
 
 function stop_sd_event() {
 	if [ -x "$AA_EV_BIN" -a -f "$AA_EV_PIDFILE" ] ; then
-		sd_action "Shutting down AppArmor Event daemon" /sbin/killproc -G -p $AA_EV_PIDFILE -INT $AA_EV_BIN
+		ebegin "Shutting down AppArmor Event daemon"
+		killproc $AA_EV_BIN
+		eend $?
 	fi
 	if [ -f "$SD_EV_PIDFILE" ] ; then
-		sd_action "Shutting down AppArmor Event daemon" /sbin/killproc -G -p $SD_EV_PIDFILE -INT $SD_EV_BIN
+		ebegin "Shutting down AppArmor Event daemon"
+		killproc $SD_EV_BIN
+		eend $?
 	fi
 }
 
@@ -420,7 +456,7 @@
 
 function subdomain_stop() {
 	stop_sd_event
-	echo -n "Unloading AppArmor profiles "
+	ebegin "Unloading AppArmor profiles"
 	remove_profiles
 }
 
@@ -523,10 +559,10 @@
 		return $?
 	fi
 	if ! grep -qE "^(subdomain|apparmor)[[:space:]]" /proc/modules ; then
-		echo "AppArmor is not loaded."
+		einfo "AppArmor is not loaded."
 		rc=1
 	else
-		echo "AppArmor is enabled,"
+		einfo "AppArmor is enabled,"
 		rc=0
 	fi
 	echo "Install the apparmor-utils package to receive more detailed"
