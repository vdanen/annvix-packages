--- imap-2002a/src/c-client/c-client.h.ansi	2001-05-29 17:53:03.000000000 -0400
+++ imap-2002a/src/c-client/c-client.h	2003-01-05 16:15:04.000000000 -0500
@@ -24,9 +24,6 @@
 #ifdef __cplusplus		/* help out people who use C++ compilers */
 extern "C" {
 #define private cclientPrivate	/* private to c-client */
-#define and cclientAnd		/* C99 doesn't realize that ISO 646 is dead */
-#define or cclientOr
-#define not cclientNot
 #endif
 
 #include "mail.h"		/* primary interfaces */
--- imap-2002a/src/c-client/mail.c.ansi	2002-12-04 14:27:26.000000000 -0500
+++ imap-2002a/src/c-client/mail.c	2003-01-05 16:15:04.000000000 -0500
@@ -3121,7 +3121,7 @@
       (pgm->body && !mail_search_text (stream,msgno,section,pgm->body,NIL)))
     return NIL;
 				/* logical conditions */
-  for (or = pgm->or; or; or = or->next)
+  for (or = pgm->cclientOr; or; or = or->next)
     if (!(mail_search_msg (stream,msgno,section,or->first) ||
 	  mail_search_msg (stream,msgno,section,or->second))) return NIL;
   for (not = pgm->not; not; not = not->next)
@@ -5350,8 +5350,8 @@
   if (*pgm) {			/* only free if exists */
     mail_free_searchset (&(*pgm)->msgno);
     mail_free_searchset (&(*pgm)->uid);
-    mail_free_searchor (&(*pgm)->or);
-    mail_free_searchpgmlist (&(*pgm)->not);
+    mail_free_searchor (&(*pgm)->cclientOr);
+    mail_free_searchpgmlist (&(*pgm)->cclientNot);
     mail_free_searchheader (&(*pgm)->header);
     mail_free_stringlist (&(*pgm)->bcc);
     mail_free_stringlist (&(*pgm)->body);
--- imap-2002a/src/c-client/imap4r1.c.ansi	2002-11-27 12:30:28.000000000 -0500
+++ imap-2002a/src/c-client/imap4r1.c	2003-01-05 16:21:45.000000000 -0500
@@ -1570,7 +1570,7 @@
   if ((flags & SE_NOSERVER) ||	/* if want to do local search */
       (!LEVELIMAP4 (stream) &&	/* or old server but new functions... */
        (charset || (flags & SE_UID) || pgm->msgno || pgm->uid || pgm->or ||
-	pgm->not || pgm->header || pgm->larger || pgm->smaller ||
+	pgm->cclientNot || pgm->header || pgm->larger || pgm->smaller ||
 	pgm->sentbefore || pgm->senton || pgm->sentsince || pgm->draft ||
 	pgm->undraft || pgm->return_path || pgm->sender || pgm->reply_to ||
 	pgm->message_id || pgm->in_reply_to || pgm->newsgroups ||
@@ -2811,14 +2811,14 @@
       return reply;
   }
   while (hdr = hdr->next);
-  for (pgo = pgm->or; pgo; pgo = pgo->next) {
-    for (t = " OR ("; *t; *(*s)++ = *t++);
+  for (pgo = pgm->cclientOr; pgo; pgo = pgo->next) {  
+  for (t = " OR ("; *t; *(*s)++ = *t++);
     if (reply = imap_send_spgm (stream,tag,s,pgo->first,limit)) return reply;
     for (t = ") ("; *t; *(*s)++ = *t++);
     if (reply = imap_send_spgm (stream,tag,s,pgo->second,limit)) return reply;
     *(*s)++ = ')';
   }
-  for (pgl = pgm->not; pgl; pgl = pgl->next) {
+  for (pgl = pgm->cclientNot; pgl; pgl = pgl->next) {
     for (t = " NOT ("; *t; *(*s)++ = *t++);
     if (reply = imap_send_spgm (stream,tag,s,pgl->pgm,limit)) return reply;
     *(*s)++ = ')';
--- imap-2002a/src/c-client/mail.h.ansi	2002-10-28 18:45:14.000000000 -0500
+++ imap-2002a/src/c-client/mail.h	2003-01-05 16:15:04.000000000 -0500
@@ -804,11 +804,18 @@
   SEARCHPGMLIST *next;		/* next in list */
 };
 
+/* Backwards compatability for C programs */
+#ifdef __STDC__
+  #ifndef __cplusplus
+    #define cclientOr or
+    #define cclientNot not
+  #endif
+#endif   
 SEARCHPGM {			/* search program */
   SEARCHSET *msgno;		/* message numbers */
   SEARCHSET *uid;		/* unique identifiers */
-  SEARCHOR *or;			/* or'ed in programs */
-  SEARCHPGMLIST *not;		/* and'ed not program */
+  SEARCHOR *cclientOr;			/* or'ed in programs */
+  SEARCHPGMLIST *cclientNot;		/* and'ed not program */
   SEARCHHEADER *header;		/* list of headers */
   STRINGLIST *bcc;		/* bcc recipients */
   STRINGLIST *body;		/* text in message body */
--- imap-2002a/src/c-client/nntp.c.ansi	2002-10-25 19:55:38.000000000 -0400
+++ imap-2002a/src/c-client/nntp.c	2003-01-05 16:15:04.000000000 -0500
@@ -1095,10 +1095,10 @@
       return NIL;
   }
 				/* logical conditions */
-  for (or = pgm->or; or; or = or->next)
+  for (or = pgm->cclientOr; or; or = or->next)
     if (!(nntp_search_msg (stream,msgno,or->first,ov) ||
 	  nntp_search_msg (stream,msgno,or->second,ov))) return NIL;
-  for (not = pgm->not; not; not = not->next)
+  for (not = pgm->cclientNot; not; not = not->next)
     if (nntp_search_msg (stream,msgno,not->pgm,ov)) return NIL;
   return T;
 }
--- imap-2002a/src/imapd/imapd.c.ansi	2003-01-05 16:15:04.000000000 -0500
+++ imap-2002a/src/imapd/imapd.c	2003-01-05 16:15:04.000000000 -0500
@@ -1743,9 +1743,9 @@
     case '5': case '6': case '7': case '8': case '9':
       if (*(set = &pgm->msgno)){/* already a sequence? */
 				/* silly, but not as silly as the client! */
-	for (not = &pgm->not; *not; not = &(*not)->next);
+	for (not = &pgm->cclientNot; *not; not = &(*not)->next);
 	*not = mail_newsearchpgmlist ();
-	set = &((*not)->pgm->not = mail_newsearchpgmlist ())->pgm->msgno;
+	set = &((*not)->pgm->cclientNot = mail_newsearchpgmlist ())->pgm->msgno;
       }
       ret = crit_set (set,&s,maxmsg) && (tail == s);
       break;
@@ -1797,7 +1797,7 @@
     case 'N':			/* possible NEW, NOT */
       if (!strcmp (s+1,"EW")) ret = pgm->recent = pgm->unseen = T;
       else if (!strcmp (s+1,"OT") && c == ' ' && *++tail) {
-	for (not = &pgm->not; *not; not = &(*not)->next);
+	for (not = &pgm->cclientNot; *not; not = &(*not)->next);
 	*not = mail_newsearchpgmlist ();
 	ret = parse_criterion ((*not)->pgm,&tail,maxmsg,depth+1);
       }
@@ -1808,7 +1808,7 @@
       else if (!strcmp (s+1,"N") && c == ' ' && *++tail)
 	ret = crit_date (&pgm->on,&tail);
       else if (!strcmp (s+1,"R") && c == ' ') {
-	for (or = &pgm->or; *or; or = &(*or)->next);
+	for (or = &pgm->cclientOr; *or; or = &(*or)->next);
 	*or = mail_newsearchor ();
 	ret = *++tail && parse_criterion((*or)->first,&tail,maxmsg,depth+1) &&
 	  *tail == ' ' && *++tail &&
@@ -1844,9 +1844,9 @@
       if (!strcmp (s+1,"ID") && c== ' ' && *++tail) {
 	if (*(set = &pgm->uid)){/* already a sequence? */
 				/* silly, but not as silly as the client! */
-	  for (not = &pgm->not; *not; not = &(*not)->next);
+	  for (not = &pgm->cclientNot; *not; not = &(*not)->next);
 	  *not = mail_newsearchpgmlist ();
-	  set = &((*not)->pgm->not = mail_newsearchpgmlist ())->pgm->uid;
+	  set = &((*not)->pgm->cclientNot = mail_newsearchpgmlist ())->pgm->uid;
 	}
 	ret = crit_set (set,&tail,0xffffffff);
       }
