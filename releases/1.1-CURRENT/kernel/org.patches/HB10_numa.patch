--- linux-2.4.21/mm/bootmem.c.numa-fixes	2003-08-11 16:21:52.000000000 +0200
+++ linux-2.4.21/mm/bootmem.c	2003-08-11 16:23:53.000000000 +0200
@@ -312,6 +312,7 @@ unsigned long __init free_all_bootmem_no
 	return(free_all_bootmem_core(pgdat));
 }
 
+#ifndef CONFIG_DISCONTIGMEM
 unsigned long __init init_bootmem (unsigned long start, unsigned long pages)
 {
 	max_low_pfn = pages;
@@ -333,6 +334,7 @@ unsigned long __init free_all_bootmem (v
 {
 	return(free_all_bootmem_core(&contig_page_data));
 }
+#endif
 
 void * __init __alloc_bootmem (unsigned long size, unsigned long align, unsigned long goal)
 {
--- linux-2.4.21/mm/numa.c.numa-fixes	2003-08-11 16:22:24.000000000 +0200
+++ linux-2.4.21/mm/numa.c	2003-08-11 16:23:53.000000000 +0200
@@ -8,14 +8,16 @@
 #include <linux/bootmem.h>
 #include <linux/mmzone.h>
 #include <linux/spinlock.h>
+#include <linux/proc_fs.h>
+#include <linux/init.h>
 
 int numnodes = 1;	/* Initialized for UMA platforms */
 
+#ifndef CONFIG_DISCONTIGMEM
+
 static bootmem_data_t contig_bootmem_data;
 pg_data_t contig_page_data = { bdata: &contig_bootmem_data };
 
-#ifndef CONFIG_DISCONTIGMEM
-
 /*
  * This is meant to be invoked by platforms whose physical memory starts
  * at a considerably higher value than 0. Examples are Super-H, ARM, m68k.
--- linux-2.4.21/mm/page_alloc.c.numa-fixes	2003-08-11 16:22:24.000000000 +0200
+++ linux-2.4.21/mm/page_alloc.c	2003-08-11 16:23:53.000000000 +0200
@@ -1014,10 +1014,12 @@ void __init free_area_init_core(int nid,
 	}
 }
 
+#ifndef CONFIG_DISCONTIGMEM
 void __init free_area_init(unsigned long *zones_size)
 {
 	free_area_init_core(0, &contig_page_data, &mem_map, zones_size, 0, 0, 0);
 }
+#endif
 
 static int __init setup_mem_frac(char *str)
 {
--- linux-2.4.21/include/linux/mmzone.h.numa-fixes	2003-08-11 16:22:24.000000000 +0200
+++ linux-2.4.21/include/linux/mmzone.h	2003-08-11 16:23:53.000000000 +0200
@@ -177,6 +177,9 @@ typedef struct pglist_data {
 	int node_id;
 	wait_table_t wait_table;
 	struct pglist_data *node_next;
+#ifdef CONFIG_NUMA
+	unsigned long numa_hit, numa_miss;
+#endif
 } pg_data_t;
 
 extern int numnodes;
