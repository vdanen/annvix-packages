--- postfix-2.0.18/src/util/get_hostname.c.orig	2004-04-19 19:08:20.000000000 -0400
+++ postfix-2.0.18/src/util/get_hostname.c	2004-04-19 19:22:28.000000000 -0400
@@ -33,6 +33,7 @@
 #include <sys/param.h>
 #include <string.h>
 #include <unistd.h>
+#include <netdb.h>
 
 #if (MAXHOSTNAMELEN < 256)
 #undef MAXHOSTNAMELEN
@@ -55,6 +56,8 @@
 const char *get_hostname(void)
 {
     char    namebuf[MAXHOSTNAMELEN + 1];
+    struct hostent *byName, *byAddr;
+    struct in_addr hostaddr;
 
     /*
      * The gethostname() call is not (or not yet) in ANSI or POSIX, but it is
@@ -66,6 +69,16 @@
 	if (gethostname(namebuf, sizeof(namebuf)) < 0)
 	    msg_fatal("gethostname: %m");
 	namebuf[MAXHOSTNAMELEN] = 0;
+
+	/* Sometimes gethostname does not return a FQDN, usually gethostbyaddr() will */
+	byName = gethostbyname(namebuf);
+	if (byName->h_addr) {
+	  memcpy((char *) &hostaddr, byName->h_addr, sizeof(hostaddr));
+	  byAddr = gethostbyaddr((char *)&hostaddr, sizeof(hostaddr), AF_INET);
+	  strncpy(namebuf, byAddr->h_name, sizeof(namebuf));
+	  namebuf[MAXHOSTNAMELEN] = 0;
+	}
+	
 	if (valid_hostname(namebuf, DO_GRIPE) == 0)
 	    msg_fatal("unable to use my own hostname");
 	my_host_name = mystrdup(namebuf);
