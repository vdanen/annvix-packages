--- configure.in	2004-09-15 21:48:38.378082892 +0200
+++ configure.in.oden	2004-09-15 21:51:04.678794563 +0200
@@ -1548,17 +1548,17 @@
 # See which lock mechanism we'll select by default on this system.
 # The last APR_DECIDE to execute sets the default.
 # At this stage, we match the ordering in Apache 1.3
-# which is (highest to lowest): sysvsem -> fcntl -> flock.
+# which is (highest to lowest): fcntl -> flock -> sysvsem
 # POSIX semaphores and cross-process pthread mutexes are not
 # used by default since they have less desirable behaviour when
 # e.g. a process holding the mutex segfaults.
 APR_BEGIN_DECISION([apr_lock implementation method])
+APR_IFALLYES(func:semget func:semctl define:SEM_UNDO,
+            APR_DECIDE(USE_SYSVSEM_SERIALIZE, [SysV IPC semget()]))
 APR_IFALLYES(func:flock define:LOCK_EX,
             APR_DECIDE(USE_FLOCK_SERIALIZE, [4.2BSD-style flock()]))
 APR_IFALLYES(header:fcntl.h define:F_SETLK,
             APR_DECIDE(USE_FCNTL_SERIALIZE, [SVR4-style fcntl()]))
-APR_IFALLYES(func:semget func:semctl define:SEM_UNDO,
-            APR_DECIDE(USE_SYSVSEM_SERIALIZE, [SysV IPC semget()]))
 if test "x$apr_lock_method" != "x"; then
     APR_DECISION_FORCE($apr_lock_method)
 fi
