
Add %{HTTPS} and %{SSL:...} lookups.  Former relies on sslishttps patch.

--- httpd-2.0.48/modules/mappers/mod_rewrite.c.rewritessl
+++ httpd-2.0.48/modules/mappers/mod_rewrite.c
@@ -116,6 +116,8 @@
 #include "http_protocol.h"
 #include "mod_rewrite.h"
 
+#include "../ssl/mod_ssl.h"
+
 #if !defined(OS2) && !defined(WIN32) && !defined(BEOS)  && !defined(NETWARE)
 #include "unixd.h"
 #define MOD_REWRITE_SET_MUTEX_PERMS /* XXX Apache should define something */
@@ -332,6 +334,9 @@
     return (void *)a;
 }
 
+/* Optional functions imported from mod_ssl when loaded: */
+static APR_OPTIONAL_FN_TYPE(ssl_var_lookup) *rewrite_ssl_lookup = NULL;
+static APR_OPTIONAL_FN_TYPE(ssl_is_https) *rewrite_is_https = NULL;
 
 /*
 **
@@ -1051,6 +1056,10 @@
             }
         }
     }
+
+    rewrite_ssl_lookup = APR_RETRIEVE_OPTIONAL_FN(ssl_var_lookup);
+    rewrite_is_https = APR_RETRIEVE_OPTIONAL_FN(ssl_is_https);
+
     return OK;
 }
 
@@ -3909,6 +3918,10 @@
         if (result == NULL) {
             result = getenv(var+4);
         }
+    } 
+    else if (strlen(var) > 4 && !strncasecmp(var, "SSL:", 4) && rewrite_ssl_lookup) {
+        result = rewrite_ssl_lookup(r->pool, r->server, r->connection, r,
+                                    var + 4);
     }
 
 #define LOOKAHEAD(subrecfunc) \
@@ -3957,6 +3970,9 @@
         if (r->finfo.valid & APR_FINFO_GROUP) {
             apr_group_name_get((char **)&result, r->finfo.group, r->pool);
         }
+    } else if (strcasecmp(var, "HTTPS") == 0) {
+        int flag = rewrite_is_https && rewrite_is_https(r->connection);
+        result = apr_pstrdup(r->pool, flag ? "on" : "off");
     }
 
     if (result == NULL) {
