diff -uNr ppp-2.4.1-old/pppd/Makefile.linux ppp-2.4.1/pppd/Makefile.linux
--- ppp-2.4.1-old/pppd/Makefile.linux	Sat Nov  2 15:01:51 2002
+++ ppp-2.4.1/pppd/Makefile.linux	Sat Nov  2 10:44:30 2002
@@ -71,6 +71,8 @@
 # doesn't yet.
 FILTER=y
 
+NOEXT_TRAFFIC=y
+
 HAS_SHADOW=y
 USE_PAM=y
 #HAVE_INET6=y
@@ -101,6 +103,10 @@
 ifdef MPPE
 CFLAGS   += -DMPPE=1
 endif
+endif
+
+ifdef NOEXT_TRAFFIC
+CFLAGS += -DNOEXT_TRAFFIC
 endif
 
 ifdef HAS_SHADOW
diff -uNr ppp-2.4.1-old/pppd/auth.c ppp-2.4.1/pppd/auth.c
--- ppp-2.4.1-old/pppd/auth.c	Sat Nov  2 15:01:51 2002
+++ ppp-2.4.1/pppd/auth.c	Sat Nov  2 14:58:38 2002
@@ -183,6 +183,11 @@
 
 extern char *crypt __P((const char *, const char *));
 
+#ifdef NOEXT_TRAFFIC
+/* Boolean to care for external traffic or not. Defined in options.c */
+extern int noexttraffic;
+#endif
+
 /* Prototypes for procedures local to this file. */
 
 void network_phase __P((int));
@@ -798,6 +803,14 @@
 	tlim = idle_time_hook(&idle);
     } else {
 	itime = MIN(idle.xmit_idle, idle.recv_idle);
+#ifdef NOEXT_TRAFFIC  /* modified version, additional commandline-switch noext-traffic */
+	if (!noexttraffic)
+		itime = MIN(idle.xmit_idle, idle.recv_idle);
+	else
+		itime = idle.xmit_idle;
+#else  /* standard version */
+          itime = MIN(idle.xmit_idle, idle.recv_idle);
+#endif
 	tlim = idle_time_limit - itime;
     }
     if (tlim <= 0) {
diff -uNr ppp-2.4.1-old/pppd/options.c ppp-2.4.1/pppd/options.c
--- ppp-2.4.1-old/pppd/options.c	Tue Mar 13 06:56:19 2001
+++ ppp-2.4.1/pppd/options.c	Sat Nov  2 15:00:10 2002
@@ -85,6 +85,9 @@
 bool	dump_options;		/* print out option values */
 bool	dryrun;			/* print out option values and exit */
 char	*domain;		/* domain name set by domain option */
+#ifdef NOEXT_TRAFFIC
+int noexttraffic = 0; /* decide whether or not we want to care for traffic from extern */
+#endif
 
 extern option_t auth_options[];
 extern struct stat devstat;
@@ -260,6 +263,9 @@
 
     { "active-filter", 1, setactivefilter,
       "set filter for active pkts", OPT_PRIO },
+#endif
+#ifdef NOEXT_TRAFFIC
+    { "noext-traffic", o_bool, (void *)&noexttraffic, "ignore external pkts for timeout", 1 },
 #endif
 
     { NULL }
diff -uNr ppp-2.4.1-old/pppd/pppd.8 ppp-2.4.1/pppd/pppd.8
--- ppp-2.4.1-old/pppd/pppd.8	Sat Nov  2 15:01:51 2002
+++ ppp-2.4.1/pppd/pppd.8	Sat Nov  2 14:51:00 2002
@@ -263,6 +263,20 @@
 \fIdebug\fR.  This information can be directed to a file by setting up
 /etc/syslog.conf appropriately (see syslog.conf(5)).
 .TP
+.B noext-traffic
+Do not count incoming traffic against the idle time set with the idle
+option.  The default idle option behavior is to count both outgoing
+and incoming traffic.  This can be very helpful when remote hosts
+keeping sending unwanted traffic, thereby keeping the connection up.
+
+Note that this \fIcannot\fR prevent programs from responding to incoming
+requests and in doing so defeat the idle option.  The route program
+\fIreject\fR parameter might help in that case when enough is known about
+IP address space of the site generating the unwanted requests.  If you
+initiated contact with the site generating the requests, say with a
+web browser, then denying ingress with the "reject" parameter probably
+won't be a viable option.
+.
 .B default-asyncmap
 Disable asyncmap negotiation, forcing all control characters to be
 escaped for both the transmit and the receive direction.
