2003-07-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/i386/fpu/feenablxcpt.c (feenableexcept): Reverse use of
	stmxcsr and ldmxcsr.

	* sysdeps/i386/fpu/fedisblxcpt.c: Use dl_hwcap, not dl_hwcap_mask.
	* sysdeps/i386/fpu/feenablxcpt.c: Likewise.
	* sysdeps/i386/fpu/feholdexcpt.c: Likewise.
	* sysdeps/i386/fpu/fesetround.c: Likewise.
	* sysdeps/i386/fpu/ftestexcept.c: Likewise.

--- glibc-2.3.2/sysdeps/i386/fpu/fedisblxcpt.c.sse-fixes	2003-07-07 11:15:04.000000000 -0400
+++ glibc-2.3.2/sysdeps/i386/fpu/fedisblxcpt.c	2003-07-25 12:29:12.000000000 -0400
@@ -39,7 +39,7 @@ fedisableexcept (int excepts)
   __asm__ ("fldcw %0" : : "m" (*&new_exc));
 
   /* If the CPU supports SSE we set the MXCSR as well.  */
-  if ((GL(dl_hwcap_mask) & HWCAP_I386_XMM) != 0)
+  if ((GL(dl_hwcap) & HWCAP_I386_XMM) != 0)
     {
       unsigned int xnew_exc;
 
--- glibc-2.3.2/sysdeps/i386/fpu/feenablxcpt.c.sse-fixes	2003-07-07 11:15:04.000000000 -0400
+++ glibc-2.3.2/sysdeps/i386/fpu/feenablxcpt.c	2003-07-25 12:29:15.000000000 -0400
@@ -39,16 +39,16 @@ feenableexcept (int excepts)
   __asm__ ("fldcw %0" : : "m" (*&new_exc));
 
   /* If the CPU supports SSE we set the MXCSR as well.  */
-  if ((GL(dl_hwcap_mask) & HWCAP_I386_XMM) != 0)
+  if ((GL(dl_hwcap) & HWCAP_I386_XMM) != 0)
     {
       unsigned int xnew_exc;
 
       /* Get the current control word.  */
-      __asm__ ("ldmxcsr %0" : "=m" (*&xnew_exc));
+      __asm__ ("stmxcsr %0" : "=m" (*&xnew_exc));
 
       xnew_exc &= ~(excepts << 7);
 
-      __asm__ ("stmxcsr %0" : : "m" (*&xnew_exc));
+      __asm__ ("ldmxcsr %0" : : "m" (*&xnew_exc));
     }
 
   return old_exc;
--- glibc-2.3.2/sysdeps/i386/fpu/feholdexcpt.c.sse-fixes	2003-07-07 11:15:04.000000000 -0400
+++ glibc-2.3.2/sysdeps/i386/fpu/feholdexcpt.c	2003-07-25 12:29:18.000000000 -0400
@@ -36,7 +36,7 @@ feholdexcept (fenv_t *envp)
   __asm__ ("fldcw %0" : : "m" (*&work));
 
   /* If the CPU supports SSE we set the MXCSR as well.  */
-  if ((GL(dl_hwcap_mask) & HWCAP_I386_XMM) != 0)
+  if ((GL(dl_hwcap) & HWCAP_I386_XMM) != 0)
     {
       unsigned int xwork;
 
--- glibc-2.3.2/sysdeps/i386/fpu/fesetround.c.sse-fixes	2003-05-10 13:05:07.000000000 -0400
+++ glibc-2.3.2/sysdeps/i386/fpu/fesetround.c	2003-07-25 12:29:20.000000000 -0400
@@ -38,7 +38,7 @@ fesetround (int round)
   __asm__ ("fldcw %0" : : "m" (*&cw));
 
   /* If the CPU supports SSE we set the MXCSR as well.  */
-  if ((GL(dl_hwcap_mask) & HWCAP_I386_XMM) != 0)
+  if ((GL(dl_hwcap) & HWCAP_I386_XMM) != 0)
     {
       unsigned int xcw;
 
--- glibc-2.3.2/sysdeps/i386/fpu/ftestexcept.c.sse-fixes	2003-05-10 13:05:07.000000000 -0400
+++ glibc-2.3.2/sysdeps/i386/fpu/ftestexcept.c	2003-07-25 12:29:23.000000000 -0400
@@ -33,7 +33,7 @@ fetestexcept (int excepts)
   __asm__ ("fnstsw %0" : "=a" (temp));
 
   /* If the CPU supports SSE we test the MXCSR as well.  */
-  if ((GL(dl_hwcap_mask) & HWCAP_I386_XMM) != 0)
+  if ((GL(dl_hwcap) & HWCAP_I386_XMM) != 0)
     __asm__ ("stmxcsr %0" : "=m" (*&xtemp));
 
   return (temp | xtemp) & excepts & FE_ALL_EXCEPT;
