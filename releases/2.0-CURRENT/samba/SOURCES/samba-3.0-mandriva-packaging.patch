--- samba-3.0.23/packaging/Mandrake/findsmb.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/findsmb	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,141 @@
+#!/usr/bin/perl
+#
+# Prints info on all smb responding machines on a subnet.
+# This script needs to be run on a machine without nmbd running and be
+# run as root to get correct info from WIN95 clients.
+#
+# syntax:
+#    findsmb [subnet broadcast address]
+#
+# with no agrument it will list machines on the current subnet
+#
+# There will be a "+" in front of the workgroup name for machines that are
+# local master browsers for that workgroup. There will be an "*" in front
+# of the workgroup name for machines that are the domain master browser for
+# that workgroup.
+#
+
+$SAMBABIN = "/usr/bin";
+
+for ($i = 0; $i < 2; $i++) {	# test for -d option and broadcast address
+  $_ = shift;
+  if (m/-d|-D/) {
+    $DEBUG = 1;
+  } else  {
+    if ($_) {
+      $BCAST = "-B $_";
+    }
+  }
+}
+
+sub ipsort			# do numeric sort on last field of IP address
+{
+  @t1 = split(/\./,$a);
+  @t2 = split(/\./,$b);
+  @t1[3] <=> @t2[3];
+}
+
+# look for all machines that respond to a name lookup
+
+open(NMBLOOKUP,"$SAMBABIN/nmblookup $BCAST '*'|") || 
+  die("Can't run nmblookup '*'.\n");
+
+# get rid of all lines that are not a response IP address,
+# strip everything but IP address and sort by last field in address
+
+@ipaddrs = sort ipsort grep(s/ \*<00>.*$//,<NMBLOOKUP>);
+
+# print header info
+
+print "\nIP ADDR         NETBIOS NAME   WORKGROUP/OS/VERSION $BCAST\n";
+print "---------------------------------------------------------------------\n";
+
+foreach $ip (@ipaddrs)		# loop through each IP address found
+{
+  $ip =~ s/\n//;		# strip newline from IP address
+
+# find the netbios names registered by each machine
+
+  open(NMBLOOKUP,"$SAMBABIN/nmblookup -r -A $ip|") || 
+	die("Can't get nmb name list.\n");
+  @nmblookup = <NMBLOOKUP>;
+  close NMBLOOKUP;
+
+# get the first <00> name
+
+  @name = grep(/<00>/,@nmblookup);
+  $_ = @name[0];
+  if ($_) {                     # we have a netbios name
+    if (/GROUP/) {		# is it a group name
+	($name, $aliases, $type, $length, @addresses) = 
+	gethostbyaddr(pack('C4',split('\.',$ip)),2);
+	if (! $name) {			# could not get name
+	    $name = "unknown nis name";
+	}
+    } else {
+	/(.{1,15})\s+<00>\s+/;
+	$name = $1;
+    }
+
+# do an smbclient command on the netbios name.
+
+    open(SMB,"$SAMBABIN/smbclient -N -L $name -I $ip -U% |") ||
+	die("Can't do smbclient command.\n");
+    @smb = <SMB>;
+    close SMB;
+
+    if ($DEBUG) {		# if -d flag print results of nmblookup and smbclient
+      print "===============================================================\n";
+      print @nmblookup;
+      print @smb;
+    }
+
+# look for the OS= string
+
+    @info = grep(/OS=/,@smb);
+    $_ = @info[0];
+    if ($_) {				# we found response
+      s/Domain=|OS=|Server=|\n//g;	# strip out descriptions to make line shorter
+
+    } else {				# no OS= string in response (WIN95 client)
+
+# for WIN95 clients get workgroup name from nmblookup response
+      @name = grep(/<00> - <GROUP>/,@nmblookup);
+      $_ = @name[0];
+      if ($_) {
+        /(.{1,15})\s+<00>\s+/;
+        $_ = "[$1]";
+      } else {
+	$_ = "Unknown Workgroup";
+      }
+    }
+
+# see if machine registered a local master browser name
+    if (grep(/<1d>/,@nmblookup)) {
+      $master = '+';			# indicate local master browser
+      if (grep(/<1b>/,@nmblookup)) {	# how about domain master browser?
+        $master = '*';			# indicate domain master browser
+      }
+    } else {
+      $master = ' ';			# not a browse master
+    }
+
+# line up info in 3 columns
+
+    print "$ip".' 'x(16-length($ip))."$name".' 'x(14-length($name))."$master"."$_\n";
+
+  } else {				# no netbios name found
+# try getting the host name
+    ($name, $aliases, $type, $length, @addresses) = 
+      gethostbyaddr(pack('C4',split('\.',$ip)),2);
+    if (! $name) {			# could not get name
+      $name = "unknown nis name";
+    }
+    if ($DEBUG) {			# if -d flag print results of nmblookup
+      print "===============================================================\n";
+      print @nmblookup;
+    }
+    print "$ip".' 'x(16-length($ip))."$name\n";
+  }
+} 
+
--- samba-3.0.23/packaging/Mandrake/samba.log.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/samba.log	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,15 @@
+/var/log/samba/log.nmb {
+    notifempty
+    missingok
+    postrotate
+	/usr/bin/killall -HUP nmbd
+    endscript
+}
+
+/var/log/samba/log.smb {
+    notifempty
+    missingok
+    postrotate
+	/usr/bin/killall -HUP smbd
+    endscript
+}
--- samba-3.0.23/packaging/Mandrake/samba.pamd.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/samba.pamd	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,5 @@
+#%PAM-1.0
+auth       required	/lib/security/pam_nologin.so
+auth       required	/lib/security/pam_stack.so service=system-auth
+account    required	/lib/security/pam_stack.so service=system-auth
+session    required	/lib/security/pam_stack.so service=system-auth
--- samba-3.0.23/packaging/Mandrake/samba.xinetd.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/samba.xinetd	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,15 @@
+# default: on
+# description: SWAT is the Samba Web Admin Tool. Use swat \
+#	       to configure your Samba server. To use SWAT, \
+#	       connect to port 901 with your favorite web browser.
+service swat
+{
+	port	= 901
+	socket_type	= stream
+	wait 	= no
+	only_from = 127.0.0.1
+	user	= root
+	server	= /usr/sbin/swat
+	log_on_failure	+= USERID
+	disable = no
+}
--- samba-3.0.23/packaging/Mandrake/smb.conf.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/smb.conf	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,537 @@
+
+# This is the main Samba configuration file. You should read the
+# smb.conf(5) manual page in order to understand the options listed
+# here. Samba has a huge number of configurable options (perhaps too
+# many!) most of which are not shown in this example
+#
+# Any line which starts with a ; (semi-colon) or a # (hash) 
+# is a comment and is ignored. In this example we will use a #
+# for commentry and a ; for parts of the config file that you
+# may wish to enable
+#
+# NOTE: Whenever you modify this file you should run the command "testparm"
+# to check that you have not made any basic syntactic errors. 
+#
+#======================= Global Settings =====================================
+[global]
+
+# 1. Server Naming Options:
+# workgroup = NT-Domain-Name or Workgroup-Name
+   workgroup = MDKGROUP
+
+# netbios name is the name you will see in "Network Neighbourhood",
+# but defaults to your hostname
+#  netbios name = <name_of_this_server>
+
+# server string is the equivalent of the NT Description field
+   server string = Samba Server %v
+
+# Message command is run by samba when a "popup" message is sent to it.
+# The example below is for use with LinPopUp:
+; message command = /usr/bin/linpopup "%f" "%m" %s; rm %s
+
+# 2. Printing Options:
+# CHANGES TO ENABLE PRINTING ON ALL CUPS PRINTERS IN THE NETWORK
+# (as cups is now used in linux-mandrake 7.2 by default)
+# if you want to automatically load your printer list rather
+# than setting them up individually then you'll need this
+   printcap name = lpstat
+   load printers = yes
+
+# printcap cache time, so samba will automatically load new cups printers
+   printcap cache time = 60
+
+# It should not be necessary to spell out the print system type unless
+# yours is non-standard. Currently supported print systems include:
+# bsd, sysv, plp, lprng, aix, hpux, qnx, cups
+   printing = cups
+
+# Samba 2.2 supports the Windows NT-style point-and-print feature. To
+# use this, you need to be able to upload print drivers to the samba
+# server. The printer admins (or root) may install drivers onto samba.
+# Note that this feature uses the print$ share, so you will need to 
+# enable it below.
+# Printer admins are now defined by granting the SePrintOperatorPrivilege, ie:
+# run: net rpc rights grant 'DOMAIN\Printer Operators' SePrintOperatorPrivilege
+
+# 3. Logging Options:
+# this tells Samba to use a separate log file for each machine
+# that connects
+   log file = /var/log/samba/%m.log
+
+# Put a capping on the size of the log files (in Kb).
+   max log size = 50
+
+# Set the log (verbosity) level (0 <= log level <= 10)
+# log level = 3
+
+# 4. Security and Domain Membership Options:
+# This option is important for security. It allows you to restrict
+# connections to machines which are on your local network. The
+# following example restricts access to two C class networks and
+# the "loopback" interface. For more examples of the syntax see
+# the smb.conf man page. Do not enable this if (tcp/ip) name resolution does
+# not work for all the hosts in your network.
+#   hosts allow = 192.168.1. 192.168.2. 127.
+
+# Uncomment this if you want a guest account, you must add this to /etc/passwd
+# otherwise the user "nobody" is used
+#  guest account = pcguest
+# Allow users to map to guest:
+  map to guest = bad user
+
+# Security mode. Most people will want user level security. See
+# security_level.txt for details.
+   security = user
+# Use password server option only with security = server or security = domain
+# When using security = domain, you should use password server = *
+#   password server = <NT-Server-Name>
+#   password server = *
+
+# Password Level allows matching of _n_ characters of the password for
+# all combinations of upper and lower case.
+#  password level = 8
+#  username level = 8
+
+# You may wish to use password encryption. Please read
+# ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation.
+# Do not enable this option unless you have read those documents
+# Encrypted passwords are required for any use of samba in a Windows NT domain
+# The smbpasswd file is only required by a server doing authentication, thus
+# members of a domain do not need one.
+  encrypt passwords = yes
+  smb passwd file = /etc/samba/smbpasswd
+
+# The following are needed to allow password changing from Windows to
+# also update the Linux system password.
+# NOTE: Use these with 'encrypt passwords' and 'smb passwd file' above.
+# NOTE2: You do NOT need these to allow workstations to change only
+#        the encrypted SMB passwords. They allow the Unix password
+#        to be kept in sync with the SMB password.
+;  unix password sync = Yes
+# You either need to setup a passwd program and passwd chat, or
+# enable pam password change
+;  pam password change = yes
+#  passwd program = /usr/bin/passwd '%u'
+;  passwd chat = *New*UNIX*password* %n\n *Re*ype*new*UNIX*password* %n\n \
+;*passwd:*all*authentication*tokens*updated*successfully*
+
+# Unix users can map to different SMB User names
+;  username map = /etc/samba/smbusers
+
+# Using the following line enables you to customise your configuration
+# on a per machine basis. The %m gets replaced with the netbios name
+# of the machine that is connecting
+#   include = /etc/samba/smb.conf.%m
+
+# Options for using winbind. Winbind allows you to do all account and
+# authentication from a Windows or samba domain controller, creating
+# accounts on the fly, and maintaining a mapping of Windows RIDs to unix uid's 
+# and gid's. winbind uid and winbind gid are the only required parameters.
+#
+# winbind uid is the range of uid's winbind can use when mapping RIDs to uid's
+#  idmap uid = 10000-20000
+#
+# winbind gid is the range of uid's winbind can use when mapping RIDs to gid's
+#  idmap gid = 10000-20000
+#
+# winbind separator is the character a user must use between their domain
+# name and username, defaults to "\"
+#  winbind separator = +
+#
+# winbind use default domain allows you to have winbind return usernames
+# in the form user instead of DOMAIN+user for the domain listed in the
+# workgroup parameter.
+#  winbind use default domain = yes
+#
+# template homedir determines the home directory for winbind users, with 
+# %D expanding to their domain name and %U expanding to their username:
+#  template homedir = /home/%D/%U
+
+# When using winbind, you may want to have samba create home directories
+# on the fly for authenticated users. Ensure that /etc/pam.d/samba is
+# using 'service=system-auth-winbind' in pam_stack modules, and then
+# enable obedience of pam restrictions below:
+#  obey pam restrictions = yes
+
+#
+# template shell determines the shell users authenticated by winbind get
+#  template shell = /bin/bash
+
+# 5. Browser Control and Networking Options:
+# Most people will find that this option gives better performance.
+# See speed.txt and the manual pages for details
+   socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192
+
+# Configure Samba to use multiple interfaces
+# If you have multiple network interfaces then you must list them
+# here. See the man page for details.
+#   interfaces = 192.168.12.2/24 192.168.13.2/24 
+
+# Configure remote browse list synchronisation here
+#  request announcement to, or browse list sync from:
+#       a specific host or from / to a whole subnet (see below)
+#   remote browse sync = 192.168.3.25 192.168.5.255
+# Cause this host to announce itself to local subnets here
+#   remote announce = 192.168.1.255 192.168.2.44
+
+# set local master to no if you don't want Samba to become a master
+# browser on your network. Otherwise the normal election rules apply
+#   local master = no
+
+# OS Level determines the precedence of this server in master browser
+# elections. The default value should be reasonable
+#   os level = 33
+
+# Domain Master specifies Samba to be the Domain Master Browser. This
+# allows Samba to collate browse lists between subnets. Don't use this
+# if you already have a Windows NT domain controller doing this job
+#   domain master = yes 
+
+# Preferred Master causes Samba to force a local browser election on startup
+# and gives it a slightly higher chance of winning the election
+#   preferred master = yes
+
+# 6. Domain Control Options:
+# Enable this if you want Samba to be a domain logon server for 
+# Windows95 workstations or Primary Domain Controller for WinNT and Win2k
+#   domain logons = yes
+
+# if you enable domain logons then you may want a per-machine or
+# per user logon script
+# run a specific logon batch file per workstation (machine)
+#   logon script = %m.bat
+# run a specific logon batch file per username
+#   logon script = %u.bat
+
+# Where to store roaming profiles for WinNT and Win2k
+#        %L substitutes for this servers netbios name, %u is username
+#        You must uncomment the [Profiles] share below
+#   logon path = \\%L\Profiles\%u
+
+# Where to store roaming profiles for Win9x. Be careful with this as it also
+# impacts where Win2k finds it's /HOME share
+# logon home = \\%L\%u\.profile
+
+
+# The add user script is used by a domain member to add local user accounts
+# that have been authenticated by the domain controller, or when adding
+# users via the Windows NT Tools (ie User Manager for Domains).
+
+# Scripts for file (passwd, smbpasswd) backend:
+# add user script = /usr/sbin/useradd -s /bin/false '%u'
+# delete user script = /usr/sbin/userdel '%s'
+# add user to group script = /usr/bin/gpasswd -a '%u' '%g'
+# delete user from group script = /usr/bin/gpasswd -d '%u' '%g'
+# set primary group script = /usr/sbin/usermod -g '%g' '%u'
+# add group script = /usr/sbin/groupadd %g && getent group '%g'|awk -F: '{print $3}'
+# delete group script = /usr/sbin/groupdel '%g'
+
+# Scripts for LDAP backend (assumes nss_ldap is in use on the domain controller,
+# and needs configuration in smbldap_conf.pm
+# add user script = /usr/sbin/smbldap-useradd -m '%u'
+# delete user script = /usr/sbin/smbldap-userdel '%u'
+# add user to group script = /usr/sbin/smbldap-groupmod -m '%u' '%g'
+# delete user from group script = /usr/sbin/smbldap-groupmod -x '%u' '%g'
+# set primary group script = /usr/sbin/smbldap-usermod -g '%g' '%u'
+# add group script = /usr/sbin/smbldap-groupadd '%g' && /usr/sbin/smbldap-groupshow %g|awk '/^gidNumber:/ {print $2}'
+# delete group script = /usr/sbin/smbldap-groupdel '%g'
+
+
+# The add machine script is use by a samba server configured as a domain
+# controller to add local machine accounts when adding machines to the domain.
+# The script must work from the command line when replacing the macros,
+# or the operation will fail. Check that groups exist if forcing a group.
+# Script for domain controller for adding machines:
+# add machine script = /usr/sbin/useradd -d /dev/null -g machines -c 'Machine Account' -s /bin/false -M '%u'
+# Script for domain controller with LDAP backend for adding machines (please
+# configure in /etc/samba/smbldap_conf.pm first):
+# add machine script = /usr/sbin/smbldap-useradd -w -d /dev/null -c 'Machine Account' -s /bin/false '%u'
+
+# Domain groups:
+# Domain groups are now configured by using the 'net groupmap' tool
+
+# Enable priveleges, ie allowing members of Domain Admins to join machines
+# to the domain
+# enable privileges = yes
+
+# Samba Password Database configuration:
+# Samba now has runtime-configurable password database backends. Multiple
+# passdb backends may be used, but users will only be added to the first one
+# Default:
+# passdb backend = smbpasswd guest
+# TDB backen with fallback to smbpasswd and guest
+# passdb backend = tdbsam smbpasswd guest
+# LDAP with fallback to smbpasswd guest
+# Enable SSL by using an ldaps url, or enable tls with 'ldap ssl' below.
+# passdb backend = ldapsam:ldaps://ldap.mydomain.com smbpasswd guest
+# Use the samba2 LDAP schema:
+# passdb backend = ldapsam_compat:ldaps://ldap.mydomain.com smbpasswd guest
+
+# Idmap settings (set idmap uid and idmap gid above):
+# Idmap backend to use:
+# idmap backend = ldap:ldap://ldap.mydomain.com
+
+# LDAP configuration for Domain Controlling:
+# The account (dn) that samba uses to access the LDAP server
+# This account needs to have write access to the LDAP tree
+# You will need to give samba the password for this dn, by 
+# running 'smbpasswd -w mypassword'
+# ldap admin dn = cn=root,dc=mydomain,dc=com
+# ldap ssl = start_tls
+# start_tls should run on 389, but samba defaults incorrectly to 636
+# ldap port = 389
+# ldap suffix = dc=mydomain,dc=com
+# Seperate suffixes are available for machines, users, groups, and idmap, if 
+# ldap suffix appears first, it is appended to the specific suffix.
+# Example for a unix-ish directory layout:
+# ldap machine suffix = ou=Hosts
+# ldap user suffix = ou=People
+# ldap group suffix = ou=Group
+# ldap idmap suffix = ou=Idmap
+# Example for AD-ish layout:
+# ldap machine suffix = cn=Computers
+# ldap user suffix = cn=Users
+# ldap group suffix = cn=Groups
+# ldap idmap suffix = cn=Idmap
+
+
+# 7. Name Resolution Options:
+# All NetBIOS names must be resolved to IP Addresses
+# 'Name Resolve Order' allows the named resolution mechanism to be specified
+# the default order is "host lmhosts wins bcast". "host" means use the unix
+# system gethostbyname() function call that will use either /etc/hosts OR
+# DNS or NIS depending on the settings of /etc/host.config, /etc/nsswitch.conf
+# and the /etc/resolv.conf file. "host" therefore is system configuration
+# dependant. This parameter is most often of use to prevent DNS lookups
+# in order to resolve NetBIOS names to IP Addresses. Use with care!
+# The example below excludes use of name resolution for machines that are NOT
+# on the local network segment
+# - OR - are not deliberately to be known via lmhosts or via WINS.
+# name resolve order = wins lmhosts bcast
+
+# Windows Internet Name Serving Support Section:
+# WINS Support - Tells the NMBD component of Samba to enable it's WINS Server
+#   wins support = yes
+
+# WINS Server - Tells the NMBD components of Samba to be a WINS Client
+#       Note: Samba can be either a WINS Server, or a WINS Client, but NOT both
+#   wins server = w.x.y.z
+
+# WINS Proxy - Tells Samba to answer name resolution queries on
+# behalf of a non WINS capable client, for this to work there must be
+# at least one  WINS Server on the network. The default is NO.
+#   wins proxy = yes
+
+# DNS Proxy - tells Samba whether or not to try to resolve NetBIOS names
+# via DNS nslookups. The built-in default for versions 1.9.17 is yes,
+# this has been changed in version 1.9.18 to no.
+   dns proxy = no 
+
+# 8. File Naming Options:
+# Case Preservation can be handy - system default is _no_
+# NOTE: These can be set on a per share basis
+#  preserve case = no
+#  short preserve case = no
+# Default case is normally upper case for all DOS files
+#  default case = lower
+# Be very careful with case sensitivity - it can break things!
+#  case sensitive = no
+
+# Enabling internationalization:
+# you can match a Windows code page with a UNIX character set.
+# Windows: 437 (US), 737 (GREEK), 850 (Latin1 - Western European),
+# 852 (Eastern Eu.), 861 (Icelandic), 932 (Cyrillic - Russian),
+# 936 (Japanese - Shift-JIS), 936 (Simpl. Chinese), 949 (Korean Hangul),
+# 950 (Trad. Chin.).
+# UNIX: ISO8859-1 (Western European), ISO8859-2 (Eastern Eu.),
+# ISO8859-5 (Russian Cyrillic), KOI8-R (Alt-Russ. Cyril.)
+# This is an example for french users:
+#   dos charset = 850
+#   unix charset = ISO8859-1
+
+
+#============================ Share Definitions ==============================
+[homes]
+   comment = Home Directories
+   browseable = no
+   writable = yes
+# You can enable VFS recycle bin and on-access virus-scanning on a per 
+# share basis:
+# Uncomment the next 2 lines (make sure you create a .recycle folder in 
+# the base of the share and ensure all users will have write access to it.
+# For virus scanning, install samba-vscan-clamav and ensure the clamd service
+# is running
+#   vfs objects = vscan-clamav recycle
+#   vscan-clamav: config-file = /etc/samba/vscan-clamav.conf
+
+# Un-comment the following and create the netlogon directory for Domain Logons
+# [netlogon]
+#   comment = Network Logon Service
+#   path = /var/lib/samba/netlogon
+#   guest ok = yes
+#   writable = no
+
+#Uncomment the following 2 lines if you would like your login scripts to
+#be created dynamically by ntlogon (check that you have it in the correct
+#location (the default of the ntlogon rpm available in contribs)
+#root preexec = /usr/bin/ntlogon -u '%u' -g '%g' -o %a -d /var/lib/samba/netlogon/
+#root postexec = rm -f '/var/lib/samba/netlogon/%u.bat'
+
+# Un-comment the following to provide a specific roving profile share
+# the default is to use the user's home directory
+#[Profiles]
+#    path = /var/lib/samba/profiles
+#    browseable = no
+#    guest ok = yes
+#    writable = yes
+# This script can be enabled to create profile directories on the fly
+# You may want to turn off guest acces if you enable this, as it
+# hasn't been thoroughly tested.
+#root preexec = PROFILE='/var/lib/samba/profiles/%u'; if [ ! -e $PROFILE ]; \
+#                then mkdir -pm700 $PROFILE; chown '%u':'%g' $PROFILE;fi
+# If you want read-only profiles, fake permissions so windows clients think
+# they have written to the files
+# vfs objects = fake_perms
+
+# NOTE: If you have a CUPS print system there is no need to 
+# specifically define each individual printer.
+# You must configure the samba printers with the appropriate Windows
+# drivers on your Windows clients or upload the printer driver to the
+# server from Windows (NT/2000/XP). On the Samba server no filtering is
+# done. If you wish that the server provides the driver and the clients
+# send PostScript ("Generic PostScript Printer" under Windows), you have
+# to use 'printcap name = cups' or swap the 'print command' line below 
+# with the commented one. Note that print commands only work if not using 
+# 'printing=cups'
+[printers]
+   comment = All Printers
+   path = /var/spool/samba
+   browseable = no
+# to allow user 'guest account' to print.
+   guest ok = yes
+   writable = no
+   printable = yes
+   create mode = 0700
+# =====================================
+# print command: see above for details.
+# =====================================
+   print command = lpr-cups -P %p -o raw %s -r   # using client side printer drivers.
+#   print command = lpr-cups -P %p %s # using cups own drivers (use generic PostScript on clients).
+# If you install drivers on the server, you will want to uncomment this so
+# clients request the driver 
+   use client driver = yes
+
+# This share is used for Windows NT-style point-and-print support.
+# To be able to install drivers, you need to be either root, or listed
+# in the printer admin parameter above. Note that you also need write access
+# to the directory and share definition to be able to upload the drivers.
+# For more information on this, please see the Printing Support Section of
+# /usr/share/doc/samba-<version>/docs/Samba-HOWTO-Collection.pdf 
+#
+# A special case is using the CUPS Windows Postscript driver, which allows
+# all features available via CUPS on the client, by publishing the ppd file
+# and the cups driver by using the 'cupsaddsmb' tool. This requires the
+# installation of the CUPS driver (http://www.cups.org/windows.php) 
+# on the server, but doesn't require you to use Windows at all :-).
+[print$]
+   path = /var/lib/samba/printers
+   browseable = yes
+   write list = @adm root
+   guest ok = yes
+   inherit permissions = yes
+   # Settings suitable for Winbind:
+   # write list = @"Domain Admins" root
+   # force group = +@"Domain Admins"
+
+# A useful application of samba is to make a PDF-generation service
+# To streamline this, install windows postscript drivers (preferably colour)
+# on the samba server, so that clients can automatically install them.
+# Note that this only works if 'printing' is *not* set to 'cups'
+
+[pdf-gen]
+   path = /var/tmp
+   guest ok = No
+   printable = Yes
+   comment = PDF Generator (only valid users)
+   printing = bsd
+   #print command = /usr/share/samba/scripts/print-pdf file path win_path recipient IP &
+   print command = /usr/share/samba/scripts/print-pdf "%s" "%H" "//%L/%u" "%m" "%I" "%J" &
+    lpq command = /bin/true
+
+# A share allowing administrators to set ACLs on, or access for backup purposes
+# all files (as root).
+#[admin] 
+#  path = /
+#  admin users = @"Domain Admins"
+#  valid users = @"Domain Admins"
+#  browseable = no
+#  writeable = yes 
+
+# This one is useful for people to share files
+;[tmp]
+;   comment = Temporary file space
+;   path = /tmp
+;   read only = no
+;   public = yes
+
+# A publicly accessible directory, but read only, except for people in
+# the "staff" group
+;[public]
+;   comment = Public Stuff
+;   path = /home/samba/public
+;   public = yes
+;   writable = no
+;   write list = @staff
+# Audited directory through experimental VFS audit.so module:
+# Uncomment next line.
+#   vfs object = /usr/lib/samba/vfs/audit.so
+
+# Other examples. 
+#
+# A private printer, usable only by Fred. Spool data will be placed in Fred's
+# home directory. Note that fred must have write access to the spool directory,
+# wherever it is.
+;[fredsprn]
+;   comment = Fred's Printer
+;   valid users = fred
+;   path = /homes/fred
+;   printer = freds_printer
+;   public = no
+;   writable = no
+;   printable = yes
+
+# A private directory, usable only by Fred. Note that Fred requires write
+# access to the directory.
+;[fredsdir]
+;   comment = Fred's Service
+;   path = /usr/somewhere/private
+;   valid users = fred
+;   public = no
+;   writable = yes
+;   printable = no
+
+# a service which has a different directory for each machine that connects
+# this allows you to tailor configurations to incoming machines. You could
+# also use the %u option to tailor it by user name.
+# The %m gets replaced with the machine name that is connecting.
+;[pchome]
+;  comment = PC Directories
+;  path = /usr/pc/%m
+;  public = no
+;  writable = yes
+
+# The following two entries demonstrate how to share a directory so that two
+# users can place files there that will be owned by the specific users. In this
+# setup, the directory should be writable by both users and should have the
+# sticky bit set on it to prevent abuse. Obviously this could be extended to
+# as many users as required.
+;[myshare]
+;   comment = Mary's and Fred's stuff
+;   path = /usr/somewhere/shared
+;   valid users = mary fred
+;   public = no
+;   writable = yes
+;   printable = no
+;   create mask = 0765
+
--- samba-3.0.23/packaging/Mandrake/smbprint.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/smbprint	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,77 @@
+#!/bin/sh
+
+# This script is an input filter for printcap printing on a unix machine. It
+# uses the smbclient program to print the file to the specified smb-based 
+# server and service.
+# For example you could have a printcap entry like this
+#
+# smb:lp=/dev/null:sd=/usr/spool/smb:sh:if=/usr/local/samba/smbprint
+#
+# which would create a unix printer called "smb" that will print via this 
+# script. You will need to create the spool directory /usr/spool/smb with
+# appropriate permissions and ownerships for your system.
+
+# Set these to the server and service you wish to print to 
+# In this example I have a WfWg PC called "lapland" that has a printer 
+# exported called "printer" with no password.
+
+#
+# Script further altered by hamiltom@ecnz.co.nz (Michael Hamilton)
+# so that the server, service, and password can be read from 
+# a /var/spool/lpd/PRINTNAME/.config file.
+#
+# In order for this to work the /etc/printcap entry must include an 
+# accounting file (af=...):
+#
+#   cdcolour:\
+#	:cm=CD IBM Colorjet on 6th:\
+#	:sd=/var/spool/lpd/cdcolour:\
+#	:af=/var/spool/lpd/cdcolour/acct:\
+#	:if=/usr/local/etc/smbprint:\
+#	:mx=0:\
+#	:lp=/dev/null:
+#
+# The /usr/var/spool/lpd/PRINTNAME/.config file should contain:
+#   server=PC_SERVER
+#   service=PR_SHARENAME
+#   password="password"
+#
+# E.g.
+#   server=PAULS_PC
+#   service=CJET_371
+#   password=""
+
+#
+# Debugging log file, change to /dev/null if you like.
+#
+# logfile=/tmp/smb-print.log
+logfile=/dev/null
+
+
+#
+# The last parameter to the filter is the accounting file name.
+#   Extract the directory name from the file name.
+#   Concat this with /.config to get the config file.
+#
+eval acct_file=\${$#}
+spool_dir=`dirname $acct_file` 
+config_file=$spool_dir/.config
+
+# Should read the following variables set in the config file:
+#   server
+#   service
+#   password
+eval `cat $config_file`
+
+#
+# Some debugging help, change the >> to > if you want to same space.
+#
+echo "server $server, service $service" >> $logfile
+
+(
+# NOTE You may wish to add the line `echo translate' if you want automatic
+# CR/LF translation when printing.
+#       echo translate
+	echo "print -"
+	cat
+) | /usr/bin/smbclient "//$server/$service" $password -U $server -N >> $logfile
--- samba-3.0.23/packaging/Mandrake/smbusers.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/smbusers	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,3 @@
+# Unix_name = SMB_name1 SMB_name2 ...
+root = administrator admin
+nobody = guest pcguest smbguest
--- samba-3.0.23/packaging/Mandrake/smb-winbind.conf.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/smb-winbind.conf	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,539 @@
+
+# This is the main Samba configuration file. You should read the
+# smb.conf(5) manual page in order to understand the options listed
+# here. Samba has a huge number of configurable options (perhaps too
+# many!) most of which are not shown in this example
+#
+# Any line which starts with a ; (semi-colon) or a # (hash) 
+# is a comment and is ignored. In this example we will use a #
+# for commentry and a ; for parts of the config file that you
+# may wish to enable
+#
+# NOTE: Whenever you modify this file you should run the command "testparm"
+# to check that you have not made any basic syntactic errors. 
+#
+#======================= Global Settings =====================================
+[global]
+
+# 1. Server Naming Options:
+# workgroup = NT-Domain-Name or Workgroup-Name
+   workgroup = MDKGROUP
+
+# netbios name is the name you will see in "Network Neighbourhood",
+# but defaults to your hostname
+#  netbios name = <name_of_this_server>
+
+# server string is the equivalent of the NT Description field
+   server string = Samba Server %v
+
+# Message command is run by samba when a "popup" message is sent to it.
+# The example below is for use with LinPopUp:
+; message command = /usr/bin/linpopup "%f" "%m" %s; rm %s
+
+# 2. Printing Options:
+# CHANGES TO ENABLE PRINTING ON ALL CUPS PRINTERS IN THE NETWORK
+# (as cups is now used in linux-mandrake 7.2 by default)
+# if you want to automatically load your printer list rather
+# than setting them up individually then you'll need this
+   printcap name = lpstat
+   load printers = yes
+
+# printcap cache time, so samba will automatically load new cups printers
+   printcap cache time = 60
+
+# It should not be necessary to spell out the print system type unless
+# yours is non-standard. Currently supported print systems include:
+# bsd, sysv, plp, lprng, aix, hpux, qnx, cups
+   printing = cups
+
+# Samba 2.2 supports the Windows NT-style point-and-print feature. To
+# use this, you need to be able to upload print drivers to the samba
+# server. The printer admins (or root) may install drivers onto samba.
+# Note that this feature uses the print$ share, so you will need to 
+# enable it below.
+# printer admin = @<group> <user>
+#  printer admin = @adm
+# This should work well for winbind:
+   printer admin = @"Domain Admins"
+
+# 3. Logging Options:
+# this tells Samba to use a separate log file for each machine
+# that connects
+   log file = /var/log/samba/log.%m
+
+# Put a capping on the size of the log files (in Kb).
+   max log size = 50
+
+# Set the log (verbosity) level (0 <= log level <= 10)
+# log level = 3
+
+# 4. Security and Domain Membership Options:
+# This option is important for security. It allows you to restrict
+# connections to machines which are on your local network. The
+# following example restricts access to two C class networks and
+# the "loopback" interface. For more examples of the syntax see
+# the smb.conf man page. Do not enable this if (tcp/ip) name resolution does
+# not work for all the hosts in your network.
+#   hosts allow = 192.168.1. 192.168.2. 127.
+
+# Uncomment this if you want a guest account, you must add this to /etc/passwd
+# otherwise the user "nobody" is used
+#  guest account = pcguest
+# Allow users to map to guest:
+  map to guest = bad user
+
+# Security mode. Most people will want user level security. See
+# security_level.txt for details.
+   security = domain
+# Use password server option only with security = server or security = domain
+# When using security = domain, you should use password server = *
+#   password server = <NT-Server-Name>
+#   password server = *
+
+# Password Level allows matching of _n_ characters of the password for
+# all combinations of upper and lower case.
+#  password level = 8
+#  username level = 8
+
+# You may wish to use password encryption. Please read
+# ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation.
+# Do not enable this option unless you have read those documents
+# Encrypted passwords are required for any use of samba in a Windows NT domain
+# The smbpasswd file is only required by a server doing authentication, thus
+# members of a domain do not need one.
+  encrypt passwords = yes
+  smb passwd file = /etc/samba/smbpasswd
+
+# The following are needed to allow password changing from Windows to
+# also update the Linux system password.
+# NOTE: Use these with 'encrypt passwords' and 'smb passwd file' above.
+# NOTE2: You do NOT need these to allow workstations to change only
+#        the encrypted SMB passwords. They allow the Unix password
+#        to be kept in sync with the SMB password.
+;  unix password sync = Yes
+# You either need to setup a passwd program and passwd chat, or
+# enable pam password change
+;  pam password change = yes
+#  passwd program = /usr/bin/passwd '%u'
+;  passwd chat = *New*UNIX*password* %n\n *Re*ype*new*UNIX*password* %n\n \
+;*passwd:*all*authentication*tokens*updated*successfully*
+
+# Unix users can map to different SMB User names
+;  username map = /etc/samba/smbusers
+
+# Using the following line enables you to customise your configuration
+# on a per machine basis. The %m gets replaced with the netbios name
+# of the machine that is connecting
+#   include = /etc/samba/smb.conf.%m
+
+# Options for using winbind. Winbind allows you to do all account and
+# authentication from a Windows or samba domain controller, creating
+# accounts on the fly, and maintaining a mapping of Windows RIDs to unix uid's 
+# and gid's. winbind uid and winbind gid are the only required parameters.
+#
+# winbind uid is the range of uid's winbind can use when mapping RIDs to uid's
+#  idmap uid = 10000-20000
+#
+# winbind gid is the range of uid's winbind can use when mapping RIDs to gid's
+#  idmap gid = 10000-20000
+#
+# winbind separator is the character a user must use between their domain
+# name and username, defaults to "\"
+#  winbind separator = +
+#
+# winbind use default domain allows you to have winbind return usernames
+# in the form user instead of DOMAIN+user for the domain listed in the
+# workgroup parameter.
+#  winbind use default domain = yes
+#
+# template homedir determines the home directory for winbind users, with 
+# %D expanding to their domain name and %U expanding to their username:
+#  template homedir = /home/%D/%U
+
+# When using winbind, you may want to have samba create home directories
+# on the fly for authenticated users. Ensure that /etc/pam.d/samba is
+# using 'service=system-auth-winbind' in pam_stack modules, and then
+# enable obedience of pam restrictions below:
+#  obey pam restrictions = yes
+
+#
+# template shell determines the shell users authenticated by winbind get
+#  template shell = /bin/bash
+
+# 5. Browser Control and Networking Options:
+# Most people will find that this option gives better performance.
+# See speed.txt and the manual pages for details
+   socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192
+
+# Configure Samba to use multiple interfaces
+# If you have multiple network interfaces then you must list them
+# here. See the man page for details.
+#   interfaces = 192.168.12.2/24 192.168.13.2/24 
+
+# Configure remote browse list synchronisation here
+#  request announcement to, or browse list sync from:
+#       a specific host or from / to a whole subnet (see below)
+#   remote browse sync = 192.168.3.25 192.168.5.255
+# Cause this host to announce itself to local subnets here
+#   remote announce = 192.168.1.255 192.168.2.44
+
+# set local master to no if you don't want Samba to become a master
+# browser on your network. Otherwise the normal election rules apply
+#   local master = no
+
+# OS Level determines the precedence of this server in master browser
+# elections. The default value should be reasonable
+#   os level = 33
+
+# Domain Master specifies Samba to be the Domain Master Browser. This
+# allows Samba to collate browse lists between subnets. Don't use this
+# if you already have a Windows NT domain controller doing this job
+#   domain master = yes 
+
+# Preferred Master causes Samba to force a local browser election on startup
+# and gives it a slightly higher chance of winning the election
+#   preferred master = yes
+
+# 6. Domain Control Options:
+# Enable this if you want Samba to be a domain logon server for 
+# Windows95 workstations or Primary Domain Controller for WinNT and Win2k
+#   domain logons = yes
+
+# if you enable domain logons then you may want a per-machine or
+# per user logon script
+# run a specific logon batch file per workstation (machine)
+#   logon script = %m.bat
+# run a specific logon batch file per username
+#   logon script = %u.bat
+
+# Where to store roaming profiles for WinNT and Win2k
+#        %L substitutes for this servers netbios name, %u is username
+#        You must uncomment the [Profiles] share below
+#   logon path = \\%L\Profiles\%u
+
+# Where to store roaming profiles for Win9x. Be careful with this as it also
+# impacts where Win2k finds it's /HOME share
+# logon home = \\%L\%u\.profile
+
+
+# The add user script is used by a domain member to add local user accounts
+# that have been authenticated by the domain controller, or when adding
+# users via the Windows NT Tools (ie User Manager for Domains).
+
+# Scripts for file (passwd, smbpasswd) backend:
+# add user script = /usr/sbin/useradd -s /bin/false '%u'
+# delete user script = /usr/sbin/userdel '%s'
+# add user to group script = /usr/bin/gpasswd -a '%u' '%g'
+# delete user from group script = /usr/bin/gpasswd -d '%u' '%g'
+# set primary group script = /usr/sbin/usermod -g '%g' '%u'
+# add group script = /usr/sbin/groupadd %g && getent group '%g'|awk -F: '{print $3}'
+# delete group script = /usr/sbin/groupdel '%g'
+
+# Scripts for LDAP backend (assumes nss_ldap is in use on the domain controller,
+# and needs configuration in smbldap_conf.pm
+# add user script = /usr/sbin/smbldap-useradd -m '%u'
+# delete user script = /usr/sbin/smbldap-userdel '%u'
+# add user to group script = /usr/sbin/smbldap-groupmod -m '%u' '%g'
+# delete user from group script = /usr/sbin/smbldap-groupmod -x '%u' '%g'
+# set primary group script = /usr/sbin/smbldap-usermod -g '%g' '%u'
+# add group script = /usr/sbin/smbldap-groupadd '%g' && /usr/sbin/smbldap-groupshow %g|awk '/^gidNumber:/ {print $2}'
+# delete group script = /usr/sbin/smbldap-groupdel '%g'
+
+
+# The add machine script is use by a samba server configured as a domain
+# controller to add local machine accounts when adding machines to the domain.
+# The script must work from the command line when replacing the macros,
+# or the operation will fail. Check that groups exist if forcing a group.
+# Script for domain controller for adding machines:
+# add machine script = /usr/sbin/useradd -d /dev/null -g machines -c 'Machine Account' -s /bin/false -M '%u'
+# Script for domain controller with LDAP backend for adding machines (please
+# configure in /etc/samba/smbldap_conf.pm first):
+# add machine script = /usr/sbin/smbldap-useradd -w -d /dev/null -c 'Machine Account' -s /bin/false '%u'
+
+# Domain groups:
+# Domain groups are now configured by using the 'net groupmap' tool
+
+# Enable priveleges, ie allowing members of Domain Admins to join machines
+# to the domain
+# enable privileges = yes
+
+# Samba Password Database configuration:
+# Samba now has runtime-configurable password database backends. Multiple
+# passdb backends may be used, but users will only be added to the first one
+# Default:
+# passdb backend = smbpasswd guest
+# TDB backen with fallback to smbpasswd and guest
+# passdb backend = tdbsam smbpasswd guest
+# LDAP with fallback to smbpasswd guest
+# Enable SSL by using an ldaps url, or enable tls with 'ldap ssl' below.
+# passdb backend = ldapsam:ldaps://ldap.mydomain.com smbpasswd guest
+# Use the samba2 LDAP schema:
+# passdb backend = ldapsam_compat:ldaps://ldap.mydomain.com smbpasswd guest
+
+# Idmap settings (set idmap uid and idmap gid above):
+# Idmap backend to use:
+# idmap backend = ldap:ldap://ldap.mydomain.com
+
+# LDAP configuration for Domain Controlling:
+# The account (dn) that samba uses to access the LDAP server
+# This account needs to have write access to the LDAP tree
+# You will need to give samba the password for this dn, by 
+# running 'smbpasswd -w mypassword'
+# ldap admin dn = cn=root,dc=mydomain,dc=com
+# ldap ssl = start_tls
+# start_tls should run on 389, but samba defaults incorrectly to 636
+# ldap port = 389
+# ldap suffix = dc=mydomain,dc=com
+# Seperate suffixes are available for machines, users, groups, and idmap, if 
+# ldap suffix appears first, it is appended to the specific suffix.
+# Example for a unix-ish directory layout:
+# ldap machine suffix = ou=Hosts
+# ldap user suffix = ou=People
+# ldap group suffix = ou=Group
+# ldap idmap suffix = ou=Idmap
+# Example for AD-ish layout:
+# ldap machine suffix = cn=Computers
+# ldap user suffix = cn=Users
+# ldap group suffix = cn=Groups
+# ldap idmap suffix = cn=Idmap
+
+
+# 7. Name Resolution Options:
+# All NetBIOS names must be resolved to IP Addresses
+# 'Name Resolve Order' allows the named resolution mechanism to be specified
+# the default order is "host lmhosts wins bcast". "host" means use the unix
+# system gethostbyname() function call that will use either /etc/hosts OR
+# DNS or NIS depending on the settings of /etc/host.config, /etc/nsswitch.conf
+# and the /etc/resolv.conf file. "host" therefore is system configuration
+# dependant. This parameter is most often of use to prevent DNS lookups
+# in order to resolve NetBIOS names to IP Addresses. Use with care!
+# The example below excludes use of name resolution for machines that are NOT
+# on the local network segment
+# - OR - are not deliberately to be known via lmhosts or via WINS.
+# name resolve order = wins lmhosts bcast
+
+# Windows Internet Name Serving Support Section:
+# WINS Support - Tells the NMBD component of Samba to enable it's WINS Server
+#   wins support = yes
+
+# WINS Server - Tells the NMBD components of Samba to be a WINS Client
+#       Note: Samba can be either a WINS Server, or a WINS Client, but NOT both
+#   wins server = w.x.y.z
+
+# WINS Proxy - Tells Samba to answer name resolution queries on
+# behalf of a non WINS capable client, for this to work there must be
+# at least one  WINS Server on the network. The default is NO.
+#   wins proxy = yes
+
+# DNS Proxy - tells Samba whether or not to try to resolve NetBIOS names
+# via DNS nslookups. The built-in default for versions 1.9.17 is yes,
+# this has been changed in version 1.9.18 to no.
+   dns proxy = no 
+
+# 8. File Naming Options:
+# Case Preservation can be handy - system default is _no_
+# NOTE: These can be set on a per share basis
+#  preserve case = no
+#  short preserve case = no
+# Default case is normally upper case for all DOS files
+#  default case = lower
+# Be very careful with case sensitivity - it can break things!
+#  case sensitive = no
+
+# Enabling internationalization:
+# you can match a Windows code page with a UNIX character set.
+# Windows: 437 (US), 737 (GREEK), 850 (Latin1 - Western European),
+# 852 (Eastern Eu.), 861 (Icelandic), 932 (Cyrillic - Russian),
+# 936 (Japanese - Shift-JIS), 936 (Simpl. Chinese), 949 (Korean Hangul),
+# 950 (Trad. Chin.).
+# UNIX: ISO8859-1 (Western European), ISO8859-2 (Eastern Eu.),
+# ISO8859-5 (Russian Cyrillic), KOI8-R (Alt-Russ. Cyril.)
+# This is an example for french users:
+#   dos charset = 850
+#   unix charset = ISO8859-1
+
+
+#============================ Share Definitions ==============================
+[homes]
+   comment = Home Directories
+   browseable = no
+   writable = yes
+# You can enable VFS recycle bin and on-access virus-scanning on a per 
+# share basis:
+# Uncomment the next 2 lines (make sure you create a .recycle folder in 
+# the base of the share and ensure all users will have write access to it.
+# For virus scanning, install samba-vscan-clamav and ensure the clamd service
+# is running
+#   vfs objects = vscan-clamav recycle
+#   vscan-clamav: config-file = /etc/samba/vscan-clamav.conf
+
+# Un-comment the following and create the netlogon directory for Domain Logons
+# [netlogon]
+#   comment = Network Logon Service
+#   path = /var/lib/samba/netlogon
+#   guest ok = yes
+#   writable = no
+
+#Uncomment the following 2 lines if you would like your login scripts to
+#be created dynamically by ntlogon (check that you have it in the correct
+#location (the default of the ntlogon rpm available in contribs)
+#root preexec = /usr/bin/ntlogon -u '%u' -g '%g' -o %a -d /var/lib/samba/netlogon/
+#root postexec = rm -f '/var/lib/samba/netlogon/%u.bat'
+
+# Un-comment the following to provide a specific roving profile share
+# the default is to use the user's home directory
+#[Profiles]
+#    path = /var/lib/samba/profiles
+#    browseable = no
+#    guest ok = yes
+#    writable = yes
+# This script can be enabled to create profile directories on the fly
+# You may want to turn off guest acces if you enable this, as it
+# hasn't been thoroughly tested.
+#root preexec = PROFILE='/var/lib/samba/profiles/%u'; if [ ! -e $PROFILE ]; \
+#                then mkdir -pm700 $PROFILE; chown '%u':'%g' $PROFILE;fi
+# If you want read-only profiles, fake permissions so windows clients think
+# they have written to the files
+# vfs objects = fake_perms
+
+# NOTE: If you have a CUPS print system there is no need to 
+# specifically define each individual printer.
+# You must configure the samba printers with the appropriate Windows
+# drivers on your Windows clients or upload the printer driver to the
+# server from Windows (NT/2000/XP). On the Samba server no filtering is
+# done. If you wish that the server provides the driver and the clients
+# send PostScript ("Generic PostScript Printer" under Windows), you have
+# to use 'printcap name = cups' or swap the 'print command' line below 
+# with the commented one. Note that print commands only work if not using 
+# 'printing=cups'
+[printers]
+   comment = All Printers
+   path = /var/spool/samba
+   browseable = no
+# to allow user 'guest account' to print.
+   guest ok = yes
+   writable = no
+   printable = yes
+   create mode = 0700
+# =====================================
+# print command: see above for details.
+# =====================================
+   print command = lpr-cups -P %p -o raw %s -r   # using client side printer drivers.
+#   print command = lpr-cups -P %p %s # using cups own drivers (use generic PostScript on clients).
+# If you install drivers on the server, you will want to uncomment this so
+# clients request the driver 
+   use client driver = yes
+
+# This share is used for Windows NT-style point-and-print support.
+# To be able to install drivers, you need to be either root, or listed
+# in the printer admin parameter above. Note that you also need write access
+# to the directory and share definition to be able to upload the drivers.
+# For more information on this, please see the Printing Support Section of
+# /usr/share/doc/samba-<version>/docs/Samba-HOWTO-Collection.pdf 
+#
+# A special case is using the CUPS Windows Postscript driver, which allows
+# all features available via CUPS on the client, by publishing the ppd file
+# and the cups driver by using the 'cupsaddsmb' tool. This requires the
+# installation of the CUPS driver (http://www.cups.org/windows.php) 
+# on the server, but doesn't require you to use Windows at all :-).
+[print$]
+   path = /var/lib/samba/printers
+   browseable = yes
+   write list = @adm root
+   guest ok = yes
+   inherit permissions = yes
+   # Settings suitable for Winbind:
+   # write list = @"Domain Admins" root
+   # force group = +@"Domain Admins"
+
+# A useful application of samba is to make a PDF-generation service
+# To streamline this, install windows postscript drivers (preferably colour)
+# on the samba server, so that clients can automatically install them.
+# Note that this only works if 'printing' is *not* set to 'cups'
+
+[pdf-gen]
+   path = /var/tmp
+   guest ok = No
+   printable = Yes
+   comment = PDF Generator (only valid users)
+   printing = bsd
+   #print command = /usr/share/samba/scripts/print-pdf file path win_path recipient IP &
+   print command = /usr/share/samba/scripts/print-pdf "%s" "%H" "//%L/%u" "%m" "%I" "%J" &
+    lpq command = /bin/true
+
+# A share allowing administrators to set ACLs on, or access for backup purposes
+# ll files (as root).
+#[admin] 
+#  path = /
+#  admin users = @"Domain Admins"
+#  valid users = @"Domain Admins"
+#  browseable = no
+#  writeable = yes 
+
+# This one is useful for people to share files
+;[tmp]
+;   comment = Temporary file space
+;   path = /tmp
+;   read only = no
+;   public = yes
+
+# A publicly accessible directory, but read only, except for people in
+# the "staff" group
+;[public]
+;   comment = Public Stuff
+;   path = /home/samba/public
+;   public = yes
+;   writable = no
+;   write list = @staff
+# Audited directory through experimental VFS audit.so module:
+# Uncomment next line.
+#   vfs object = /usr/lib/samba/vfs/audit.so
+
+# Other examples. 
+#
+# A private printer, usable only by Fred. Spool data will be placed in Fred's
+# home directory. Note that fred must have write access to the spool directory,
+# wherever it is.
+;[fredsprn]
+;   comment = Fred's Printer
+;   valid users = fred
+;   path = /homes/fred
+;   printer = freds_printer
+;   public = no
+;   writable = no
+;   printable = yes
+
+# A private directory, usable only by Fred. Note that Fred requires write
+# access to the directory.
+;[fredsdir]
+;   comment = Fred's Service
+;   path = /usr/somewhere/private
+;   valid users = fred
+;   public = no
+;   writable = yes
+;   printable = no
+
+# a service which has a different directory for each machine that connects
+# this allows you to tailor configurations to incoming machines. You could
+# also use the %u option to tailor it by user name.
+# The %m gets replaced with the machine name that is connecting.
+;[pchome]
+;  comment = PC Directories
+;  path = /usr/pc/%m
+;  public = no
+;  writable = yes
+
+# The following two entries demonstrate how to share a directory so that two
+# users can place files there that will be owned by the specific users. In this
+# setup, the directory should be writable by both users and should have the
+# sticky bit set on it to prevent abuse. Obviously this could be extended to
+# as many users as required.
+;[myshare]
+;   comment = Mary's and Fred's stuff
+;   path = /usr/somewhere/shared
+;   valid users = mary fred
+;   public = no
+;   writable = yes
+;   printable = no
+;   create mask = 0765
+
--- samba-3.0.23/packaging/Mandrake/system-auth-winbind.pamd.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/system-auth-winbind.pamd	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,17 @@
+#%PAM-1.0
+
+auth        required      /lib/security/pam_env.so
+auth        sufficient    /lib/security/pam_winbind.so
+auth        sufficient    /lib/security/pam_unix.so likeauth nullok use_first_pass
+auth        required      /lib/security/pam_deny.so
+
+account     sufficient    /lib/security/pam_winbind.so
+account     required      /lib/security/pam_unix.so
+
+password    required      /lib/security/pam_cracklib.so retry=3
+password    sufficient    /lib/security/pam_unix.so nullok use_authtok md5 shadow
+password    required      /lib/security/pam_deny.so
+
+session     required      /lib/security/pam_mkhomedir.so skel=/etc/skel/ umask=0022 
+session     required      /lib/security/pam_limits.so
+session     required      /lib/security/pam_unix.so
--- samba-3.0.23/packaging/Mandrake/winbind.init.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/winbind.init	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,93 @@
+#!/bin/sh
+#
+# chkconfig: 345 81 45
+# description: Starts and stops the Samba winbind daemon to provide \
+# user and group information from a domain controller to linux.
+
+# Source function library.
+if [ -f /etc/init.d/functions ] ; then
+  . /etc/init.d/functions
+elif [ -f /etc/rc.d/init.d/functions ] ; then
+  . /etc/rc.d/init.d/functions
+else
+  exit 0
+fi
+
+# Source networking configuration.
+. /etc/sysconfig/network
+
+# Check that networking is up.
+[ ${NETWORKING} = "no" ] && exit 0
+
+# Check that smb.conf exists.
+[ -f /etc/samba/smb.conf ] || exit 0
+
+RETVAL=0
+
+
+start() {
+	echo -n "Starting Winbind services: "
+	RETVAL=1
+	if [ "`grep -i -E '(idmap|winbind) uid' /etc/samba/smb.conf | egrep -v [\#\;]`" -a "`grep -i -E '(idmap|winbind) gid' /etc/samba/smb.conf | egrep -v [\#\;]`" ]; then
+		daemon winbindd
+		RETVAL=$?
+	else
+		echo "Winbind is not configured in /etc/samba/smb.conf, not starting"
+	fi
+	echo
+	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/winbind || \
+	   RETVAL=1
+	return $RETVAL
+}	
+stop() {
+	echo -n "Shutting down Winbind services: "
+	RETVAL=1
+	#if [ "`grep -i -E '(idmap|winbind) uid' /etc/samba/smb.conf | egrep -v [\#\;]`" -a "`grep -i -E '(idmap|winbind) gid' /etc/samba/smb.conf | egrep -v [\#\;]`" ]; then
+		killproc winbindd
+		RETVAL=$?
+	#fi
+	echo
+	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/winbind
+	return $RETVAL
+}	
+restart() {
+	stop
+	start
+}	
+reload() {
+	export TMPDIR="/var/tmp"
+        echo -n "Checking domain trusts: "
+	killproc winbindd -HUP
+	RETVAL=$?
+	echo
+	return $RETVAL
+}	
+mdkstatus() {
+	status winbindd
+}	
+
+case "$1" in
+  start)
+  	start
+	;;
+  stop)
+  	stop
+	;;
+  restart)
+  	restart
+	;;
+  reload)
+  	reload
+	;;
+  status)
+  	mdkstatus
+	;;
+  condrestart)
+  	[ -f /var/lock/subsys/winbindd ] && restart || :
+	;;
+  *)
+	echo "Usage: $0 {start|stop|restart|status|condrestart}"
+	exit 1
+esac
+
+exit $?
--- samba-3.0.23/packaging/Mandrake/wrepld.init.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/wrepld.init	2006-07-11 13:28:27.000000000 +0200
@@ -0,0 +1,93 @@
+#!/bin/sh
+#
+# chkconfig: 345 81 45
+# description: Starts and stops the Samba wrepld daemon to provide \
+# WINS replication services between WINS partner servers.
+
+# Source function library.
+if [ -f /etc/init.d/functions ] ; then
+  . /etc/init.d/functions
+elif [ -f /etc/rc.d/init.d/functions ] ; then
+  . /etc/rc.d/init.d/functions
+else
+  exit 0
+fi
+
+# Source networking configuration.
+. /etc/sysconfig/network
+
+# Check that networking is up.
+[ ${NETWORKING} = "no" ] && exit 0
+
+# Check that smb.conf exists.
+[ -f /etc/samba/smb.conf ] || exit 0
+
+RETVAL=0
+
+
+start() {
+	echo -n "Starting WINS Replication services: "
+	RETVAL=1
+	if [ "`grep -i 'wins partners' /etc/samba/smb.conf | egrep -v [\#\;]`" ]; then
+		daemon wrepld
+		RETVAL=$?
+	else
+		echo "WINS replication is not configured in /etc/samba/smb.conf, not starting"
+	fi
+	echo
+	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/wrepld || \
+	   RETVAL=1
+	return $RETVAL
+}	
+stop() {
+	echo -n "Shutting down WINS replication services: "
+	RETVAL=1
+	if [ "`grep -i 'wins partners' /etc/samba/smb.conf | egrep -v [\#\;]`" ]; then
+		killproc wrepld
+		RETVAL=$?
+	fi
+	echo
+	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/wrepld
+	return $RETVAL
+}	
+restart() {
+	stop
+	start
+}	
+reload() {
+	export TMPDIR="/var/tmp"
+        echo -n "Reloading WINS replication: "
+	killproc wrepld -HUP
+	RETVAL=$?
+	echo
+	return $RETVAL
+}	
+mdkstatus() {
+	status wrepld
+}	
+
+case "$1" in
+  start)
+  	start
+	;;
+  stop)
+  	stop
+	;;
+  restart)
+  	restart
+	;;
+  reload)
+  	reload
+	;;
+  status)
+  	mdkstatus
+	;;
+  condrestart)
+  	[ -f /var/lock/subsys/wrepld ] && restart || :
+	;;
+  *)
+	echo "Usage: $0 {start|stop|restart|status|condrestart}"
+	exit 1
+esac
+
+exit $?
--- samba-3.0.23/packaging/Mandrake/smb.init.mdk	2006-07-11 13:28:27.000000000 +0200
+++ samba-3.0.23/packaging/Mandrake/smb.init	2006-07-11 13:31:22.000000000 +0200
@@ -0,0 +1,95 @@
+#!/bin/sh
+#
+# chkconfig: 35 91 9
+# description: Starts and stops the Samba smbd and nmbd daemons \
+#	       used to provide SMB network services.
+
+# Source function library.
+if [ -f /etc/init.d/functions ] ; then
+  . /etc/init.d/functions
+elif [ -f /etc/rc.d/init.d/functions ] ; then
+  . /etc/rc.d/init.d/functions
+else
+  exit 0
+fi
+
+# Source networking configuration.
+. /etc/sysconfig/network
+
+# Check that networking is up.
+[ ${NETWORKING} = "no" ] && exit 0
+
+# Check that smb.conf exists.
+[ -f /etc/samba/smb.conf ] || exit 0
+
+RETVAL=0
+
+
+start() {
+       export TMPDIR="/var/tmp"
+	echo -n "Starting SMB services: "
+	daemon smbd -D 	
+	RETVAL=$?
+	echo
+	echo -n "Starting NMB services: "
+	daemon nmbd -D 
+	RETVAL2=$?
+	echo
+	[ $RETVAL -eq 0 -a $RETVAL2 -eq 0 ] && touch /var/lock/subsys/smb || \
+	   RETVAL=1
+	return $RETVAL
+}	
+stop() {
+	echo -n "Shutting down SMB services: "
+	killproc smbd
+	RETVAL=$?
+	echo
+	echo -n "Shutting down NMB services: "
+	killproc nmbd
+	RETVAL2=$?
+	[ $RETVAL -eq 0 -a $RETVAL2 -eq 0 ] && rm -f /var/lock/subsys/smb
+	echo ""
+	return $RETVAL
+}	
+restart() {
+	stop
+	start
+}	
+reload() {
+       export TMPDIR="/var/tmp"
+        echo -n "Reloading smb.conf file: "
+	killproc smbd -HUP
+	RETVAL=$?
+	echo
+	return $RETVAL
+}	
+mdkstatus() {
+	status smbd
+	status nmbd
+}	
+
+case "$1" in
+  start)
+  	start
+	;;
+  stop)
+  	stop
+	;;
+  restart)
+  	restart
+	;;
+  reload)
+  	reload
+	;;
+  status)
+  	mdkstatus
+	;;
+  condrestart)
+  	[ -f /var/lock/subsys/smb ] && restart || :
+	;;
+  *)
+	echo "Usage: $0 {start|stop|restart|status|condrestart}"
+	exit 1
+esac
+
+exit $?
