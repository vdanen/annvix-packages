2006-04-10  Luca Berra <bluca@vodka.it>

	* fix --force-evms flag again

2006-04-09  Luca Berra <bluca@vodka.it>

        * fix evms detection and add --force-evms flag (#12467)
	  thanks to Ian D. Allen and Jose Antonio Becerra Permuy

--- mkinitrd-4.2.17/mkinitrd.evms	2006-04-10 22:24:55.000000000 +0200
+++ mkinitrd-4.2.17/mkinitrd	2006-04-10 22:25:31.000000000 +0200
@@ -68,7 +68,7 @@ usage () {
     echo "       [--builtin=<module>] [--nopivot] [--noudev] [--allow-missing]" >&2
     echo "       [--tmpdir=<tmpdir>] [--initrdfs=<fs>] [--noresume]" >&2
     echo "       [--dsdt[=<dsdt.aml>]] [--lvm-version=<1|2>] [--force-usb]" >&2
-    echo "       [--debug-busybox=<start|modload|pivot|exit>]" >&2
+    echo "       [--force-evms] [--debug-busybox=<start|modload|pivot|exit>]" >&2
     echo "       <initrd-image> <kernel-version>" >&2
     echo "" >&2
     echo "       (ex: `basename $0` /boot/initrd-$(uname -r).img $(uname -r))" >&2
@@ -210,7 +210,7 @@ inst() {
     fi 
     [ -n "$verbose" ] && echo "$1 -> $2"
     cp -aL $1 $2
-    for i in `ldd $1 | awk '$2 == "=>" {print $3}'`; do
+    for i in `ldd $1 | awk '/\// {if($2 == "=>") {print $3} else {print $1}}'`; do
 	j=${i##*/}
 	[ -e $MNTIMAGE/lib/$j ] || cp -aL $i $MNTIMAGE/lib/$j
     done
@@ -432,6 +432,10 @@ while [ $# -gt 0 ]; do
 	    forceusb=yes
 	    ;;
 
+	--force-evms)
+	    force_evms=yes
+	    ;;
+
 	--with*)
 	    if echo $1 | grep -q '=' ; then
 	    	modname=`echo $1 | sed 's/^--with=//'`
@@ -717,6 +721,26 @@ if [ "$root_major" = "$dm_major" ]; then
 		/usr/bin/xargs -l evms_query plugins | \
 		/bin/sort -u`; do
 	    	case $i in
+		    BBR)
+		    	findmodule -dm-bbr
+		    	evms_plugins="$evms_plugins bbr";;
+		    BBRseg)
+		    	findmodule -dm-bbr
+			evms_plugins="$evms_plugins bbr_seg";;
+		    BSD) evms_plugins="$evms_plugins bsd";;
+		    CSM) evms_plugins="$evms_plugins csm";;
+		    DosSegMgr) evms_plugins="$evms_plugins dos";;
+		    DriveLink) evms_plugins="$evms_plugins drivelink";;
+		    Error) evms_plugins="$evms_plugins error";;
+		    GptSegMgr) evms_plugins="$evms_plugins gpt";;
+		    LocalDskMgr) evms_plugins="$evms_plugins disk";;
+		    LVM2)
+			findmodule -dm-mirror
+			findmodule -dm-zero
+			findmodule -dm-snapshot
+			evms_plugins="$evms_plugins lvm2";;
+		    LvmRegMgr) evms_plugins="$evms_plugins lvm";;
+		    MAC) evms_plugins="$evms_plugins mac";;
 		    MDLinearRegMgr)
 		    	findmodule -linear
 			evms_plugins="$evms_plugins md";;
@@ -732,22 +756,16 @@ if [ "$root_major" = "$dm_major" ]; then
 		    "MD Multipath")
 		    	findmodule -multipath
 			evms_plugins="$evms_plugins md";;
-		    BBR)
-		    	findmodule -dm-bbr
-		    	evms_plugins="$evms_plugins bbr";;
-		    BBRseg)
-		    	findmodule -dm-bbr
-			evms_plugins="$evms_plugins bbr_seg";;
-		    BSD) evms_plugins="$evms_plugins bsd";;
-		    LocalDskMgr) evms_plugins="$evms_plugins disk";;
-		    DosSegMgr) evms_plugins="$evms_plugins dos";;
-		    DriveLink) evms_plugins="$evms_plugins drivelink";;
-		    GptSegMgr) evms_plugins="$evms_plugins gpt";;
-		    LvmRegMgr) evms_plugins="$evms_plugins lvm";;
-		    LVM2) evms_plugins="$evms_plugins lvm2";;
+		    Multipath)
+		    	findmodule -dm-multipath
+			findmodule -dm-emc
+		    	evms_plugins="$evms_plugins multipath";;
 		    Snapshot)
 		    	findmodule -dm-snapshot
 		    	evms_plugins="$evms_plugins snapshot";;
+		    Replace) evms_plugins="$evms_plugins replace";;
+		    *) echo "Unknown EVMS plugin $i, aborting." >&2
+			exit 1
 		esac
 	    done
 
@@ -785,6 +803,41 @@ elif [ $root_major = 58 ]; then
     pvs=$(/sbin/${lvmprefix}vgdisplay -v ${rootvg} | /bin/awk '/PV Name/ { print $(NF-1) }')
 fi
 
+if [ -n "$force_evms" ]; then
+    root_evms=1
+    need_dmnod=1
+    root_lvm=""
+    fstabrootdev=/dev/evms/${fstabrootdev##*/}
+    findmodule -dm-mod
+    findmodule -dm-bbr
+    findmodule -dm-emc
+    findmodule -dm-mirror
+    findmodule -dm-multipath
+    findmodule -dm-snapshot
+    findmodule -dm-zero
+    findmodule -linear
+    findmodule -multipath
+    findmodule -raid0
+    findmodule -raid1
+    findmodule -raid5
+    evms_plugins="$evms_plugins bbr"
+    evms_plugins="$evms_plugins bbr_seg"
+    evms_plugins="$evms_plugins bsd"
+    evms_plugins="$evms_plugins csm"
+    evms_plugins="$evms_plugins disk"
+    evms_plugins="$evms_plugins dos"
+    evms_plugins="$evms_plugins drivelink"
+    evms_plugins="$evms_plugins error"
+    evms_plugins="$evms_plugins gpt"
+    evms_plugins="$evms_plugins lvm"
+    evms_plugins="$evms_plugins lvm2"
+    evms_plugins="$evms_plugins mac"
+    evms_plugins="$evms_plugins md"
+    evms_plugins="$evms_plugins replace"
+    evms_plugins="$evms_plugins multipath"
+    evms_plugins="$evms_plugins snapshot"
+fi
+
 # if the machine is an xbox and / is loopback, assume it's a fatx image file
 # 10de:02a5 is the xbox signature in /proc/pci
 if [ "$root_major" -eq 7 ] && grep -q 10de:02a5 /proc/pci; then
@@ -1154,13 +1207,16 @@ elif [ -n "$root_dmraid" ]; then
     rootdev=$fstabrootdev
 elif [ -n "$root_evms" ]; then
     evms_version=`/sbin/evms_query info|awk '$2 == "Version:" {print $3}'`
+    mkdir -p $MNTIMAGE/lib/evms/$evms_version
     for foo in $evms_plugins; do
-	    inst /lib/evms/$evms_version/*${foo}* $MNTIMAGE/lib/evms/$evms_version/
+	inst /lib/evms/$evms_version/${foo}-*.so $MNTIMAGE/lib/evms/$evms_version/
     done
     inst /sbin/evms_activate $MNTIMAGE/sbin
+    # FIXME evms requires this library
+    inst /lib/libgcc_s.so.1
     cp /etc/evms.conf $MNTIMAGE/etc
     echo "echo Activating EVMS Volumes" >> $RCFILE
-    echo "evms_activate" >> $RCFILE
+    echo "evms_activate" >> $RCFILE
     rootdev=$fstabrootdev
 else
     echo "echo Creating root device" >> $RCFILE
