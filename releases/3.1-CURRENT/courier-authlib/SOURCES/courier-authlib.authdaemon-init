#!/bin/bash
#
# chkconfig: 345 15 85
# description: This startup script launches the authentication daemon

### BEGIN INIT INFO
# Provides: courier-authdaemon
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 345
# Short-Description: Courier authentication daemon
# Description: This startup script launches the authentication daemon
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source courier authdaemon configuration
. /etc/courier/authdaemonrc

NAME=courier-authdaemon
WRAPPER=courierlogger
PROGRAM=authdaemond
PIDFILE=/var/run/authdaemon.pid
LOCKFILE=/var/lock/subsys/courier-authdaemon

# Postfix spool directory
PFDIR=/var/spool/postfix

start() {
    # Check if it is already running
    if [ ! -f $LOCKFILE ]; then
	echo -n "Starting $NAME"
	daemon $WRAPPER -pid=$PIDFILE -start $LOGGEROPTS $PROGRAM
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $LOCKFILE
	echo
    fi
    # Check if Postfix is present and make a hardlink so
    # sasl smtpd auth can work
    if [ -d $PFDIR ]; then
	if [ ! -d $PFDIR$authdaemonvar ]; then
	    echo "Creating $PFDIR$authdaemonvar"
	    mkdir -p $PFDIR$authdaemonvar
	fi
	sleep 1
	if [ ! -e $PFDIR$authdaemonvar/socket ]; then
	    while [ ! -e $authdaemonvar/socket ]; do
		echo "Socket not ready... Sleeping 1 second"
		sleep 1
	    done
	    echo "Creating hardlink from $authdaemonvar/socket to $PFDIR$authdaemonvar"
	    ln -f $authdaemonvar/socket $PFDIR$authdaemonvar/socket
	fi
    fi
    return $RETVAL
}

stop() {
    echo -n "Stopping $NAME"
    daemon $WRAPPER -pid=$PIDFILE -stop
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE
    
    # delete old socket
    [ $RETVAL -eq 0 ] && rm -f $authdaemonvar/socket
    echo
    
    # if there is postfix, remove hardlink from there
    if [ -e $PFDIR$authdaemonvar/socket ]; then
	echo "Deleting hardlink from $authdaemonvar to $PFDIR$authdaemonvar"
	rm -f $PFDIR$authdaemonvar/socket
    fi

    return $RETVAL
}

reload() {
    echo -n "Reloading $NAME"
    daemon $WRAPPER -pid=$PIDFILE -restart
    RETVAL=$?
    echo
    return $RETVAL
}

# See how we were called.
case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    restart)
	stop
	start
	;;
    condrestart)
	if [ -f $LOCKFILE ]; then
	    start
	    stop
	fi
	;;
    reload)
	reload
	;;
    status)
	status $PROGRAM
	;;
    *)
	echo $"Usage: $0 {start|stop|restart|condrestart|reload|status}"
	exit 1
esac

exit $RETVAL
