--- linux-2.4.20/drivers/ide/pci/sis5513.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/sis5513.c	2003-04-15 04:03:02.000000000 +0200
@@ -423,6 +423,9 @@ static char* get_slaves_info(char* buffe
 /* Main get_info, called on /proc/ide/sis reads */
 static int sis_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p = buffer;
 	int len;
 	u8 reg;
@@ -499,6 +502,7 @@ static int sis_get_info (char *buffer, c
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif /* defined(DISPLAY_SIS_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/piix.c.di95-3.orig	2003-04-15 03:57:21.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/piix.c	2003-04-15 04:01:00.000000000 +0200
@@ -129,6 +129,9 @@ static int no_piix_dma = 0;
  
 static int piix_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else
 	char *p = buffer;
 	int i;
 
@@ -259,6 +262,7 @@ static int piix_get_info (char *buffer, 
 		 */
 	}
 	return p-buffer;	 /* => must be less than 4k! */
+#endif	
 }
 #endif  /* defined(DISPLAY_PIIX_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/cmd64x.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/cmd64x.c	2003-04-15 04:01:00.000000000 +0200
@@ -145,6 +145,9 @@ static char * print_cmd64x_get_info (cha
 
 static int cmd64x_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else
 	char *p = buffer;
 	int i;
 
@@ -154,6 +157,7 @@ static int cmd64x_get_info (char *buffer
 		p = print_cmd64x_get_info(p, dev, i);
 	}
 	return p-buffer;	/* => must be less than 4k! */
+#endif	
 }
 
 #endif	/* defined(DISPLAY_CMD64X_TIMINGS) && defined(CONFIG_PROC_FS) */
--- linux-2.4.20/drivers/ide/pci/amd74xx.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/amd74xx.c	2003-04-15 04:03:33.000000000 +0200
@@ -93,6 +93,9 @@ extern int (*amd74xx_display_info)(char 
 
 static int amd74xx_get_info(char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	int speed[4], cycle[4], setup[4], active[4], recover[4], den[4],
 		 uen[4], udma[4], active8b[4], recover8b[4];
 	struct pci_dev *dev = bmide_dev;
@@ -174,6 +177,7 @@ static int amd74xx_get_info(char *buffer
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 
 #endif
--- linux-2.4.20/drivers/ide/pci/hpt34x.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/hpt34x.c	2003-04-15 04:01:24.000000000 +0200
@@ -57,6 +57,9 @@ static int n_hpt34x_devs;
 
 static int hpt34x_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p = buffer;
 	int i, len;
 
@@ -101,6 +104,7 @@ static int hpt34x_get_info (char *buffer
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif  /* defined(DISPLAY_HPT34X_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/aec62xx.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/aec62xx.c	2003-04-15 04:04:00.000000000 +0200
@@ -34,6 +34,9 @@ static int n_aec_devs;
 
 static int aec62xx_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+return 0;
+#else
 	char *p = buffer;
 	char *chipset_nums[] = {"error", "error", "error", "error",
 				"error", "error", "850UF",   "860",
@@ -176,6 +179,7 @@ static int aec62xx_get_info (char *buffe
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif	/* defined(DISPLAY_AEC62xx_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/pdc202xx_old.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/pdc202xx_old.c	2003-04-15 04:04:12.000000000 +0200
@@ -60,6 +60,7 @@ static u8 pdc202xx_proc = 0;
 static struct pci_dev *pdc202_devs[PDC202_MAX_DEVS];
 static int n_pdc202_devs;
 
+#ifndef CONFIG_BOOT_KERNEL
 static char * pdc202xx_info (char *buf, struct pci_dev *dev)
 {
 	char *p = buf;
@@ -173,9 +174,13 @@ static char * pdc202xx_info (char *buf, 
 #endif
 	return (char *)p;
 }
+#endif
 
 static int pdc202xx_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p = buffer;
 	int i, len;
 
@@ -188,6 +193,7 @@ static int pdc202xx_get_info (char *buff
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif  /* defined(DISPLAY_PDC202XX_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/pdc202xx_new.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/pdc202xx_new.c	2003-04-15 04:04:20.000000000 +0200
@@ -46,6 +46,7 @@ static u8 pdcnew_proc = 0;
 static struct pci_dev *pdc202_devs[PDC202_MAX_DEVS];
 static int n_pdc202_devs;
 
+#ifndef CONFIG_BOOT_KERNEL
 static char * pdcnew_info(char *buf, struct pci_dev *dev)
 {
 	char *p = buf;
@@ -73,9 +74,13 @@ static char * pdcnew_info(char *buf, str
 	p += sprintf(p, " Chipset.\n");
 	return (char *)p;
 }
+#endif
 
 static int pdcnew_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p = buffer;
 	int i, len;
 
@@ -88,6 +93,7 @@ static int pdcnew_get_info (char *buffer
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif  /* defined(DISPLAY_PDC202XX_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/hpt366.c.di95-3.orig	2003-04-15 02:59:48.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/hpt366.c	2003-04-15 04:01:00.000000000 +0200
@@ -85,6 +85,9 @@ static int n_hpt_devs;
 
 static int hpt366_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p	= buffer;
 	char *chipset_nums[] = {"366", "366",  "368",
 				"370", "370A", "372",
@@ -162,6 +165,7 @@ static int hpt366_get_info (char *buffer
 	p += sprintf(p, "\n");
 	
 	return p-buffer;/* => must be less than 4k! */
+#endif	
 }
 #endif  /* defined(DISPLAY_HPT366_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/serverworks.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/serverworks.c	2003-04-15 04:04:31.000000000 +0200
@@ -56,6 +56,9 @@ static int n_svwks_devs;
 
 static int svwks_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	char *p = buffer;
 	int i, len;
 
@@ -200,6 +203,7 @@ static int svwks_get_info (char *buffer,
 	*addr = buffer + offset;
 	
 	return len > count ? count : len;
+#endif
 }
 #endif  /* defined(DISPLAY_SVWKS_TIMINGS) && defined(CONFIG_PROC_FS) */
 
--- linux-2.4.20/drivers/ide/pci/via82cxxx.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/via82cxxx.c	2003-04-15 04:04:42.000000000 +0200
@@ -136,6 +136,9 @@ static char *via_control3[] = { "No limi
  
 static int via_get_info(char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	int speed[4], cycle[4], setup[4], active[4], recover[4], den[4],
 		 uen[4], udma[4], umul[4], active8b[4], recover8b[4];
 	struct pci_dev *dev = bmide_dev;
@@ -274,6 +277,7 @@ static int via_get_info(char *buffer, ch
 	*addr = buffer + offset;
 
 	return len > count ? count : len;
+#endif
 }
 
 #endif /* DISPLAY_VIA_TIMINGS && CONFIG_PROC_FS */
--- linux-2.4.20/drivers/ide/pci/alim15x3.c.di95-3.orig	2003-04-15 02:59:14.000000000 +0200
+++ linux-2.4.20/drivers/ide/pci/alim15x3.c	2003-04-15 04:01:00.000000000 +0200
@@ -101,6 +101,9 @@ static char *channel_status[8] = {
  
 static int ali_get_info (char *buffer, char **addr, off_t offset, int count)
 {
+#ifdef CONFIG_BOOT_KERNEL
+	return 0;
+#else	
 	unsigned long bibma;
 	u8 reg53h, reg5xh, reg5yh, reg5xh1, reg5yh1, c0, c1, rev, tmp;
 	char *q, *p = buffer;
@@ -279,6 +282,7 @@ static int ali_get_info (char *buffer, c
 		udmaT[(reg5yh & 0x70) >> 4] );
 
 	return p-buffer; /* => must be less than 4k! */
+#endif	
 }
 #endif  /* defined(DISPLAY_ALI_TIMINGS) && defined(CONFIG_PROC_FS) */
 
