--- dietlibc-0.22/test/argv.c.fix-tests-warnings	2002-02-18 15:32:36.000000000 +0100
+++ dietlibc-0.22/test/argv.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 
-main(int argc,char* argv[],char* envp[]) {
+int main(int argc,char* argv[],char* envp[]) {
   int i;
   char** x;
   for (i=0; i<=argc; ++i)
@@ -9,4 +9,5 @@ main(int argc,char* argv[],char* envp[])
   puts("\nEnvironment:");
   for (x=environ; *x; ++x)
     puts(*x);
+  return 0;
 }
--- dietlibc-0.22/test/atexit.c.fix-tests-warnings	2002-08-19 10:57:47.000000000 +0200
+++ dietlibc-0.22/test/atexit.c	2002-11-29 14:59:37.000000000 +0100
@@ -5,6 +5,7 @@ void blah(void) {
   write(2,"atexit\n",7);
 }
 
-main() {
+int main() {
   atexit(blah);
+  return 0;
 }
--- dietlibc-0.22/test/bsearch.c.fix-tests-warnings	2002-01-29 19:54:04.000000000 +0100
+++ dietlibc-0.22/test/bsearch.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,4 +1,5 @@
 #include <stdlib.h>
+#include <string.h>
 #include <assert.h>
 #include <write12.h>
 
--- dietlibc-0.22/test/calloc.c.fix-tests-warnings	2002-08-05 19:52:08.000000000 +0200
+++ dietlibc-0.22/test/calloc.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,9 @@
+#include <stdio.h>
 #include <limits.h>
 #include <stdlib.h>
 
-main() {
+int main() {
   char* c=calloc(ULONG_MAX/64,65);
   printf("%p\n",c);
+  return 0;
 }
--- dietlibc-0.22/test/flush.c.fix-tests-warnings	2002-08-19 10:57:47.000000000 +0200
+++ dietlibc-0.22/test/flush.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,7 @@
 #include <stdio.h>
 
-main() {
+int main() {
   FILE* f=fopen("testing","w");
   fputs("testing",f);
+  return 0;
 }
--- dietlibc-0.22/test/fnmatch.c.fix-tests-warnings	2002-05-29 15:20:40.000000000 +0200
+++ dietlibc-0.22/test/fnmatch.c	2002-11-29 14:59:37.000000000 +0100
@@ -7,7 +7,7 @@ void die(const char* message) {
   exit(1);
 }
 
-main() {
+int main() {
   if (fnmatch("*.c","foo.c",0)) die("fnmatch did not match *.c to foo.c");
   if (fnmatch("*.c",".c",0)) die("fnmatch did not match *.c to .c");
   if (!fnmatch("*.a","foo.c",0)) die("fnmatch matched *.a to foo.c");
--- dietlibc-0.22/test/fwrite.c.fix-tests-warnings	2001-11-13 01:25:11.000000000 +0100
+++ dietlibc-0.22/test/fwrite.c	2002-11-29 14:59:37.000000000 +0100
@@ -5,4 +5,5 @@ int main() {
   char buf[]="abcdefg";
   if (fwrite(buf,1,5,f)!=5) return -1;
   fclose(f);
+  return 0;
 }
--- dietlibc-0.22/test/getaddrinfo.c.fix-tests-warnings	2002-06-17 05:48:22.000000000 +0200
+++ dietlibc-0.22/test/getaddrinfo.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,10 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 #include <sys/types.h>
 #include <netinet/in.h>
 #include <sys/socket.h>
+#include <arpa/inet.h>
 #include <netdb.h>
 
 int main() {
@@ -30,4 +34,5 @@ int main() {
     }
     ai=ai->ai_next;
   }
+  return 0;
 }
--- dietlibc-0.22/test/getenv.c.fix-tests-warnings	2002-02-18 01:13:24.000000000 +0100
+++ dietlibc-0.22/test/getenv.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,8 +1,10 @@
 #include <stdlib.h>
+#include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   assert(getenv("PATH"));
   putenv("foo=bar");
   assert(!strcmp(getenv("foo"),"bar"));
+  return 0;
 }
--- dietlibc-0.22/test/getgrnam.c.fix-tests-warnings	2001-10-29 18:21:10.000000000 +0100
+++ dietlibc-0.22/test/getgrnam.c	2002-11-29 14:59:37.000000000 +0100
@@ -17,4 +17,5 @@ int main() {
       break;
   }
   printf("]\n");
+  return 0;
 }
--- dietlibc-0.22/test/gethostbyaddr.c.fix-tests-warnings	2002-09-18 22:07:24.000000000 +0200
+++ dietlibc-0.22/test/gethostbyaddr.c	2002-11-29 14:59:37.000000000 +0100
@@ -2,6 +2,7 @@
 #include <stdio.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <arpa/inet.h>
 
 int main() {
   struct in_addr bar;
@@ -13,4 +14,5 @@ int main() {
     for (i=0; foo->h_addr_list[i]; ++i)
       printf("%s -> %s\n",foo->h_name,inet_ntoa(*(struct in_addr*)foo->h_addr_list[i]));
   }
+  return 0;
 }
--- dietlibc-0.22/test/getservbyname.c.fix-tests-warnings	2002-02-18 14:30:43.000000000 +0100
+++ dietlibc-0.22/test/getservbyname.c	2002-11-29 14:59:37.000000000 +0100
@@ -11,4 +11,5 @@ int main(int argc,char *argv[]) {
       printf("  alias %s\n",se->s_aliases[i]);
     }
   }
+  return 0;
 }
--- dietlibc-0.22/test/getservbyport.c.fix-tests-warnings	2001-11-04 03:36:41.000000000 +0100
+++ dietlibc-0.22/test/getservbyport.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,5 +1,6 @@
 #include <stdio.h>
 #include <netdb.h>
+#include <netinet/in.h>
 
 int main(int argc,char *argv[]) {
   struct servent* se;
@@ -11,4 +12,5 @@ int main(int argc,char *argv[]) {
       printf("  alias %s\n",se->s_aliases[i]);
     }
   }
+  return 0;
 }
--- dietlibc-0.22/test/getusershell.c.fix-tests-warnings	2001-11-15 01:08:34.000000000 +0100
+++ dietlibc-0.22/test/getusershell.c	2002-11-29 14:59:37.000000000 +0100
@@ -2,8 +2,9 @@
 #include <unistd.h>
 #include <stdio.h>
 
-main() {
+int main() {
   char* c;
   while (c=getusershell())
     puts(c);
+  return 0;
 }
--- dietlibc-0.22/test/grent.c.fix-tests-warnings	2001-10-23 03:44:40.000000000 +0200
+++ dietlibc-0.22/test/grent.c	2002-11-29 14:59:37.000000000 +0100
@@ -15,4 +15,5 @@ int main() {
     }
     printf("]\n");
   }
+  return 0;
 }
--- dietlibc-0.22/test/hasmntopt.c.fix-tests-warnings	2002-01-26 23:36:46.000000000 +0100
+++ dietlibc-0.22/test/hasmntopt.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,4 +1,5 @@
 #include <stdio.h>
+#include <stdlib.h>
 #include <mntent.h>
 
 void die(const char* message) {
@@ -13,4 +14,5 @@ int main() {
   if (!(c=hasmntopt(&me,"foo"))) die("hasmntopt did not find foo");
   if (!(c=hasmntopt(&me,"duh"))) die("hasmntopt did not find duh");
   printf("%s\n",hasmntopt(&me,"bar"));
+  return 0;
 }
--- dietlibc-0.22/test/if_nameindex.c.fix-tests-warnings	2001-11-05 00:37:25.000000000 +0100
+++ dietlibc-0.22/test/if_nameindex.c	2002-11-29 14:59:37.000000000 +0100
@@ -11,4 +11,5 @@ int main() {
     }
     if_freenameindex(t1);
   }
+  return 0;
 }
--- dietlibc-0.22/test/ltostr.c.fix-tests-warnings	2002-08-19 11:45:49.000000000 +0200
+++ dietlibc-0.22/test/ltostr.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,10 +1,12 @@
 #include <stdlib.h>
+#include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   char buf[1024];
   assert(__ltostr(buf,10,1723,10,0)==4); assert(!strcmp(buf,"1723"));
   assert(__ltostr(buf,3,1723,10,0)==2); assert(!strcmp(buf,"23"));
   assert(__ltostr(buf,2,0x1234,16,0)==1); assert(!strcmp(buf,"4"));
   assert(__ltostr(buf,3,0xFEFE,16,1)==2); assert(!strcmp(buf,"FE"));
+  return 0;
 }
--- dietlibc-0.22/test/malloc-debugger.c.fix-tests-warnings	2002-04-28 03:26:22.000000000 +0200
+++ dietlibc-0.22/test/malloc-debugger.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 
-main() {
+int main() {
   char* c=malloc(13);
   char* tmp;
   fprintf(stderr,"got %p\n",c);
@@ -14,4 +14,5 @@ main() {
 //  free(c);
   free(tmp);
 //  c[0]=13;
+  return 0;
 }
--- dietlibc-0.22/test/memcmp.c.fix-tests-warnings	2002-04-29 22:18:43.000000000 +0200
+++ dietlibc-0.22/test/memcmp.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,7 @@
 #include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   const char* test="blubber";
   assert(memcmp(test,"blubber",8)==0);
   assert(memcmp(test,"fnord",5)<0);
--- dietlibc-0.22/test/memcpy.c.fix-tests-warnings	2002-08-27 15:55:31.000000000 +0200
+++ dietlibc-0.22/test/memcpy.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,7 @@
 #include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   char test[100]="blubber";
   assert(memcpy(test,"blubber",8)==test);
   assert(!memcmp(test,"blubber",8));
--- dietlibc-0.22/test/memusage.c.fix-tests-warnings	2001-10-23 03:44:40.000000000 +0200
+++ dietlibc-0.22/test/memusage.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,10 +1,11 @@
 #include <stdio.h>
 
-main() {
+int main() {
   FILE* f=fopen("/proc/self/statm","r");
   int size,resident,shared;
   if (fscanf(f,"%d %d %d",&size,&resident,&shared)==3) {
     printf("%dK total size, %dK resident, %dK shared\n",
 	   size*4,resident*4,shared*4);
   }
+  return 0;
 }
--- dietlibc-0.22/test/mktime.c.fix-tests-warnings	2002-04-21 23:45:02.000000000 +0200
+++ dietlibc-0.22/test/mktime.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,7 @@
+#include <stdio.h>
 #include <time.h>
 
-main() {
+int main() {
   struct tm t;
   t.tm_sec=1;
   t.tm_min=2;
@@ -13,6 +14,7 @@ main() {
   t.tm_mon=3;
   t.tm_year=102;
   printf("%d\n",mktime(&t));
+  return 0;
 }
 
 #if 0
--- dietlibc-0.22/test/protoent.c.fix-tests-warnings	2001-11-04 03:36:41.000000000 +0100
+++ dietlibc-0.22/test/protoent.c	2002-11-29 14:59:37.000000000 +0100
@@ -24,4 +24,5 @@ int main(int argc,char *argv[]) {
     }
   }
 #endif
+  return 0;
 }
--- dietlibc-0.22/test/prototypes.c.fix-tests-warnings	2002-08-07 03:22:44.000000000 +0200
+++ dietlibc-0.22/test/prototypes.c	2002-11-29 14:59:37.000000000 +0100
@@ -10,7 +10,8 @@ char *strncpy(char *dest, const char *sr
 int strncmp(const char *s1, const char *s2, size_t n) __THROW __pure__;
 char *strncat(char *dest, const char *src, size_t n) __THROW;
 
-main() {
+int main() {
   /* this is just a test to see whether gcc still has broken internal
    * prototypes */
+  return 0;
 }
--- dietlibc-0.22/test/putenv.c.fix-tests-warnings	2002-07-03 22:33:38.000000000 +0200
+++ dietlibc-0.22/test/putenv.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,4 +1,5 @@
 #include <stdlib.h>
+#include <string.h>
 #include <assert.h>
 
 int
--- dietlibc-0.22/test/pwent.c.fix-tests-warnings	2001-10-23 03:44:40.000000000 +0200
+++ dietlibc-0.22/test/pwent.c	2002-11-29 14:59:37.000000000 +0100
@@ -18,4 +18,5 @@ int main(int argc,char *argv[]) {
 	   pw->pw_shell);
   }
 #endif
+  return 0;
 }
--- dietlibc-0.22/test/read1.c.fix-tests-warnings	2001-11-16 22:01:35.000000000 +0100
+++ dietlibc-0.22/test/read1.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,7 @@
 #include <unistd.h>
 
-main() {
+int main() {
   char buf[10];
   read(0,buf,1);
+  return 0;
 }
--- dietlibc-0.22/test/readdir.c.fix-tests-warnings	2002-08-05 20:08:24.000000000 +0200
+++ dietlibc-0.22/test/readdir.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,5 +1,7 @@
 #define _FILE_OFFSET_BITS 64
 #include <dirent.h>
+#include <stdio.h>
+#include <errno.h>
 
 int main() {
   DIR* D=opendir(".");
--- dietlibc-0.22/test/regex.c.fix-tests-warnings	2002-10-27 17:23:35.000000000 +0100
+++ dietlibc-0.22/test/regex.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,7 @@
 #include <stdio.h>
 #include <regex.h>
 #include <assert.h>
+#include <string.h>
 
 int main() {
   regex_t r;
--- dietlibc-0.22/test/select.c.fix-tests-warnings	2001-10-23 03:44:40.000000000 +0200
+++ dietlibc-0.22/test/select.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,7 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <string.h>
 
 int main() {
   fd_set f;
@@ -8,4 +9,5 @@ int main() {
   FD_ZERO(&f);
   tv.tv_sec=3; tv.tv_usec=0;
   select(1,&f,0,0,&tv);
+  return 0;
 }
--- dietlibc-0.22/test/servent.c.fix-tests-warnings	2001-11-04 03:36:41.000000000 +0100
+++ dietlibc-0.22/test/servent.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,5 +1,6 @@
 #include <stdio.h>
 #include <netdb.h>
+#include <netinet/in.h>
 
 int main(int argc,char *argv[]) {
 #ifdef NEW
@@ -24,4 +25,5 @@ int main(int argc,char *argv[]) {
     }
   }
 #endif
+  return 0;
 }
--- dietlibc-0.22/test/spent.c.fix-tests-warnings	2001-10-23 03:45:23.000000000 +0200
+++ dietlibc-0.22/test/spent.c	2002-11-29 14:59:37.000000000 +0100
@@ -10,4 +10,5 @@ int main(int argc,char *argv[]) {
     printf("  %ld %d %d %d %d %d %d\n",sp.sp_lstchg, sp.sp_min,
 	   sp.sp_max, sp.sp_warn, sp.sp_inact, sp.sp_expire, sp.sp_flag);
   }
+  return 0;
 }
--- dietlibc-0.22/test/sprintf.c.fix-tests-warnings	2002-04-18 16:51:51.000000000 +0200
+++ dietlibc-0.22/test/sprintf.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,7 +1,7 @@
 #include <string.h>
 #include <stdio.h>
 
-main() {
+int main() {
   char buf[1000];
   sprintf(buf,"%d",23);
   if (strcmp(buf,"23")) return 1;
--- dietlibc-0.22/test/sscanf.c.fix-tests-warnings	2002-06-07 19:40:10.000000000 +0200
+++ dietlibc-0.22/test/sscanf.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,4 +1,5 @@
 #include <stdio.h>
+#include <string.h>
 
 int main() {
   char server_version_string[]="SSH-1.99-OpenSSH_2.9p2\n";
--- dietlibc-0.22/test/stdio.c.fix-tests-warnings	2002-08-05 20:26:34.000000000 +0200
+++ dietlibc-0.22/test/stdio.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,8 +1,9 @@
 #include <stdio.h>
 
-main() {
+int main() {
   char buf[1000];
   printf("sftp> ");
   fgets(buf,sizeof buf,stdin);
   fwrite("foo\n",2,2,stdout);
+  return 0;
 }
--- dietlibc-0.22/test/strcmp.c.fix-tests-warnings	2002-01-09 19:18:43.000000000 +0100
+++ dietlibc-0.22/test/strcmp.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,12 +1,13 @@
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 
 void die(const char* message) {
   puts(message);
   exit(1);
 }
 
-main() {
+int main() {
   char buf[100]="fnord";
   char buf2[100]="fnort";
   if (strcmp(buf,buf)) die("strcmp say a != a");
--- dietlibc-0.22/test/strlen.c.fix-tests-warnings	2002-02-21 23:53:43.000000000 +0100
+++ dietlibc-0.22/test/strlen.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,9 +1,10 @@
 #include <assert.h>
 #include <string.h>
 
-main() {
+int main() {
   const char* x="foo bar baz";
   assert(strlen("")==0);
   assert(strlen(x)==11);
   assert(strlen(x+5)==6);
+  return 0;
 }
--- dietlibc-0.22/test/strncat.c.fix-tests-warnings	2002-01-09 19:18:43.000000000 +0100
+++ dietlibc-0.22/test/strncat.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,12 +1,13 @@
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 
 void die(const char* message) {
   puts(message);
   exit(1);
 }
 
-main() {
+int main() {
   char buf[100]="fnord";
   strncat(buf,"foo",0);
   if (strcmp(buf,"fnord")) die("strncat did not work for length 0");
--- dietlibc-0.22/test/strncpy.c.fix-tests-warnings	2002-02-21 15:19:10.000000000 +0100
+++ dietlibc-0.22/test/strncpy.c	2002-11-29 14:59:37.000000000 +0100
@@ -2,11 +2,12 @@
 #include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   char buf[100];
   assert(strncpy(buf,"fnord",6)==buf);
   assert(!strcmp(buf,"fnord"));
   memset(buf,23,sizeof buf);
   assert(strncpy(buf,"fnord",5)==buf);
   assert(!memcmp(buf,"fnord",5) && buf[5]==23);
+  return 0;
 }
--- dietlibc-0.22/test/strrchr.c.fix-tests-warnings	2002-02-21 23:53:43.000000000 +0100
+++ dietlibc-0.22/test/strrchr.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,9 +1,10 @@
 #include <assert.h>
 #include <string.h>
 
-main() {
+int main() {
   const char* x="foo bar baz";
   assert(strrchr(x,'z')==x+10);
   assert(strrchr(x,' ')==x+7);
   assert(strrchr(x,'x')==0);
+  return 0;
 }
--- dietlibc-0.22/test/strstr.c.fix-tests-warnings	2002-02-18 00:53:03.000000000 +0100
+++ dietlibc-0.22/test/strstr.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,11 +1,12 @@
 #include <string.h>
 #include <assert.h>
 
-main() {
+int main() {
   char buf[]="foo bar baz";
   assert(strstr(buf,"bar")==buf+4);
   assert(strstr(buf,"baz")==buf+8);
   assert(strstr(buf,"barney")==0);
   assert(strstr(buf,"foo")==buf);
   assert(strstr(buf,"")==buf);
+  return 0;
 }
--- dietlibc-0.22/test/syscall.c.fix-tests-warnings	2002-06-17 05:48:22.000000000 +0200
+++ dietlibc-0.22/test/syscall.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,5 +1,6 @@
 #include <asm/unistd.h>
 
-main() {
+int main() {
   syscall(__NR_write,1,"foo\n",4);
+  return 0;
 }
--- dietlibc-0.22/test/testandset.c.fix-tests-warnings	2002-05-13 17:56:48.000000000 +0200
+++ dietlibc-0.22/test/testandset.c	2002-11-29 14:59:37.000000000 +0100
@@ -1,6 +1,6 @@
 #include <assert.h>
 
-main()
+int main()
 {
 	long foo = 0;
 	__testandset (&foo);
