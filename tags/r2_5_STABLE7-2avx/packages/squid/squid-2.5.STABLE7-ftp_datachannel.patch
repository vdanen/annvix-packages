Index: squid/src/ftp.c
diff -c squid/src/ftp.c:1.316.2.15 squid/src/ftp.c:1.316.2.16
*** squid/src/ftp.c:1.316.2.15	Tue Oct  5 16:34:42 2004
--- squid/src/ftp.c	Fri Jan 21 04:52:01 2005
***************
*** 77,83 ****
      unsigned int put:1;
      unsigned int put_mkdir:1;
      unsigned int listformat_unknown:1;
-     unsigned int datachannel_hack:1;
  };
  
  typedef struct _Ftpdata {
--- 77,82 ----
***************
*** 928,935 ****
  	    j >>= 1;
  	IOStats.Ftp.read_hist[bin]++;
      }
!     if (ftpState->flags.isdir && !ftpState->flags.html_header_sent && len >= 0) {
! 	ftpListingStart(ftpState);
      }
      if (len < 0) {
  	debug(50, ignoreErrno(errno) ? 3 : 1) ("ftpDataRead: read error: %s\n", xstrerror());
--- 927,936 ----
  	    j >>= 1;
  	IOStats.Ftp.read_hist[bin]++;
      }
!     if (!ftpState->flags.http_header_sent && len >= 0) {
! 	ftpAppendSuccessHeader(ftpState);
! 	if (ftpState->flags.isdir)
! 	    ftpListingStart(ftpState);
      }
      if (len < 0) {
  	debug(50, ignoreErrno(errno) ? 3 : 1) ("ftpDataRead: read error: %s\n", xstrerror());
***************
*** 940,945 ****
--- 941,950 ----
  		data,
  		Config.Timeout.read);
  	} else {
+ 	    if (!ftpState->flags.http_header_sent && !ftpState->fwd->flags.ftp_pasv_failed && ftpState->flags.pasv_supported) {
+ 		ftpState->fwd->flags.dont_retry = 0;	/* this is a retryable error */
+ 		ftpState->fwd->flags.ftp_pasv_failed = 1;
+ 	    }
  	    ftpFailed(ftpState, ERR_READ_ERROR);
  	    /* ftpFailed closes ctrl.fd and frees ftpState */
  	    return;
***************
*** 1083,1093 ****
      ftpState->data.fd = -1;
      ftpState->size = -1;
      ftpState->mdtm = -1;
!     if (!Config.Ftp.passive)
! 	ftpState->flags.rest_supported = 0;
!     else if (fwd->flags.ftp_pasv_failed)
! 	ftpState->flags.pasv_supported = 0;
!     else
  	ftpState->flags.pasv_supported = 1;
      ftpState->flags.rest_supported = 1;
      ftpState->fwd = fwd;
--- 1088,1094 ----
      ftpState->data.fd = -1;
      ftpState->size = -1;
      ftpState->mdtm = -1;
!     if (Config.Ftp.passive && !fwd->flags.ftp_pasv_failed)
  	ftpState->flags.pasv_supported = 1;
      ftpState->flags.rest_supported = 1;
      ftpState->fwd = fwd;
***************
*** 1728,1742 ****
  	return;
      }
      if (ftpState->data.fd >= 0) {
! 	if (!ftpState->flags.datachannel_hack) {
! 	    /* We are already connected, reuse this connection. */
! 	    ftpRestOrList(ftpState);
! 	    return;
! 	} else {
! 	    /* Close old connection */
! 	    comm_close(ftpState->data.fd);
! 	    ftpState->data.fd = -1;
! 	}
      }
      if (!ftpState->flags.pasv_supported) {
  	ftpSendPort(ftpState);
--- 1729,1737 ----
  	return;
      }
      if (ftpState->data.fd >= 0) {
! 	/* Close old connection */
! 	comm_close(ftpState->data.fd);
! 	ftpState->data.fd = -1;
      }
      if (!ftpState->flags.pasv_supported) {
  	ftpSendPort(ftpState);
***************
*** 2164,2170 ****
      debug(9, 3) ("This is ftpReadList\n");
      if (code == 125 || (code == 150 && ftpState->data.host)) {
  	/* Begin data transfer */
- 	ftpAppendSuccessHeader(ftpState);
  	commSetSelect(ftpState->data.fd,
  	    COMM_SELECT_READ,
  	    ftpDataRead,
--- 2159,2164 ----
***************
*** 2218,2224 ****
      if (code == 125 || (code == 150 && ftpState->data.host)) {
  	/* Begin data transfer */
  	debug(9, 3) ("ftpReadRetr: reading data channel\n");
- 	ftpAppendSuccessHeader(ftpState);
  	commSetSelect(ftpState->data.fd,
  	    COMM_SELECT_READ,
  	    ftpDataRead,
--- 2212,2217 ----
***************
*** 2372,2398 ****
      ftpGetFile(ftpState);
  }
  
- static void
- ftpTryDatachannelHack(FtpStateData * ftpState)
- {
-     ftpState->flags.datachannel_hack = 1;
-     /* we have to undo some of the slash hack... */
-     if (ftpState->old_filepath != NULL) {
- 	ftpState->flags.try_slash_hack = 0;
- 	safe_free(ftpState->filepath);
- 	ftpState->filepath = ftpState->old_filepath;
- 	ftpState->old_filepath = NULL;
-     }
-     ftpState->flags.tried_nlst = 0;
-     /* And off we go */
-     if (ftpState->flags.isdir) {
- 	ftpListDir(ftpState);
-     } else {
- 	ftpGetFile(ftpState);
-     }
-     return;
- }
- 
  /* Forget hack status. Next error is shown to the user */
  static void
  ftpUnhack(FtpStateData * ftpState)
--- 2365,2370 ----
***************
*** 2441,2460 ****
  	    break;
  	}
      }
-     /* Try to reopen datachannel */
-     if (!ftpState->flags.datachannel_hack &&
- 	ftpState->pathcomps == NULL) {
- 	switch (ftpState->state) {
- 	case SENT_RETR:
- 	case SENT_LIST:
- 	case SENT_NLST:
- 	    /* Try to reopen datachannel */
- 	    ftpHackShortcut(ftpState, ftpTryDatachannelHack);
- 	    return;
- 	default:
- 	    break;
- 	}
-     }
      ftpFailed(ftpState, ERR_NONE);
      /* ftpFailed closes ctrl.fd and frees ftpState */
  }
--- 2413,2418 ----
