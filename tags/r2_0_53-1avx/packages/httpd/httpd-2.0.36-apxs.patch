
- remove checks requiring /usr/sbin/httpd to be present: this is
unnecessary, we know that httpd contains mod_so, and only the
httpd-devel package should be required to build modules.
- don't load /usr/sbin/envvars
- add APR includedir to CFLAGS
- always use libtool specified by apr-config
- never insert AddModule statements on "apxs -a -i"
- just link modules against libapr{,util}-X.la, since the .la files
list their own dependencies.
- define $LTFLAGS so apxs -q LIBTOOL works

Upstream-HEAD: committed,vendor
Upstream-Status: mostly bits which should be upstream are

--- httpd-2.0.47/support/apxs.in.apxs
+++ httpd-2.0.47/support/apxs.in
@@ -84,8 +84,15 @@
 my $CFG_LIBEXECDIR = eval qq("$libexecdir");
 my $sbindir        = get_vars("sbindir");
 my $CFG_SBINDIR    = eval qq("$sbindir");
+my $libtool        = `/usr/bin/apr-config --apr-libtool`;
 my $ltflags        = $ENV{'LTFLAGS'};
 $ltflags or $ltflags = "--silent";
+my $LTFLAGS        = $ltflags;
+
+chomp($libtool);
+
+my $apr_includedir = get_vars("APR_INCLUDEDIR");
+$CFG_CFLAGS .= " -I" . $apr_includedir if defined $apr_includedir;
 
 my %internal_vars = map {$_ => 1}
     qw(TARGET CC CFLAGS CFLAGS_SHLIB LD_SHLIB LDFLAGS_SHLIB LIBS_SHLIB
@@ -222,34 +229,6 @@
     }
 }
 
-##
-##  Initial shared object support check
-##
-my $httpd = get_vars("sbindir") . "/" . get_vars("progname");
-$httpd = eval qq("$httpd");
-$httpd = eval qq("$httpd");
-my $envvars = get_vars("sbindir") . "/envvars";
-$envvars = eval qq("$envvars");
-$envvars = eval qq("$envvars");
-
-#allow apxs to be run from the source tree, before installation
-if ($0 =~ m:support/apxs$:) {
-    ($httpd = $0) =~ s:support/apxs$::;
-}
-
-unless (-x "$httpd") {
-	error("$httpd not found or not executable");
-	exit 1;
-}
-
-unless (grep /mod_so/, `. $envvars && $httpd -l`) {
-    error("Sorry, no shared object support for Apache");
-    error("available under your platform. Make sure");
-    error("the Apache module mod_so is compiled into");
-    error("your server binary `$httpd'.");
-    exit 1;
-}
-
 sub get_config_vars{
     my ($file, $rh_config) = @_;
 
@@ -376,15 +355,6 @@
     exit(1);
 }
 
-my $libtool = `$apr_bindir/apr-config --installbuilddir`;
-chomp($libtool);
-$libtool = "$libtool/libtool";
-
-my $apr_includedir = `$apr_bindir/apr-config --includes`;
-chomp($apr_includedir);
-my $apu_includedir = `$apu_bindir/apu-config --includes`;
-chomp($apu_includedir);
-
 if ($opt_c) {
     ##
     ##  SHARED OBJECT COMPILATION
@@ -447,7 +417,7 @@
         $la =~ s|\.c$|.la|;
         my $o = $s;
         $o =~ s|\.c$|.o|;
-        push(@cmds, "$libtool $ltflags --mode=compile $CFG_CC $cflags -I$CFG_INCLUDEDIR $apr_includedir $apu_includedir $opt -c -o $lo $s && touch $slo");
+        push(@cmds, "$libtool $ltflags --mode=compile $CFG_CC $cflags -I$CFG_INCLUDEDIR $opt -c -o $lo $s && touch $slo");
         unshift(@objs, $lo);
     }
 
@@ -474,9 +444,9 @@
 
     if ($opt_p == 1) {
         
-        my $apr_libs=`$apr_bindir/apr-config --ldflags --link-libtool --libs`;
+        my $apr_libs=`$apr_bindir/apr-config --link-libtool`;
         chomp($apr_libs);
-        my $apu_libs=`$apu_bindir/apu-config --ldflags --link-libtool --libs`;
+        my $apu_libs=`$apu_bindir/apu-config --link-libtool`;
         chomp($apu_libs);
         
         $opt .= " ".$apu_libs." ".$apr_libs;
@@ -504,9 +474,8 @@
     ##
 
     #   determine installation commands
-    #   and corresponding LoadModule/AddModule directives
+    #   and corresponding LoadModule directive
     my @lmd = ();
-    my @amd = ();
     my @cmds = ();
     my $f;
     foreach $f (@args) {
@@ -560,7 +529,6 @@
         $dir =~ s|(.)$|$1/|;
 	$t =~ s|\.la$|.so|;
         push(@lmd, sprintf("LoadModule %-18s %s", "${name}_module", "$dir$t"));
-        push(@amd, sprintf("AddModule %s", $filename));
     }
 
     #   execute the commands
@@ -656,15 +624,7 @@
             $lmd =~ m|LoadModule\s+(.+?)_module.*|;
             notice("[$what module `$1' in $CFG_SYSCONFDIR/$CFG_TARGET.conf]");
         }
-        my $amd;
-        foreach $amd (@amd) {
-            if ($content !~ m|\n#?\s*$amd|) {
-                 $content =~ s|^(.*\n#?\s*AddModule\s+[^\n]+\n)|$1$c$amd\n|sg;
-            } else {
-                 $content =~ s|^(.*\n)#?\s*$amd[^\n]*\n|$1$c$amd\n|sg;
-            }
-        }
-        if (@lmd or @amd) {
+        if (@lmd) {
             if (open(FP, ">$CFG_SYSCONFDIR/$CFG_TARGET.conf.new")) {
                 print FP $content;
                 close(FP);
