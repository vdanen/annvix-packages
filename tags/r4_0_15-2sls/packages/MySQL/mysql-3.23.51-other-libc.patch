--- mysql-3.23.53/configure.in.other-libc	2002-10-10 12:17:29.000000000 +0200
+++ mysql-3.23.53/configure.in	2002-10-23 20:10:40.000000000 +0200
@@ -463,18 +463,30 @@
                           link against glibc 2.2 without making the user 
                           upgrade the standard libc installation.],
  [
-   other_libc_include="$withval/include"
-   other_libc_lib="$withval/lib"
+   other_libc_candidate=`echo "$withval" | sed -e "s/\/\/*$//"`
+   case "$other_libc_candidate" in
+    */lib | */lib64)
+      other_libc_include=
+      other_libc_lib="$other_libc_candidate"
+      ;;
+    *)
+      other_libc_include="$other_libc_candidate/include"
+      other_libc_lib="$other_libc_candidate/lib"
+      ;;
+   esac
    with_other_libc="yes"
    enable_shared="no"
    all_is_static="yes"
-   CFLAGS="$CFLAGS -I$other_libc_include"
+   if test -n "$other_libc_include" -a "$other_libc_include" != "/usr/include"; then
+      CFLAGS="$CFLAGS -I$other_libc_include"
+      CXXFLAGS="$CXXFLAGS -I$other_libc_include"
+   fi
    # There seems to be a feature in gcc that treats system and libc headers
    # silently when they violatate ANSI C++ standard, but it is strict otherwise
    # since gcc cannot now recognize that our headers are libc, we work around
    # by telling it to be permissive. Note that this option only works with
    # new versions of gcc (2.95.x and above)
-   CXXFLAGS="$CXXFLAGS -fpermissive -I$other_libc_include"
+   CXXFLAGS="$CXXFLAGS -fpermissive"
    if test -f "$other_libc_lib/libnss_files.a"
    then
      # libc has been compiled with --enable-static-nss
