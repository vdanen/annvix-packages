--- src/support.c	15 Jul 2003 14:10:52 -0000	1.4
+++ src/support.c	8 Sep 2003 14:15:10 -0000
@@ -171,12 +171,11 @@
   int retval = PAM_IGNORE;
   int argc = 0;
 
-  /* Special case for chauthtok (or maybe for other functions as well?) */
-  if (!strcmp(func_name, "pam_sm_chauthtok")
-   && options->use_first_pass)
-    {
-      argv[argc++] = "try_first_pass";
-    }
+  /* Give through some of our arguments to the called function.  */
+  if (options->use_first_pass)
+    argv[argc++] = "use_first_pass";
+  if (options->debug)
+    argv[argc++] = "debug";
 
   argv[argc] = NULL;
 
--- src/unix_auth.c	15 Jul 2003 14:10:52 -0000	1.15
+++ src/unix_auth.c	8 Sep 2003 14:15:10 -0000
@@ -220,7 +220,23 @@
 				options);
 
 	  if (retval == PAM_SUCCESS)
-	    return retval;
+	    {
+	      pam_get_item (pamh, PAM_SERVICE, (void *) &service);
+	      if (strcasecmp (service, "chsh") == 0 ||
+		  strcasecmp (service, "chfn") == 0)
+		{
+		  char *p;
+
+		  pam_get_item (pamh, PAM_AUTHTOK, (void *)&p);
+		  if (p != NULL)
+		    {
+		      char *msg = malloc (strlen (p) + 13);
+		      sprintf (msg, "PAM_AUTHTOK=%s", p);
+		      pam_putenv (pamh, msg);
+		    }
+		}
+	      return retval;
+	    }
 	}
     }
 
@@ -475,7 +491,8 @@
 				"pam_sm_setcred",
 				options);
 
-	  if (retval != PAM_SUCCESS && retval != PAM_IGNORE)
+	  if (retval != PAM_SUCCESS && retval != PAM_IGNORE &&
+	      retval != PAM_CRED_UNAVAIL)
 	    return retval;
 	}
     }
--- src/get_options.c	15 Jul 2003 14:10:52 -0000	1.9
+++ src/get_options.c	15 Sep 2003 07:51:23 -0000
@@ -57,6 +57,9 @@
 static void
 parse_option (const char *argv, const char *type, options_t *options)
 {
+  if (argv == NULL || argv[0] == '\0')
+    return;
+
   if (strcasecmp (argv, "nullok") == 0)
     options->nullok = 1;
   else if (strcasecmp (argv, "not_set_pass") == 0)
@@ -145,7 +148,7 @@
       free(copy);
     }
   else
-    __pam_log (LOG_ERR, "Unknown option: %s", argv);
+    __pam_log (LOG_ERR, "Unknown option: `%s'", argv);
 }
 
 static void
