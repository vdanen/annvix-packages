2003-08-25  Ulrich Drepper  <drepper@redhat.com>

	* libio/oldfileops.c (_IO_old_file_init): Initialize _mode field
	if the object size is large enough.

2003-08-25  Ulrich Drepper  <drepper@redhat.com>

	* libio/libio.h (_IO_fwide): In the mode==0 optimization, don't
	use _mode if _IO_fwide_maybe_incompatible.
	* libio/iofwide.c (_IO_fwide): Move the test for mode == 0 after
	the compatibility test.

--- glibc-2.3.2/libio/oldfileops.c.iofwide	2002-09-24 06:20:57.000000000 +0200
+++ glibc-2.3.2/libio/oldfileops.c	2003-08-26 10:39:45.000000000 +0200
@@ -1,4 +1,4 @@
-/* Copyright (C) 1993,95,97,98,99,2000,2002 Free Software Foundation, Inc.
+/* Copyright (C) 1993,95,97,98,99,2000,2002,2003 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Written by Per Bothner <bothner@cygnus.com>.
 
@@ -128,6 +128,16 @@ _IO_old_file_init (fp)
   fp->file._vtable_offset = ((int) sizeof (struct _IO_FILE)
 			     - (int) sizeof (struct _IO_FILE_complete));
   fp->file._fileno = -1;
+
+#if defined SHARED && defined _LIBC
+  if (__builtin_expect (&_IO_stdin_used != NULL, 1)
+      || (fp != (struct _IO_FILE_plus *) _IO_stdin
+	  && fp != (struct _IO_FILE_plus *) _IO_stdout
+	  && fp != (struct _IO_FILE_plus *) _IO_stderr))
+    /* The object is dynamically allocated and large enough.  Initialize
+       the _mode element as well.  */
+    ((struct _IO_FILE_complete *) fp)->_mode = -1;
+#endif
 }
 
 int
--- glibc-2.3.2/libio/iofwide.c.iofwide	2002-03-13 06:19:14.000000000 +0100
+++ glibc-2.3.2/libio/iofwide.c	2003-08-26 10:39:45.000000000 +0200
@@ -1,4 +1,4 @@
-/* Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
+/* Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -100,10 +100,6 @@ _IO_fwide (fp, mode)
   /* Normalize the value.  */
   mode = mode < 0 ? -1 : (mode == 0 ? 0 : 1);
 
-  if (mode == 0)
-    /* The caller simply wants to know about the current orientation.  */
-    return fp->_mode;
-
 #if defined SHARED && defined _LIBC \
     && SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_1)
   if (__builtin_expect (&_IO_stdin_used == NULL, 0)
@@ -112,8 +108,10 @@ _IO_fwide (fp, mode)
     return -1;
 #endif
 
-  if (fp->_mode != 0)
     /* The orientation already has been determined.  */
+  if (fp->_mode != 0
+      /* Or the caller simply wants to know about the current orientation.  */
+      || mode == 0)
     return fp->_mode;
 
   /* Set the orientation appropriately.  */
--- glibc-2.3.2/libio/libio.h.iofwide	2002-08-30 09:05:18.000000000 +0200
+++ glibc-2.3.2/libio/libio.h	2003-08-26 10:39:45.000000000 +0200
@@ -1,4 +1,4 @@
-/* Copyright (C) 1991-1995, 1997-2001, 2002 Free Software Foundation, Inc.
+/* Copyright (C) 1991-1995, 1997-2002, 2003 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Written by Per Bothner <bothner@cygnus.com>.
 
@@ -502,7 +502,7 @@ weak_extern (_IO_stdin_used);
 	 __result = (__fp)->_mode;					      \
        }								      \
      else if (__builtin_constant_p (__mode) && (__mode) == 0)		      \
-       __result = (__fp)->_mode;					      \
+       __result = _IO_fwide_maybe_incompatible ? -1 : (__fp)->_mode;	      \
      else								      \
        __result = _IO_fwide (__fp, __result);				      \
      __result; })
