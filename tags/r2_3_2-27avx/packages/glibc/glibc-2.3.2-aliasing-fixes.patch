2003-07-29  Jakub Jelinek  <jakub@redhat.com>

	* include/ctype.h (__ctype_b_loc, __ctype_toupper_loc,
	__ctype_tolower_loc): Avoid "dereferencing type-punned pointer will
	break strict-aliasing rules" warnings.

--- glibc-2.3.2/include/ctype.h.aliasing-fixes	2003-03-20 10:19:49.000000000 +0100
+++ glibc-2.3.2/include/ctype.h	2003-08-22 12:03:00.000000000 +0200
@@ -25,31 +25,43 @@ __libc_tsd_define (extern, CTYPE_TOLOWER
 CTYPE_EXTERN_INLINE const uint16_t ** __attribute__ ((const))
 __ctype_b_loc (void)
 {
-  const uint16_t **tablep =
-    (const uint16_t **) __libc_tsd_address (CTYPE_B);
-  if (__builtin_expect (*tablep == NULL, 0))
-    *tablep = (const uint16_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_CLASS) + 128;
-  return tablep;
+  union
+    {
+      void **ptr;
+      const uint16_t **tablep;
+    } u;
+  u.ptr = __libc_tsd_address (CTYPE_B);
+  if (__builtin_expect (*u.tablep == NULL, 0))
+    *u.tablep = (const uint16_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_CLASS) + 128;
+  return u.tablep;
 }
 
 CTYPE_EXTERN_INLINE const int32_t ** __attribute__ ((const))
 __ctype_toupper_loc (void)
 {
-  const int32_t **tablep =
-    (const int32_t **) __libc_tsd_address (CTYPE_TOUPPER);
-  if (__builtin_expect (*tablep == NULL, 0))
-    *tablep = ((int32_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_TOUPPER) + 128);
-  return tablep;
+  union
+    {
+      void **ptr;
+      const int32_t **tablep;
+    } u;
+  u.ptr = __libc_tsd_address (CTYPE_TOUPPER);
+  if (__builtin_expect (*u.tablep == NULL, 0))
+    *u.tablep = ((int32_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_TOUPPER) + 128);
+  return u.tablep;
 }
 
 CTYPE_EXTERN_INLINE const int32_t ** __attribute__ ((const))
 __ctype_tolower_loc (void)
 {
-  const int32_t **tablep =
-    (const int32_t **) __libc_tsd_address (CTYPE_TOLOWER);
-  if (__builtin_expect (*tablep == NULL, 0))
-    *tablep = ((int32_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_TOLOWER) + 128);
-  return tablep;
+  union
+    {
+      void **ptr;
+      const int32_t **tablep;
+    } u;
+  u.ptr = __libc_tsd_address (CTYPE_TOLOWER);
+  if (__builtin_expect (*u.tablep == NULL, 0))
+    *u.tablep = ((int32_t *) _NL_CURRENT (LC_CTYPE, _NL_CTYPE_TOLOWER) + 128);
+  return u.tablep;
 }
 
 # endif	/* Not NOT_IN_libc.  */
