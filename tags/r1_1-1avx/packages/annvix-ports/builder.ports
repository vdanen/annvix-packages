#!/bin/sh
#
# $Id$
#

ARG=$1
PKG=$2
PTREE=/usr/local/ports
cvsroot=:pserver:anonymous@cvs.annvix.org:/cvsroot

usage() {
    echo "usage: `basename $0` [-cuslhiv] [-p <package>]"
    echo "  -c: checkout CVS"
    echo "  -u: update CVS"
    echo "  -s: setup urpmi"
    echo "  -l: cleanup override"
    echo "  -h: force creation of hdlist"
    echo "  -i: install package after building"
    echo "  -v: show verbose rpm build output"
    echo "  -p: build package <package>"
    echo ""
}

mkhdlist() {
    cd ${PTREE}/packages && genhdlist .
}

if [ "$1" == "" ]; then
    usage
    exit 1
fi

# parse the options
while [ -n "$*" ]; do
    case $1 in
        -c) checkout=1;;
        -u) update=1;;
        -s) setup=1;;
        -h) hdlist=1;;
        -i) install=1;;
        -l) cleanup=1;;
        -v) verbose="-v";;
        -p) mkpkg=1; shift; pkg=$1;;
        -*) echo "FATAL: invalid option $o"; usage $0; exit 1;;
        *) usage $0; exit 1;;
    esac
    shift
done

if [ "$cleanup" == "1" ]; then
    echo "Cleaning up /override..."
    find /override -maxdepth 1 -type d -user `id -u` -exec rm -rf {} \;
fi 

if [ "$checkout" == "1" ]; then
    echo "Checking out ports from CVS..."
    CVSROOT=${cvsroot} cvs co ports
    if [ "$?" != "0" ]; then
        echo "WARNING: An error occurred checking out ports from CVS"
    fi
    logger -p local1.info -t builder "Checked out ports from CVS"
fi

if [ "$update" == "1" ]; then
    echo "Updating ports from CVS..."
    CVSROOT=${cvsroot} cvs update ports
    if [ "$?" != "0" ]; then
        echo "WARNING: An error occurred updating ports from CVS"
    fi
    logger -p local1.info -t builder "Updated ports from CVS"
fi

if [ "$hdlist" == "1" ]; then
    mkhdlist
fi

if [ "$setup" == "1" ]; then
    mkhdlist
    echo "Creating the local ports repository for urpmi..."
    sudo /usr/sbin/urpmi.addmedia ports file:/${PTREE}/packages with ./hdlist.cz
    if [ "$?" != "0" ]; then
        echo "FATAL: An error occurred adding the urpmi medium.  Aborting." && exit 1
    fi
    logger -p local1.info -t builder "Adding local ports repository for urpmi"
fi

if [ "$mkpkg" == "1" ]; then
    if [ "$pkg" == "" ]; then
        echo "FATAL: I need a package to build" && exit 1
    fi
    if [ ! -d ${PTREE}/ports/${pkg} ]; then
        echo "FATAL: The port '${pkg}' is not available.  Aborting." && exit 1
    fi
    echo "Building port package ${pkg}"
    logger -p local1.info -t builder "Building port package ${pkg}"
    pushd ${PTREE}/ports >/dev/null
        sh build.sh ${verbose} ${pkg}
        if [ "$?" == "0" ]; then
            caninstall=1
        fi
    popd
    if [ "$install" == "1" -a "$caninstall" == "1" ]; then
        echo "Installing ${pkg}"
        sudo /usr/sbin/urpmi ${pkg}
        if [ "$?" != "0" ]; then
            echo "FATAL: An error occurred executing urpmi.  Aborting." && exit 1
        fi
    fi
fi

exit 0
