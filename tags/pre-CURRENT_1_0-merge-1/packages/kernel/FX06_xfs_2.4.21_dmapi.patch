diff -urN -I '$[ABD-Z].*\$' -I XFS_VERSION_STRING -x '*prcs*' -x aic7xxx -x '*.prj' -x defkeymap.c -x '*.rej' -x '*.orig' 2.4.20-xfs/Documentation/Configure.help 2.4.x-xfs/linux/Documentation/Configure.help
--- 2.4.20-xfs/Documentation/Configure.help	Wed Mar 19 15:47:57 2003
+++ 2.4.x-xfs/linux/Documentation/Configure.help	Wed Dec 18 12:48:20 2002
@@ -15990,6 +15990,20 @@
   system of your root partition is compiled as a module, you'll need
   to use an initial ramdisk (initrd) to boot.
 
+DMAPI support
+CONFIG_XFS_DMAPI
+  The Data Management API is a system interface used to implement
+  the interface defined in the X/Open document:
+    "Systems Management: Data Storage Management (XDSM) API",
+  dated February 1997.  This interface is used by hierarchical
+  storage management systems.
+
+  If XFS is built as module (= code which can be inserted in and
+  removed from the running kernel whenever you want), this code will
+  also be built as module.  It is called xfs_dmapi.o.
+
+  If unsure, say N.
+
 Quota support
 CONFIG_XFS_QUOTA
   If you say Y here, you will be able to set limits for disk usage on
diff -urN -I '$[ABD-Z].*\$' -I XFS_VERSION_STRING -x '*prcs*' -x aic7xxx -x '*.prj' -x defkeymap.c -x '*.rej' -x '*.orig' 2.4.20-xfs/fs/Config.in 2.4.x-xfs/linux/fs/Config.in
--- 2.4.20-xfs/fs/Config.in	Wed Mar 19 15:47:57 2003
+++ 2.4.x-xfs/linux/fs/Config.in	Wed Dec 18 12:40:59 2002
@@ -105,6 +105,7 @@
 dep_mbool    '  ACL support' CONFIG_XFS_POSIX_ACL $CONFIG_XFS_FS
 dep_mbool    '  Realtime support (EXPERIMENTAL)' CONFIG_XFS_RT $CONFIG_XFS_FS $CONFIG_EXPERIMENTAL
 dep_mbool    '  Quota support' CONFIG_XFS_QUOTA $CONFIG_XFS_FS
+dep_mbool    '  DMAPI support' CONFIG_XFS_DMAPI $CONFIG_XFS_FS
 dep_mbool    '  Debugging support (EXPERIMENTAL)' CONFIG_XFS_DEBUG $CONFIG_XFS_FS $CONFIG_EXPERIMENTAL
 dep_mbool    '  Pagebuf debugging support (EXPERIMENTAL)' CONFIG_PAGEBUF_DEBUG $CONFIG_XFS_FS $CONFIG_EXPERIMENTAL

Index: 20.1/include/linux/mm.h
--- 20.1/include/linux/mm.h Wed, 29 May 2002 14:00:22 +1000 kaos (linux-2.4/g/b/6_mm.h 1.1.1.2.1.1.2.3.1.1.2.5.1.25 644)
+++ 20.7(w)/include/linux/mm.h Wed, 19 Mar 2003 15:23:43 +1100 kaos (linux-2.4/g/b/6_mm.h 1.1.1.2.1.1.2.3.1.22 644)
@@ -132,6 +132,8 @@ struct vm_operations_struct {
 	void (*open)(struct vm_area_struct * area);
 	void (*close)(struct vm_area_struct * area);
 	struct page * (*nopage)(struct vm_area_struct * area, unsigned long address, int unused);
+#define HAVE_VMOP_MPROTECT
+	int (*mprotect)(struct vm_area_struct * area, unsigned int newflags);
 };
 
 /*
Index: 20.1/mm/mprotect.c
--- 20.1/mm/mprotect.c Thu, 21 Mar 2002 10:50:19 +1100 kaos (linux-2.4/j/13_mprotect.c 1.2.1.1.1.1 644)
+++ 20.7(w)/mm/mprotect.c Wed, 19 Mar 2003 15:23:43 +1100 kaos (linux-2.4/j/13_mprotect.c 1.2.1.1.1.2 644)
@@ -300,6 +300,11 @@ asmlinkage long sys_mprotect(unsigned lo
 			goto out;
 		}
 
+		if (vma->vm_ops && vma->vm_ops->mprotect) {
+			error = vma->vm_ops->mprotect(vma, newflags);
+			if (error < 0)
+				goto out;
+		}
 		if (vma->vm_end > end) {
 			error = mprotect_fixup(vma, &prev, nstart, end, newflags);
 			goto out;
