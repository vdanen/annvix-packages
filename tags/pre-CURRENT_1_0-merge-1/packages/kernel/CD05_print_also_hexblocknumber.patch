--- linux/fs/ext2/inode.c.chmou	Tue Sep 25 11:32:04 2001
+++ linux/fs/ext2/inode.c	Tue Sep 25 11:32:08 2001
@@ -759,8 +759,8 @@
 			 */ 
 			if (!bh) {
 				ext2_error(inode->i_sb, "ext2_free_branches",
-					"Read failure, inode=%ld, block=%ld",
-					inode->i_ino, nr);
+					"Read failure, inode=%ld, block=%ld / 0x%lx",
+					inode->i_ino, nr,nr);
 				continue;
 			}
 			ext2_free_branches(inode,
@@ -913,7 +913,7 @@
 	if (!(bh = bread (inode->i_dev, block, inode->i_sb->s_blocksize))) {
 		ext2_error (inode->i_sb, "ext2_read_inode",
 			    "unable to read inode block - "
-			    "inode=%lu, block=%lu", inode->i_ino, block);
+			    "inode=%lu, block=%lu/0x%lx", inode->i_ino, block,block);
 		goto bad_inode;
 	}
 	offset &= (EXT2_BLOCK_SIZE(inode->i_sb) - 1);
@@ -1055,7 +1055,7 @@
 	if (!(bh = bread (inode->i_dev, block, inode->i_sb->s_blocksize))) {
 		ext2_error (inode->i_sb, "ext2_write_inode",
 			    "unable to read inode block - "
-			    "inode=%lu, block=%lu", inode->i_ino, block);
+			    "inode=%lu, block=%lu/%lx", inode->i_ino, block,block);
 		return -EIO;
 	}
 	offset &= EXT2_BLOCK_SIZE(inode->i_sb) - 1;
diff -u linux/drivers/block/ll_rw_blk.c.chmou linux/drivers/block/ll_rw_blk.c
--- linux/drivers/block/ll_rw_blk.c.chmou	Tue Sep 25 11:32:04 2001
+++ linux/drivers/block/ll_rw_blk.c	Tue Sep 25 11:32:18 2001
@@ -1003,8 +1003,9 @@
 			   when mounting a device. */
 			printk(KERN_INFO
 			       "attempt to access beyond end of device\n");
-			printk(KERN_INFO "%s: rw=%d, want=%ld, limit=%d\n",
+			printk(KERN_INFO "%s: rw=%d, want=%ld, (=0x%lx), limit=%d\n",
 			       kdevname(bh->b_rdev), rw,
+                               (sector + count)>>1,
 			       (sector + count)>>1, minorsize);
 
 			/* Yecch again */
