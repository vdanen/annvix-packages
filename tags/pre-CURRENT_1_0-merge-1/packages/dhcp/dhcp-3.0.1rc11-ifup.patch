diff -urN dhcp-3.0.1rc11/client/scripts/linux dhcp-3.0.1rc11-modified/client/scripts/linux
--- dhcp-3.0.1rc11/client/scripts/linux	2002-11-15 02:09:09.000000000 +0100
+++ dhcp-3.0.1rc11-modified/client/scripts/linux	2003-08-21 16:56:52.000000000 +0200
@@ -1,8 +1,11 @@
 #!/bin/bash
-# dhclient-script for Linux. Dan Halbert, March, 1997.
-# Updated for Linux 2.[12] by Brian J. Murrell, January 1999.
-# No guarantees about this. I'm a novice at the details of Linux
-# networking.
+# Network Interface Configuration System
+#
+# Based on:
+#   dhclient-script for Linux. Dan Halbert, March, 1997.
+#   Updated for Linux 2.[12] by Brian J. Murrell, January 1999.
+
+
 
 # Notes:
 
@@ -19,18 +22,18 @@
 # address if it is not supplied. This might be much more easily done
 # by the dhclient C code, and passed on.
 
-# 4. TIMEOUT not tested. ping has a flag I don't know, and I'm suspicious
-# of the $1 in its args.
-
-make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
-    chmod 644 /etc/resolv.conf
-    for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
-    done
-  fi
-}
+function make_resolv_conf() {
+    rm -f /etc/resolv.conf
+    if [ -n "$new_domain_name" ]; then
+       echo search $new_domain_name > /etc/resolv.conf
+    fi
+    if [ -n "$new_domain_name_servers" ]; then
+       for nameserver in $new_domain_name_servers; do
+           echo nameserver $nameserver >> /etc/resolv.conf
+       done
+    fi
+    [[ -x /sbin/update-resolvrdv ]] && /sbin/update-resolvrdv
+ }
 
 # Must be used on exit.   Invokes the local dhcp client exit hooks, if any.
 exit_with_hooks() {
@@ -53,6 +56,25 @@
   fi
 fi
 
+# Import Mandrake Linux configuration
+cd /etc/sysconfig/network-scripts;
+. /etc/sysconfig/network-scripts/network-functions
+. /etc/rc.d/init.d/functions
+
+[ -f ../network ] && . ../network
+[ -f ../networking/network ] && . ../networking/network
+
+CONFIG=$interface
+
+need_config ${CONFIG}
+
+[ -f "${CONFIG}" ] || {
+    echo $"$0: configuration for $interface not found." >&2
+    exit_with_hooks 1
+}   
+
+source_config
+
 release=`uname -r`
 release=`expr $release : '\(.*\)\..*'`
 relminor=`echo $release |sed -e 's/[0-9]*\.\([0-9][0-9]*\)\(\..*\)*$/\1/'`
@@ -106,14 +128,6 @@
   
 if [ x$reason = xBOUND ] || [ x$reason = xRENEW ] || \
    [ x$reason = xREBIND ] || [ x$reason = xREBOOT ]; then
-  current_hostname=`hostname`
-  if [ x$current_hostname = x ] || \
-     [ x$current_hostname = x$old_host_name ]; then
-    if [ x$current_hostname = x ] || \
-       [ x$new_host_name != x$old_host_name ]; then
-      hostname $new_host_name
-    fi
-  fi
     
   if [ x$old_ip_address != x ] && [ x$alias_ip_address != x ] && \
 		[ x$alias_ip_address != x$old_ip_address ]; then
@@ -146,9 +160,25 @@
     ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
     route add -host $alias_ip_address $interface:0
   fi
-  make_resolv_conf
-  exit_with_hooks 0
-fi
+	         if [ "${PEERDNS}" != "no" ]; then 
+	           make_resolv_conf
+	         fi
+	         if [ "$NEEDHOSTNAME" = yes ] || need_hostname; then
+	           if [ -z "$new_host_name" ]; then
+	             eval `/bin/ipcalc --silent --hostname $new_ip_address`
+	             new_host_name=$HOSTNAME
+	           fi
+	           if [ -n "$new_host_name" ]; then
+	             current_hostname=`hostname`
+	             
+	             if [ "$new_host_name" != "$current_hostname" ]; then
+	              set_hostname $new_host_name
+	             fi
+	           fi
+	         fi
+	       
+	       exit_with_hooks 0
+	fi
 
 if [ x$reason = xEXPIRE ] || [ x$reason = xFAIL ] || [ x$reason = xRELEASE ] \
    || [ x$reason = xSTOP ]; then
@@ -174,8 +204,7 @@
   ifconfig $interface inet $new_ip_address $new_subnet_arg \
 					$new_broadcast_arg
   set $new_routers
-  ############## what is -w in ping?
-  if ping -q -c 1 $1; then
+	if ping -q -c 1 -w 10 $1 > /dev/null 2>&1; then
     if [ x$new_ip_address != x$alias_ip_address ] && \
 			[ x$alias_ip_address != x ]; then
       ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
@@ -188,8 +217,10 @@
     for router in $new_routers; do
       route add default gw $router
     done
-    make_resolv_conf
-    exit_with_hooks 0
+		               if [ "${PEERDNS}" != "no" ]; then 
+		                  make_resolv_conf
+		               fi
+		exit_with_hooks 0
   fi
   ifconfig $interface inet 0 down
   exit_with_hooks 1
