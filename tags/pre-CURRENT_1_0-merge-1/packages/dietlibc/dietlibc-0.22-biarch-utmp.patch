--- dietlibc-0.22/include/utmp.h.biarch-utmp	2001-08-16 14:44:17.000000000 -0400
+++ dietlibc-0.22/include/utmp.h	2003-04-07 17:47:02.000000000 -0400
@@ -21,7 +21,11 @@
    previous logins.  */
 struct lastlog
   {
+#if __WORDSIZE == 64 && defined __WORDSIZE_COMPAT32
+    int32_t ll_time;
+#else
     time_t ll_time;
+#endif
     char ll_line[UT_LINESIZE];
     char ll_host[UT_HOSTSIZE];
   };
@@ -46,9 +50,21 @@ struct utmp
 #define ut_name ut_user
   struct exit_status ut_exit;	/* Exit status of a process marked
 				   as DEAD_PROCESS.  */
+/* The ut_session and ut_tv fields must be the same size when compiled
+   32- and 64-bit.  This allows data files and shared memory to be
+   shared between 32- and 64-bit applications.  */
+#if __WORDSIZE == 64 && defined __WORDSIZE_COMPAT32
+  int32_t ut_session;		/* Session ID, used for windowing.  */
+  struct
+  {
+    int32_t tv_sec;		/* Seconds.  */
+    int32_t tv_usec;		/* Microseconds.  */
+  } ut_tv;			/* Time entry was made.  */
+#else
   long int ut_session;		/* Session ID, used for windowing.  */
-#define ut_time ut_tv.tv_sec
   struct timeval ut_tv;		/* Time entry was made.  */
+#endif
+#define ut_time ut_tv.tv_sec
 #define ut_addr ut_addr_v6[0]
   int32_t ut_addr_v6[4];	/* Internet address of remote host.  */
   char __unused[20];		/* Reserved for future use.  */
--- dietlibc-0.22/include/endian.h.biarch-utmp	2002-05-13 10:53:25.000000000 -0400
+++ dietlibc-0.22/include/endian.h	2003-04-07 17:50:37.000000000 -0400
@@ -51,6 +51,10 @@
 #define __WORDSIZE 64
 #endif
 
+#if defined(__x86_64__) || defined(__powerpc64__) || defined(__sparc_v9__)
+#define __WORDSIZE_COMPAT32 1
+#endif
+
 #if defined(__sparc__) && (__arch64__)
 #define __WORDSIZE 64
 #endif
--- dietlibc-0.22/libugly/wtent.c.biarch-utmp	2002-02-25 09:50:06.000000000 -0500
+++ dietlibc-0.22/libugly/wtent.c	2003-04-07 17:53:11.000000000 -0400
@@ -23,7 +23,14 @@ void logwtmp(const char *line, const cha
   memccpy (ut.ut_name, name, 0, sizeof ut.ut_name);
   memccpy (ut.ut_host, host, 0, sizeof ut.ut_host);
 
-  gettimeofday (&ut.ut_tv, NULL);
+  if (sizeof(ut.ut_tv) == sizeof(struct timeval))
+    gettimeofday((struct timeval *)&ut.ut_tv, NULL);
+  else {
+	struct timeval tv;
+	gettimeofday(&tv, NULL);
+	ut.ut_tv.tv_sec = tv.tv_sec;
+	ut.ut_tv.tv_usec = tv.tv_usec;
+  }
 
   updwtmp (_PATH_WTMP, &ut);
 }
