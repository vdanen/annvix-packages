2003-06-30  Jan Hubicka  <jh@suse.cz>
	
	* regmove.c (regmove_optimize): Don't try to make src and dst match
	when they are in different modes.

2003-09-07  Gwenole Beauchesne  <gbeauchesne@mandrakesoft.com>

	* gcc.c-torture/execute/20030907-2.c: New test.

--- gcc-3.3.1/gcc/testsuite/gcc.c-torture/execute/20030907-2.c.regmove-fix	2003-09-09 16:07:02.000000000 +0200
+++ gcc-3.3.1/gcc/testsuite/gcc.c-torture/execute/20030907-2.c	2003-09-09 16:06:48.000000000 +0200
@@ -0,0 +1,49 @@
+extern void abort (void);
+
+static double
+fabs (double x)
+{
+  return x < 0 ? -x : x;
+}
+
+static void
+check (double result, double expected, double relative_error)
+{
+  int status = -1;
+
+  if (result < 0 || result > 0)
+	status = (fabs(result - expected)/fabs(expected) > relative_error);
+
+  if (status)
+	abort ();
+}
+
+int
+main (void)
+{
+  const int na = 14;
+
+  static const double rawa[] =
+  {.0421, .0941, .1064, .0242, .1331,
+   .0773, .0243, .0815, .1186, .0356,
+   .0728, .0999, .0614, .0479};
+
+  double rel = 1e-10;
+
+  {
+	const double mean = 0.0728;
+	const double expected = 0.00113837428571429;
+	long double variance = 0 ;
+	int i;
+
+	for (i = 0; i < na; i++)
+	  {
+		const long double delta = (rawa[i] - mean);
+		variance += (delta * delta - variance) / (i + 1);
+	  }
+
+    check (variance, expected, rel);
+  }
+
+  return 0;
+}
--- gcc-3.3.1/gcc/regmove.c.regmove-fix	2003-02-22 17:57:02.000000000 +0100
+++ gcc-3.3.1/gcc/regmove.c	2003-09-09 16:03:24.000000000 +0200
@@ -1287,7 +1287,8 @@ regmove_optimize (f, nregs, regmove_dump
 	      if (GET_CODE (dst) != REG
 		  || REGNO (dst) < FIRST_PSEUDO_REGISTER
 		  || REG_LIVE_LENGTH (REGNO (dst)) < 0
-		  || RTX_UNCHANGING_P (dst))
+		  || RTX_UNCHANGING_P (dst)
+		  || GET_MODE (src) != GET_MODE (dst))
 		continue;
 
 	      /* If the operands already match, then there is nothing to do.  */
