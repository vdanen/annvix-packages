# ncurses 5.3 - patch 20030118 - T.Dickey
#
# ------------------------------------------------------------------------------
#
# Ncurses 5.3 is at
# 	ftp.gnu.org:/pub/gnu
#
# Patches for ncurses 5.3 are in the subdirectory
# 	ftp://dickey.his.com/ncurses/5.3
#
# ------------------------------------------------------------------------------
# NEWS                     |    9 ++++++++-
# dist.mk                  |    4 ++--
# include/curses.h.in      |    7 ++++---
# ncurses/tty/tty_update.c |   34 +++++++++++++++-------------------
# 4 files changed, 29 insertions(+), 25 deletions(-)
# ------------------------------------------------------------------------------
Index: NEWS
Prereq:  1.728 
--- ncurses-5.3-20030111+/NEWS	Sat Jan 11 20:55:48 2003
+++ ncurses-5.3-20030118/NEWS	Sat Jan 18 20:13:31 2003
@@ -1,10 +1,17 @@
--- $Id: NEWS,v 1.728 2003/01/12 01:55:48 tom Exp $
+-- $Id: NEWS,v 1.729 2003/01/19 01:13:31 tom Exp $
 
 This is a log of changes that ncurses has gone through since Zeyd started
 working with Pavel Curtis' original work, pcurses, in 1992.
 
 Changes through 1.9.9e are recorded by Zeyd M. Ben-Halim.
 Changes since 1.9.9e are recorded by Thomas Dickey.
+
+20030118
+	+ revert 20030105 change to can_clear_with(), does not work for the
+	  case where the update is made on cells which are blanks with
+	  attributes, e.g., reverse.
+	+ improve ifdef's to guard against redefinition of wchar_t and wint_t
+	  in curses.h (report by Urs Jansen).
 
 20030111
 	+ improve mvcur() by checking if it is safe to move when video
Index: dist.mk
Prereq:  1.342 
--- ncurses-5.3-20030111+/dist.mk	Sat Jan 11 13:02:31 2003
+++ ncurses-5.3-20030118/dist.mk	Sat Jan 18 13:30:23 2003
@@ -1,4 +1,4 @@
-# $Id: dist.mk,v 1.342 2003/01/11 18:02:31 tom Exp $
+# $Id: dist.mk,v 1.343 2003/01/18 18:30:23 tom Exp $
 # Makefile for creating ncurses distributions.
 #
 # This only needs to be used directly as a makefile by developers, but
@@ -10,7 +10,7 @@
 # These define the major/minor/patch versions of ncurses.
 NCURSES_MAJOR = 5
 NCURSES_MINOR = 3
-NCURSES_PATCH = 20030111
+NCURSES_PATCH = 20030118
 
 # We don't append the patch to the version, since this only applies to releases
 VERSION = $(NCURSES_MAJOR).$(NCURSES_MINOR)
Index: include/curses.h.in
Prereq:  1.135 
--- ncurses-5.3-20030111+/include/curses.h.in	Sat Nov 16 17:06:50 2002
+++ ncurses-5.3-20030118/include/curses.h.in	Sat Jan 18 18:33:20 2003
@@ -32,7 +32,7 @@
  *     and: Thomas E. Dickey 1996-on                                        *
  ****************************************************************************/
 
-/* $Id: curses.h.in,v 1.135 2002/11/16 22:06:50 tom Exp $ */
+/* $Id: curses.h.in,v 1.136 2003/01/18 23:33:20 tom Exp $ */
 
 #ifndef __NCURSES_H
 #define __NCURSES_H
@@ -294,10 +294,11 @@
 #include <wchar.h>		/* ...to get mbstate_t, etc. */
 #endif
 
-#ifndef _WCHAR_T
+#if !defined(_WCHAR_T) && !defined(wchar_t)
 typedef unsigned long wchar_t;
 #endif /* _WCHAR_T */
-#ifndef _WINT_T
+
+#if !defined(_WINT_T) && !defined(wint_t)
 typedef long int wint_t;
 #endif /* _WINT_T */
 
Index: ncurses/tty/tty_update.c
Prereq:  1.193 
--- ncurses-5.3-20030111+/ncurses/tty/tty_update.c	Sat Jan 11 20:33:11 2003
+++ ncurses-5.3-20030118/ncurses/tty/tty_update.c	Sat Jan 18 20:10:32 2003
@@ -73,7 +73,7 @@
 
 #include <term.h>
 
-MODULE_ID("$Id: tty_update.c,v 1.193 2003/01/12 01:33:11 tom Exp $")
+MODULE_ID("$Id: tty_update.c,v 1.194 2003/01/19 01:10:32 tom Exp $")
 
 /*
  * This define controls the line-breakout optimization.  Every once in a
@@ -379,29 +379,25 @@
 static inline bool
 can_clear_with(ARG_CH_T ch)
 {
-    if (ISBLANK(CHDEREF(ch))) {
-	/* Tests for bce, non-bce terminals */
-	if (!back_color_erase && SP->_coloron) {
+    if (!back_color_erase && SP->_coloron) {
 #if NCURSES_EXT_FUNCS
-	    if (!SP->_default_color)
+	if (!SP->_default_color)
+	    return FALSE;
+	if (SP->_default_fg != C_MASK || SP->_default_bg != C_MASK)
+	    return FALSE;
+	if (AttrOfD(ch) & A_COLOR) {
+	    short fg, bg;
+	    pair_content(PAIR_NUMBER(AttrOfD(ch)), &fg, &bg);
+	    if (fg != C_MASK || bg != C_MASK)
 		return FALSE;
-	    if (SP->_default_fg != C_MASK || SP->_default_bg != C_MASK)
-		return FALSE;
-	    if (AttrOfD(ch) & A_COLOR) {
-		short fg, bg;
-		pair_content(PAIR_NUMBER(AttrOfD(ch)), &fg, &bg);
-		if (fg != C_MASK || bg != C_MASK)
-		    return FALSE;
-	    }
+	}
 #else
-	    if (AttrOfD(ch) & A_COLOR)
-		return FALSE;
+	if (AttrOfD(ch) & A_COLOR)
+	    return FALSE;
 #endif
-	}
-	if ((AttrOfD(ch) & ~(NONBLANK_ATTR | A_COLOR)) != 0)
-	    return TRUE;
     }
-    return FALSE;
+    return (ISBLANK(CHDEREF(ch)) &&
+	    (AttrOfD(ch) & ~(NONBLANK_ATTR | A_COLOR)) == BLANK_ATTR);
 }
 
 /*
