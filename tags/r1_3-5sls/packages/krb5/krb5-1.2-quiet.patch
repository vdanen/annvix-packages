--- krb5-1.2/src/appl/bsd/kcmd.c.quiet	Fri Jun 23 19:44:41 2000
+++ krb5-1.2/src/appl/bsd/kcmd.c	Mon Jun 26 17:13:34 2000
@@ -267,7 +267,9 @@
 	    continue;
     	}
 #endif /* !(defined(ultrix) || defined(sun)) */
-    	perror(hp->h_name);
+	if(getenv("KERBEROSLY_CORRECT") != NULL) {
+    		perror(hp->h_name);
+	}
 #ifdef POSIX_SIGNALS
 	sigprocmask(SIG_SETMASK, &oldmask, (sigset_t*)0);
 #else
@@ -606,7 +608,9 @@
 	    continue;
 	}
 #endif						/* !(defined(ultrix) || defined(sun)) */
-	perror(host_save);
+	if(getenv("KERBEROSLY_CORRECT") != NULL) {
+		perror(host_save);
+	}
 #ifdef POSIX_SIGNALS
 	sigprocmask(SIG_SETMASK, &oldmask, (sigset_t*)0);
 #else
--- krb5-1.2/src/appl/bsd/krsh.c.quiet	Mon Jun 26 17:10:45 2000
+++ krb5-1.2/src/appl/bsd/krsh.c	Mon Jun 26 17:10:45 2000
@@ -391,8 +391,10 @@
 	if (encrypt_flag)
 	    exit(1);
 #ifdef HAVE_ISATTY
+if(getenv("KERBEROSLY_CORRECT") != NULL) {
 	if (isatty(fileno(stderr)))
 	    fprintf(stderr, "Trying krb4 rsh...\n");
+}
 #endif
 	status = k4cmd(&rem, &host, debug_port,
 		       pwd->pw_name,
@@ -620,8 +622,10 @@
       argv++;
 #endif
     
+if(getenv("KERBEROSLY_CORRECT") != NULL) {
     fprintf(stderr,"trying normal rsh (%s)\n",
 	    UCB_RSH);
+}
     fflush(stderr);
     execv(UCB_RSH, argv);
     perror("exec");
--- krb5-1.2/src/appl/bsd/krlogin.c.quiet	Mon Jun 26 17:10:45 2000
+++ krb5-1.2/src/appl/bsd/krlogin.c	Mon Jun 26 17:10:45 2000
@@ -660,7 +660,9 @@
 	    /* Don't fall back to something less secure.  */
 	    exit (1);
 #ifdef KRB5_KRB4_COMPAT
-	fprintf(stderr, "Trying krb4 rlogin...\n");
+	if(getenv("KERBEROSLY_CORRECT") != NULL) {
+	    fprintf(stderr, "Trying krb4 rlogin...\n");
+	}
 	status = k4cmd(&sock, &host, port,
 		       null_local_username ? "" : pwd->pw_name,
 		       name ? name : pwd->pw_name, term,
@@ -1721,8 +1723,10 @@
     if (encrypt_flag)
       exit(1);
 #endif
+if(getenv("KERBEROSLY_CORRECT") != NULL) {
     fprintf(stderr,"trying normal rlogin (%s)\n",
 	    UCB_RLOGIN);
+}
     fflush(stderr);
     
     host = strrchr(argv[0], '/');
