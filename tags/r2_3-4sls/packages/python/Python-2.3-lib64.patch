--- Python-2.3/Include/pythonrun.h.lib64	2003-08-31 17:05:49.000000000 +0200
+++ Python-2.3/Include/pythonrun.h	2003-08-31 17:05:49.000000000 +0200
@@ -92,6 +92,8 @@ PyAPI_FUNC(char *) Py_GetPath(void);
 /* In their own files */
 PyAPI_FUNC(const char *) Py_GetVersion(void);
 PyAPI_FUNC(const char *) Py_GetPlatform(void);
+PyAPI_FUNC(const char *) Py_GetArch(void);
+PyAPI_FUNC(const char *) Py_GetLib(void);
 PyAPI_FUNC(const char *) Py_GetCopyright(void);
 PyAPI_FUNC(const char *) Py_GetCompiler(void);
 PyAPI_FUNC(const char *) Py_GetBuildInfo(void);
--- Python-2.3/Lib/distutils/command/install.py.lib64	2003-08-31 17:05:50.000000000 +0200
+++ Python-2.3/Lib/distutils/command/install.py	2003-08-31 17:05:50.000000000 +0200
@@ -19,6 +19,8 @@ from distutils.util import convert_path,
 from distutils.errors import DistutilsOptionError
 from glob import glob
 
+libname = sys.lib
+
 if sys.version < "2.2":
     WINDOWS_SCHEME = {
         'purelib': '$base',
@@ -38,15 +40,15 @@ else:
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/'+libname+'/python$py_version_short/site-packages',
+        'platlib': '$platbase/'+libname+'/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/'+libname+'/python',
+        'platlib': '$base/'+libname+'/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
--- Python-2.3/Lib/distutils/sysconfig.py.lib64	2003-08-31 17:05:50.000000000 +0200
+++ Python-2.3/Lib/distutils/sysconfig.py	2003-08-31 17:05:50.000000000 +0200
@@ -100,7 +100,7 @@ def get_python_lib(plat_specific=0, stan
 
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 sys.lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
--- Python-2.3/Lib/site.py.lib64	2003-08-31 17:05:50.000000000 +0200
+++ Python-2.3/Lib/site.py	2003-08-31 17:05:49.000000000 +0200
@@ -167,12 +167,12 @@ for prefix in prefixes:
             sitedirs = [os.path.join(prefix, "Lib", "site-packages")]
         elif os.sep == '/':
             sitedirs = [os.path.join(prefix,
-                                     "lib",
+                                     sys.lib,
                                      "python" + sys.version[:3],
                                      "site-packages"),
-                        os.path.join(prefix, "lib", "site-python")]
+                        os.path.join(prefix, sys.lib, "site-python")]
         else:
-            sitedirs = [prefix, os.path.join(prefix, "lib", "site-packages")]
+            sitedirs = [prefix, os.path.join(prefix, sys.lib, "site-packages")]
         if sys.platform == 'darwin':
             # for framework builds *only* we add the standard Apple
             # locations. Currently only per-user, but /Library and
--- Python-2.3/Modules/getpath.c.lib64	2003-08-31 17:05:51.000000000 +0200
+++ Python-2.3/Modules/getpath.c	2003-08-31 17:05:51.000000000 +0200
@@ -111,9 +111,17 @@
 #define EXEC_PREFIX PREFIX
 #endif
 
+#ifndef LIB_PYTHON
+#if defined(__x86_64__)
+#define LIB_PYTHON "lib64/python" VERSION
+#else
+#define LIB_PYTHON "lib/python" VERSION
+#endif
+#endif
+
 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/" LIB_PYTHON ":" \
+              EXEC_PREFIX "/" LIB_PYTHON "/lib-dynload"
 #endif
 
 #ifndef LANDMARK
@@ -124,7 +132,7 @@ static char prefix[MAXPATHLEN+1];
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = LIB_PYTHON;
 
 static void
 reduce(char *dir)
--- Python-2.3/Python/getplatform.c.lib64	2003-08-31 17:05:52.000000000 +0200
+++ Python-2.3/Python/getplatform.c	2003-08-31 17:05:51.000000000 +0200
@@ -10,3 +10,23 @@ Py_GetPlatform(void)
 {
 	return PLATFORM;
 }
+
+#ifndef ARCH
+#define ARCH "unknown"
+#endif
+
+const char *
+Py_GetArch(void)
+{
+	return ARCH;
+}
+
+#ifndef LIB
+#define LIB "lib"
+#endif
+
+const char *
+Py_GetLib(void)
+{
+	return LIB;
+}
--- Python-2.3/Python/sysmodule.c.lib64	2003-08-31 17:05:52.000000000 +0200
+++ Python-2.3/Python/sysmodule.c	2003-08-31 17:05:52.000000000 +0200
@@ -993,6 +993,12 @@ _PySys_Init(void)
 	PyDict_SetItemString(sysdict, "platform",
 			     v = PyString_FromString(Py_GetPlatform()));
 	Py_XDECREF(v);
+	PyDict_SetItemString(sysdict, "arch",
+			     v = PyString_FromString(Py_GetArch()));
+	Py_XDECREF(v);
+	PyDict_SetItemString(sysdict, "lib",
+			     v = PyString_FromString(Py_GetLib()));
+	Py_XDECREF(v);
 	PyDict_SetItemString(sysdict, "executable",
 			     v = PyString_FromString(Py_GetProgramFullPath()));
 	Py_XDECREF(v);
--- Python-2.3/setup.py.lib64	2003-08-31 17:05:52.000000000 +0200
+++ Python-2.3/setup.py	2003-08-31 17:05:49.000000000 +0200
@@ -257,10 +257,12 @@ class PyBuildExt(build_ext):
         except NameError:
             have_unicode = 0
 
+        libname = sys.lib
+
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
-        lib_dirs = self.compiler.library_dirs + ['/lib', '/usr/lib']
+        lib_dirs = self.compiler.library_dirs + [libname, '/usr/'+libname]
         inc_dirs = self.compiler.include_dirs + ['/usr/include']
         exts = []
 
@@ -409,11 +411,11 @@ class PyBuildExt(build_ext):
             elif self.compiler.find_library_file(lib_dirs, 'curses'):
                 readline_libs.append('curses')
             elif self.compiler.find_library_file(lib_dirs +
-                                               ['/usr/lib/termcap'],
+                                               ['/usr/'+libname+'/termcap'],
                                                'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/'+libname+'/termcap'],
                                    libraries=readline_libs) )
         if platform not in ['mac']:
                 # crypt module.
@@ -964,13 +966,15 @@ class PyBuildExt(build_ext):
             if dir not in include_dirs:
                 include_dirs.append(dir)
 
+        libname = sys.lib
+
         # Check for various platform-specific directories
         if platform == 'sunos5':
             include_dirs.append('/usr/openwin/include')
             added_lib_dirs.append('/usr/openwin/lib')
         elif os.path.exists('/usr/X11R6/include'):
             include_dirs.append('/usr/X11R6/include')
-            added_lib_dirs.append('/usr/X11R6/lib')
+            added_lib_dirs.append('/usr/X11R6/'+libname)
         elif os.path.exists('/usr/X11R5/include'):
             include_dirs.append('/usr/X11R5/include')
             added_lib_dirs.append('/usr/X11R5/lib')
--- Python-2.3/Makefile.pre.in.lib64	2003-08-31 17:05:52.000000000 +0200
+++ Python-2.3/Makefile.pre.in	2003-08-31 17:08:59.000000000 +0200
@@ -70,6 +70,8 @@ PY_CFLAGS=	$(CFLAGS) $(CPPFLAGS) $(CFLAG
 
 # Machine-dependent subdirectories
 MACHDEP=	@MACHDEP@
+LIB=		@LIB@
+ARCH=		@ARCH@
 
 # Install prefix for architecture-independent files
 prefix=		@prefix@
@@ -79,11 +81,11 @@ exec_prefix=	@exec_prefix@
 
 # Expanded directories
 BINDIR=		$(exec_prefix)/bin
-LIBDIR=		$(exec_prefix)/lib
+LIBDIR=		$(exec_prefix)/$(LIB)
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/$(LIB)
 
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
@@ -448,7 +450,7 @@ Parser/tokenizer_pgen.o:	$(srcdir)/Parse
 Python/compile.o Python/symtable.o: $(GRAMMAR_H)
 
 Python/getplatform.o: $(srcdir)/Python/getplatform.c
-		$(CC) -c $(PY_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -o $@ $(srcdir)/Python/getplatform.c
+		$(CC) -c $(PY_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -DARCH='"$(ARCH)"' -DLIB='"$(LIB)"' -o $@ $(srcdir)/Python/getplatform.c
 
 Python/importdl.o: $(srcdir)/Python/importdl.c
 		$(CC) -c $(PY_CFLAGS) -I$(DLINCLDIR) -o $@ $(srcdir)/Python/importdl.c
--- Python-2.3/configure.in.lib64	2003-08-31 17:05:52.000000000 +0200
+++ Python-2.3/configure.in	2003-08-31 17:08:37.000000000 +0200
@@ -386,6 +386,41 @@ SunOS*)
     ;;
 esac
 
+AC_SUBST(ARCH)
+AC_MSG_CHECKING(ARCH)
+ARCH=`uname -m`
+case $ARCH in
+i?86) ARCH=i386;;
+esac
+AC_MSG_RESULT($ARCH)
+
+AC_SUBST(LIB)
+AC_MSG_CHECKING(LIB)
+case $ac_sys_system in
+Linux*)
+  # Test if the compiler is 64bit
+  echo 'int i;' > conftest.$ac_ext
+  python_cv_cc_64bit_output=no
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *"ELF 64"*)
+      python_cv_cc_64bit_output=yes
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+case $ARCH:$python_cv_cc_64bit_output in
+powerpc64:yes | s390x:yes | sparc64:yes | x86_64:yes)
+  LIB="lib64"
+  ;;
+*:*)
+  LIB="lib"
+  ;;
+esac
+AC_MSG_RESULT($LIB)
 
 AC_SUBST(LIBRARY)
 AC_MSG_CHECKING(LIBRARY)
