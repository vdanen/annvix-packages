--- util-linux-2.12a/mount/mount.c.pix	2005-01-05 09:52:44.862461511 +0100
+++ util-linux-2.12a/mount/mount.c	2005-01-05 09:53:14.805255083 +0100
@@ -473,6 +473,67 @@
 	return ret;
 }
 
+static void remove_non_handled_options(char* options, char* fs_type) {
+
+   static char *fs_using_iocharset[] = { "iso9660", "udf", "vfat", "msdos", "ntfs", "jfs", "smbfs", "befs", "cifs", NULL };
+   static char *fs_using_codepage[] = { "iso9660", "vfat", "msdos", "smbfs", NULL };
+   static char *fs_using_umask[] = { "iso9660", "udf", "vfat", "msdos", "ntfs", "hfs", "hfsplus", "hpfs", NULL };
+   static char *fs_using_mode[] = { "iso9660", "ncpfs", "affs", NULL };
+   static char *fs_using_nls[] = { "ntfs", NULL };
+
+   static struct options_handled_for_some_fs {
+     char *handled_option;
+     char **fs_using_this_option;
+   } list[] = {
+     { "iocharset=", fs_using_iocharset },
+     { "codepage=", fs_using_codepage },
+     { "umask=", fs_using_umask },
+     { "mode=", fs_using_mode },
+     { "nls=", fs_using_nls },
+     { NULL, NULL }
+   };
+
+    if (options) {
+	char * end;
+	char * start = options;
+
+	char * newOpts = alloca(strlen(options) + 1);
+	*newOpts = '\0';
+
+	while (*start) {
+	    int i, j, skip = 0;
+
+	    end = strchr(start, ',');
+	    if (!end) {
+		end = start + strlen(start);
+	    } else {
+		*end = '\0';
+		end++;
+	    }
+
+	    for (i = 0; list[i].handled_option; i++)
+	       if (strncmp(start, list[i].handled_option, strlen(list[i].handled_option)) == 0) {
+		  char **fs = list[i].fs_using_this_option;
+		  skip = 1;
+		  for (j = 0; fs[j]; j++)
+		    if (strcmp(fs[j], fs_type) == 0) {
+		       skip = 0;
+		       break;
+		    }
+	       }
+
+	    if (!skip) {
+	       if (*newOpts) strcat(newOpts, ",");
+	       strcat(newOpts, start);
+	    }
+
+	    start = end;
+	}
+
+	strcpy(options, newOpts);
+    }
+}
+
 /*
  * guess_fstype_and_mount()
  *	Mount a single file system. Guess the type when unknown.
@@ -500,6 +561,8 @@
       }
    }
 
+   if (*types) remove_non_handled_options(mount_opts, *types);
+
    /* Accept a comma-separated list of types, and try them one by one */
    /* A list like "nonfs,.." indicates types not to use */
    if (*types && strncmp(*types, "no", 2) && index(*types,',')) {
