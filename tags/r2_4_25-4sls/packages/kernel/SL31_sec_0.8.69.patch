diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/Documentation/Configure.help 2425sls2.ea.acl.nfsacl.sec/Documentation/Configure.help
--- 2425sls2.ea.acl.nfsacl/Documentation/Configure.help	2004-03-02 23:29:59.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/Documentation/Configure.help	2004-03-03 00:08:40.000000000 +0200
@@ -16601,6 +16601,16 @@ CONFIG_EXT2_FS_XATTR_USER
 
   If unsure, say N.
 
+Ext2 Security Labels
+CONFIG_EXT2_FS_SECURITY
+  Security labels support alternative access control models
+  implemented by security modules like SELinux.  This option
+  enables an extended attribute handler for file security
+  labels in the ext2 filesystem.
+
+  If you are not using a security module that requires using
+  extended attributes for file security labels, say N.
+
 Ext2 POSIX Access Control Lists
 CONFIG_EXT2_FS_POSIX_ACL
   POSIX Access Control Lists (ACLs) support permissions for users and
@@ -16670,6 +16680,16 @@ CONFIG_EXT3_FS_XATTR_USER
 
   If unsure, say N.
 
+Ext3 Security Labels
+CONFIG_EXT3_FS_SECURITY
+  Security labels support alternative access control models
+  implemented by security modules like SELinux.  This option
+  enables an extended attribute handler for file security
+  labels in the ext3 filesystem.
+
+  If you are not using a security module that requires using
+  extended attributes for file security labels, say N.
+
 Ext3 POSIX Access Control Lists
 CONFIG_EXT3_FS_POSIX_ACL
   POSIX Access Control Lists (ACLs) support permissions for users and
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/Config.in 2425sls2.ea.acl.nfsacl.sec/fs/Config.in
--- 2425sls2.ea.acl.nfsacl/fs/Config.in	2004-03-02 23:29:59.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/Config.in	2004-03-03 00:08:40.000000000 +0200
@@ -36,6 +36,8 @@ dep_bool '    Ext3 extended user attribu
     CONFIG_EXT3_FS_XATTR_USER $CONFIG_EXT3_FS_XATTR
 dep_bool '    Ext3 trusted extended attributes' \
     CONFIG_EXT3_FS_XATTR_TRUSTED $CONFIG_EXT3_FS_XATTR
+dep_bool '    Ext3 security labels' \
+    CONFIG_EXT3_FS_SECURITY $CONFIG_EXT3_FS_XATTR
 dep_bool '    Ext3 POSIX Access Control Lists' \
     CONFIG_EXT3_FS_POSIX_ACL $CONFIG_EXT3_FS_XATTR
 # CONFIG_JBD could be its own option (even modular), but until there are
@@ -108,6 +110,8 @@ dep_bool '    Ext2 extended user attribu
     CONFIG_EXT2_FS_XATTR_USER $CONFIG_EXT2_FS_XATTR
 dep_bool '    Ext2 trusted extended attributes' \
     CONFIG_EXT2_FS_XATTR_TRUSTED $CONFIG_EXT2_FS_XATTR
+dep_bool '    Ext2 security labels' \
+    CONFIG_EXT2_FS_SECURITY $CONFIG_EXT2_FS_XATTR
 dep_bool '    Ext2 POSIX Access Control Lists' \
 	CONFIG_EXT2_FS_POSIX_ACL $CONFIG_EXT2_FS_XATTR
 
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext2/Makefile 2425sls2.ea.acl.nfsacl.sec/fs/ext2/Makefile
--- 2425sls2.ea.acl.nfsacl/fs/ext2/Makefile	2004-03-02 23:20:51.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext2/Makefile	2004-03-03 00:08:40.000000000 +0200
@@ -17,6 +17,7 @@ export-objs += xattr.o
 obj-$(CONFIG_EXT2_FS_XATTR) += xattr.o
 obj-$(CONFIG_EXT2_FS_XATTR_USER) += xattr_user.o
 obj-$(CONFIG_EXT2_FS_XATTR_TRUSTED) += xattr_trusted.o
+obj-$(CONFIG_EXT2_FS_SECURITY) += xattr_security.o
 obj-$(CONFIG_EXT2_FS_POSIX_ACL) += acl.o
 
 include $(TOPDIR)/Rules.make
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext2/super.c 2425sls2.ea.acl.nfsacl.sec/fs/ext2/super.c
--- 2425sls2.ea.acl.nfsacl/fs/ext2/super.c	2004-03-02 23:20:51.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext2/super.c	2004-03-03 00:08:40.000000000 +0200
@@ -894,14 +894,20 @@ static int __init init_ext2_fs(void)
 	error = init_ext2_xattr_trusted();
 	if (error)
 		goto fail2;
-	error = init_ext2_acl();
+	error = init_ext2_xattr_security();
 	if (error)
 		goto fail3;
+	error = init_ext2_acl();
+	if (error)
+		goto fail4;
+
 	error = register_filesystem(&ext2_fs_type);
 	if (!error)
 		return 0;
 
 	exit_ext2_acl();
+fail4:
+	exit_ext2_xattr_security();
 fail3:
 	exit_ext2_xattr_trusted();
 fail2:
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext2/xattr_security.c 2425sls2.ea.acl.nfsacl.sec/fs/ext2/xattr_security.c
--- 2425sls2.ea.acl.nfsacl/fs/ext2/xattr_security.c	1970-01-01 02:00:00.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext2/xattr_security.c	2004-03-03 00:08:40.000000000 +0200
@@ -0,0 +1,69 @@
+/*
+ * linux/fs/ext2/xattr_security.c
+ * Handler for storing security labels as extended attributes.
+ */
+
+#include <linux/module.h>
+#include <linux/string.h>
+#include <linux/fs.h>
+/* #include <linux/smp_lock.h> */
+#include <linux/ext2_fs.h>
+#include <linux/ext2_xattr.h>
+
+#define XATTR_SECURITY_PREFIX "security."
+
+static size_t
+ext2_xattr_security_list(char *list, struct inode *inode,
+			const char *name, int name_len)
+{
+	const int prefix_len = sizeof(XATTR_SECURITY_PREFIX)-1;
+
+	if (list) {
+		memcpy(list, XATTR_SECURITY_PREFIX, prefix_len);
+		memcpy(list+prefix_len, name, name_len);
+		list[prefix_len + name_len] = '\0';
+	}
+	return prefix_len + name_len + 1;
+}
+
+static int
+ext2_xattr_security_get(struct inode *inode, const char *name,
+		       void *buffer, size_t size)
+{
+	if (strcmp(name, "") == 0)
+		return -EINVAL;
+	return ext2_xattr_get(inode, EXT2_XATTR_INDEX_SECURITY, name,
+			      buffer, size);
+}
+
+static int
+ext2_xattr_security_set(struct inode *inode, const char *name,
+		       const void *value, size_t size, int flags)
+{
+	if (strcmp(name, "") == 0)
+		return -EINVAL;
+	return ext2_xattr_set(inode, EXT2_XATTR_INDEX_SECURITY, name,
+			      value, size, flags);
+}
+
+struct ext2_xattr_handler ext2_xattr_security_handler = {
+	.prefix	= XATTR_SECURITY_PREFIX,
+	.list	= ext2_xattr_security_list,
+	.get	= ext2_xattr_security_get,
+	.set	= ext2_xattr_security_set,
+};
+
+int __init
+init_ext2_xattr_security(void)
+{
+	return ext2_xattr_register(EXT2_XATTR_INDEX_SECURITY,
+				   &ext2_xattr_security_handler);
+}
+
+void
+exit_ext2_xattr_security(void)
+{
+	ext2_xattr_unregister(EXT2_XATTR_INDEX_SECURITY,
+			      &ext2_xattr_security_handler);
+}
+
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext3/Makefile 2425sls2.ea.acl.nfsacl.sec/fs/ext3/Makefile
--- 2425sls2.ea.acl.nfsacl/fs/ext3/Makefile	2004-03-02 23:20:51.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext3/Makefile	2004-03-03 00:08:40.000000000 +0200
@@ -17,6 +17,7 @@ export-objs += xattr.o
 obj-$(CONFIG_EXT3_FS_XATTR) += xattr.o
 obj-$(CONFIG_EXT3_FS_XATTR_USER) += xattr_user.o
 obj-$(CONFIG_EXT3_FS_XATTR_TRUSTED) += xattr_trusted.o
+obj-$(CONFIG_EXT3_FS_SECURITY) += xattr_security.o
 obj-$(CONFIG_EXT3_FS_POSIX_ACL) += acl.o
 
 include $(TOPDIR)/Rules.make
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext3/super.c 2425sls2.ea.acl.nfsacl.sec/fs/ext3/super.c
--- 2425sls2.ea.acl.nfsacl/fs/ext3/super.c	2004-03-02 23:23:01.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext3/super.c	2004-03-02 23:37:08.000000000 +0200
@@ -1909,14 +1909,20 @@ static int __init init_ext3_fs(void)
 	error = init_ext3_xattr_trusted();
 	if (error)
 		goto fail2;
-	error = init_ext3_acl();
+	error = init_ext3_xattr_security();
 	if (error)
 		goto fail3;
+	error = init_ext3_acl();
+	if (error)
+		goto fail4;
+
 	error = register_filesystem(&ext3_fs_type);
 	if (!error)
 		return 0;
 
 	exit_ext3_acl();
+fail4:
+	exit_ext3_xattr_security();
 fail3:
 	exit_ext3_xattr_trusted();
 fail2:
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/ext3/xattr_security.c 2425sls2.ea.acl.nfsacl.sec/fs/ext3/xattr_security.c
--- 2425sls2.ea.acl.nfsacl/fs/ext3/xattr_security.c	1970-01-01 02:00:00.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/ext3/xattr_security.c	2004-03-03 00:08:40.000000000 +0200
@@ -0,0 +1,68 @@
+/*
+ * linux/fs/ext3/xattr_security.c
+ * Handler for storing security labels as extended attributes.
+ */
+
+#include <linux/module.h>
+#include <linux/string.h>
+#include <linux/fs.h>
+#include <linux/ext3_jbd.h>
+#include <linux/ext3_fs.h>
+#include <linux/ext3_xattr.h>
+
+#define XATTR_SECURITY_PREFIX "security."
+
+static size_t
+ext3_xattr_security_list(char *list, struct inode *inode,
+		    const char *name, int name_len)
+{
+	const int prefix_len = sizeof(XATTR_SECURITY_PREFIX)-1;
+
+	if (list) {
+		memcpy(list, XATTR_SECURITY_PREFIX, prefix_len);
+		memcpy(list+prefix_len, name, name_len);
+		list[prefix_len + name_len] = '\0';
+	}
+	return prefix_len + name_len + 1;
+}
+
+static int
+ext3_xattr_security_get(struct inode *inode, const char *name,
+		       void *buffer, size_t size)
+{
+	if (strcmp(name, "") == 0)
+		return -EINVAL;
+	return ext3_xattr_get(inode, EXT3_XATTR_INDEX_SECURITY, name,
+			      buffer, size);
+}
+
+static int
+ext3_xattr_security_set(struct inode *inode, const char *name,
+		       const void *value, size_t size, int flags)
+{
+	if (strcmp(name, "") == 0)
+		return -EINVAL;
+	return ext3_xattr_set(inode, EXT3_XATTR_INDEX_SECURITY, name,
+			      value, size, flags);
+}
+
+struct ext3_xattr_handler ext3_xattr_security_handler = {
+	.prefix	= XATTR_SECURITY_PREFIX,
+	.list	= ext3_xattr_security_list,
+	.get	= ext3_xattr_security_get,
+	.set	= ext3_xattr_security_set,
+};
+
+int __init
+init_ext3_xattr_security(void)
+{
+	return ext3_xattr_register(EXT3_XATTR_INDEX_SECURITY,
+				   &ext3_xattr_security_handler);
+}
+
+void
+exit_ext3_xattr_security(void)
+{
+	ext3_xattr_unregister(EXT3_XATTR_INDEX_SECURITY,
+			      &ext3_xattr_security_handler);
+}
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/fs/xattr.c 2425sls2.ea.acl.nfsacl.sec/fs/xattr.c
--- 2425sls2.ea.acl.nfsacl/fs/xattr.c	2004-03-02 23:04:43.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/fs/xattr.c	2004-03-03 00:08:40.000000000 +0200
@@ -73,6 +73,9 @@ setxattr(struct dentry *d, char *name, v
 	if (error < 0)
 		return error;
 
+	if (strncmp(kname, "security.", 9) == 0 && !capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	kvalue = xattr_alloc(size, XATTR_SIZE_MAX);
 	if (IS_ERR(kvalue))
 		return PTR_ERR(kvalue);
@@ -297,6 +300,9 @@ removexattr(struct dentry *d, char *name
 	if (error < 0)
 		return error;
 
+	if (strncmp(kname, "security.", 9) == 0 && !capable(CAP_SYS_ADMIN))
+		return -EPERM;
+
 	error = -EOPNOTSUPP;
 	if (d->d_inode->i_op && d->d_inode->i_op->removexattr) {
 		down(&d->d_inode->i_sem);
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/include/linux/ext2_xattr.h 2425sls2.ea.acl.nfsacl.sec/include/linux/ext2_xattr.h
--- 2425sls2.ea.acl.nfsacl/include/linux/ext2_xattr.h	2004-03-02 23:04:43.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/include/linux/ext2_xattr.h	2004-03-03 00:08:40.000000000 +0200
@@ -22,6 +22,7 @@
 #define EXT2_XATTR_INDEX_POSIX_ACL_ACCESS	2
 #define EXT2_XATTR_INDEX_POSIX_ACL_DEFAULT	3
 #define EXT2_XATTR_INDEX_TRUSTED		4
+#define EXT2_XATTR_INDEX_SECURITY		6
 
 struct ext2_xattr_header {
 	__u32	h_magic;	/* magic number for identification */
@@ -176,5 +177,25 @@ exit_ext2_xattr_trusted(void)
 
 # endif  /* CONFIG_EXT2_FS_XATTR_TRUSTED */
 
+# ifdef CONFIG_EXT2_FS_SECURITY
+
+extern int init_ext2_xattr_security(void) __init;
+extern void exit_ext2_xattr_security(void);
+
+# else  /* CONFIG_EXT2_FS_SECURITY */
+
+static inline int
+init_ext2_xattr_security(void)
+{
+	return 0;
+}
+
+static inline void
+exit_ext2_xattr_security(void)
+{
+}
+
+#endif	/* CONFIG_EXT2_FS_SECURITY */
+
 #endif  /* __KERNEL__ */
 
diff -Nurp -X /Devel/dontdiff 2425sls2.ea.acl.nfsacl/include/linux/ext3_xattr.h 2425sls2.ea.acl.nfsacl.sec/include/linux/ext3_xattr.h
--- 2425sls2.ea.acl.nfsacl/include/linux/ext3_xattr.h	2004-03-02 23:04:43.000000000 +0200
+++ 2425sls2.ea.acl.nfsacl.sec/include/linux/ext3_xattr.h	2004-03-03 00:08:40.000000000 +0200
@@ -22,6 +22,7 @@
 #define EXT3_XATTR_INDEX_POSIX_ACL_ACCESS	2
 #define EXT3_XATTR_INDEX_POSIX_ACL_DEFAULT	3
 #define EXT3_XATTR_INDEX_TRUSTED		4
+#define EXT3_XATTR_INDEX_SECURITY		6
 
 struct ext3_xattr_header {
 	__u32	h_magic;	/* magic number for identification */
@@ -178,5 +179,27 @@ exit_ext3_xattr_trusted(void)
 
 #endif  /* CONFIG_EXT3_FS_XATTR_TRUSTED */
 
+# ifdef CONFIG_EXT3_FS_SECURITY
+
+extern int init_ext3_xattr_security(void) __init;
+extern void exit_ext3_xattr_security(void);
+
+# else  /* CONFIG_EXT3_FS_SECURITY */
+
+static inline int
+init_ext3_xattr_security(void)
+{
+	return 0;
+}
+
+static inline void
+exit_ext3_xattr_security(void)
+{
+}
+
+#endif	/* CONFIG_EXT3_FS_SECURITY */
+
 #endif  /* __KERNEL__ */
 
+
+
