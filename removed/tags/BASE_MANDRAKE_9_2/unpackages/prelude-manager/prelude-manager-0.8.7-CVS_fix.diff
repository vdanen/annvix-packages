diff -Naur prelude-manager-0.8.7/plugins/db/mysql/mysql.c prelude-manager/plugins/db/mysql/mysql.c
--- prelude-manager-0.8.7/plugins/db/mysql/mysql.c	2003-04-24 14:07:36.000000000 +0200
+++ prelude-manager/plugins/db/mysql/mysql.c	2003-04-23 18:28:00.000000000 +0200
@@ -1,6 +1,6 @@
 /*****
 *
-* Copyright (C) 2001, 2002, 2003 Vandoorselaere Yoann <yoann@prelude-ids.org>
+* Copyright (C) 2001, 2002 Vandoorselaere Yoann <yoann@mandrakesoft.com>
 * Copyright (C) 2001 Sylvain GIL <prelude@tootella.org>
 * All Rights Reserved
 *
@@ -36,51 +36,20 @@
 #include "db.h"
 
 
-#define MAX_QUERY_LENGTH   8192
-#define DEFAULT_MYSQL_PORT 3306
+#define MAX_QUERY_LENGTH 8192
 
 
 static int is_enabled = 0;
 static plugin_db_t plugin;
 static char *dbhost = NULL;
+static char *dbport = "3306";
 static char *dbname = NULL;
 static char *dbuser = NULL;
 static char *dbpass = NULL;
-static int dbport = DEFAULT_MYSQL_PORT;
 static MYSQL *connection = NULL, mysql;
 
 
 
-static int db_connect_mysql()
-{
-#if MYSQL_VERSION_ID < 32200
-        int state;
-        
-	connection = mysql_connect(&mysql, dbhost, dbuser, dbpass);
-        if ( ! connection )
-                return -1;
-        
-        /*
-         * select which database to use on the server
-         */
-        state = mysql_select_db(connection, dbname);
-
-        /* -1 means an error occurred */
-        if (state == -1) {
-                log(LOG_INFO, "%s\n", mysql_error(connection));
-                mysql_close(connection);
-                return -1;
-        }
-#else
-        connection = mysql_real_connect(&mysql, dbhost, dbuser, dbpass, dbname, dbport, NULL, 0);
-#endif
-
-        return (connection) ? 0 : -1;
-}
-
-
-
-
 /*
  * Takes a string and create a legal SQL string from it.
  * returns the escaped string.
@@ -128,8 +97,10 @@
         int ret = 0;
 
         ret = mysql_query(&mysql, query);
+
         if ( ret ) {
-                log(LOG_ERR, "Query \"%s\" returned %d: %s\n", query, ret, mysql_error(&mysql));
+                log(LOG_ERR, "Query \"%s\" returned %d: %s\n", 
+                	query, ret, mysql_error(&mysql));
                 ret = -1;
         }
         
@@ -154,21 +125,45 @@
  */
 static int db_connect(void)
 {
-        int ret;
-        
+#if MYSQL_VERSION_ID < 32200
+        int state;
+#endif
+
         if ( ! dbhost || ! dbname ) {
                 log(LOG_INFO, "MySQL logging not enabled because dbhost / dbname information missing.\n");
                 return -1;
         }
         
-        mysql_init(&mysql);
-        
-        ret = db_connect_mysql();
-        if ( ret < 0 ) {
+        /*
+         * connect to the mySQL database
+         */
+
+	mysql_init(&mysql);
+#if MYSQL_VERSION_ID >= 32200
+	connection = mysql_real_connect(&mysql, dbhost, dbuser, dbpass, dbname, atoi(dbport), NULL, 0);
+#else
+	connection = mysql_connect(&mysql, dbhost, dbuser, dbpass);
+#endif
+
+        if ( ! connection ) {
                 log(LOG_INFO, "%s\n", mysql_error(&mysql));
                 return -1;
         }
 
+#if MYSQL_VERSION_ID < 32200
+        /*
+         * select which database to use on the server
+         */
+        state = mysql_select_db(connection, dbname);
+
+        /* -1 means an error occurred */
+        if (state == -1) {
+                log(LOG_INFO, "%s\n", mysql_error(connection));
+                mysql_close(connection);
+                return -1;
+        }
+#endif
+
         return 0;
 }
 
@@ -183,7 +178,7 @@
 
 static int set_dbport(prelude_option_t *opt, const char *optarg) 
 {
-	dbport = atoi(optarg);
+	dbport = strdup(optarg);
 	return prelude_option_success;
 }
 
diff -Naur prelude-manager-0.8.7/plugins/db/pgsql/pgsql.c prelude-manager/plugins/db/pgsql/pgsql.c
--- prelude-manager-0.8.7/plugins/db/pgsql/pgsql.c	2003-04-24 13:15:54.000000000 +0200
+++ prelude-manager/plugins/db/pgsql/pgsql.c	2003-04-23 16:01:12.000000000 +0200
@@ -1,6 +1,6 @@
 /*****
 *
-* Copyright (C) 2001, 2002, 2003 Vandoorselaere Yoann <yoann@mandrakesoft.com>
+* Copyright (C) 2001, 2002 Vandoorselaere Yoann <yoann@mandrakesoft.com>
 * All Rights Reserved
 *
 * This file is part of the Prelude program.
@@ -35,20 +35,21 @@
 #include "db.h"
 
 
-#define MAX_QUERY_LENGTH     8192
+#define MAX_QUERY_LENGTH 8192
 
 
 static int is_enabled = 0;
 static plugin_db_t plugin;
 static char *dbhost = NULL;
+static char *dbport = "5432";
 static char *dbname = NULL;
 static char *dbuser = NULL;
 static char *dbpass = NULL;
-static char *dbport = NULL;
 static PGconn *pgsql = NULL;
 
 
 
+
 /*
  * Escape single quote characher with a backslash.
  */
@@ -121,6 +122,7 @@
          */
         pgsql = PQsetdbLogin(dbhost, dbport, NULL, NULL, dbname, dbuser, dbpass);
 
+
         if ( PQstatus(pgsql) == CONNECTION_BAD) {
                 log(LOG_INFO, "PgSQL connection failed: %s", PQerrorMessage(pgsql));
                 PQfinish(pgsql);
@@ -140,8 +142,8 @@
 
 static int set_dbport(prelude_option_t *opt, const char *optarg) 
 {
-        dbport = strdup(optarg);
-        return prelude_option_success;
+	dbport = strdup(optarg);
+	return prelude_option_success;
 }
 
 
@@ -217,9 +219,9 @@
                            "Tell the host where the PgSQL DB is located", required_argument,
                            set_dbhost, NULL);
 
-        prelude_option_add(opt, CLI_HOOK|CFG_HOOK|WIDE_HOOK, 'P', "dbport",
-                           "Tell what port the PgSQL DB is listening to", required_argument,
-                           set_dbport, NULL);
+	prelude_option_add(opt, CLI_HOOK|CFG_HOOK|WIDE_HOOK, 'P', "dbport",
+				"Tell what port the PgSQL DB is listening to", required_argument,
+				set_dbport, NULL);
 
         prelude_option_add(opt, CLI_HOOK|CFG_HOOK|WIDE_HOOK, 'n', "dbname",
                            "Tell the name of the database to use", required_argument,
