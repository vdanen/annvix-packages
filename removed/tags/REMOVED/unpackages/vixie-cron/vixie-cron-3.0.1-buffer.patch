--- vixie-cron-3.0.1/cron.h.buffer	Mon Feb 12 15:06:39 2001
+++ vixie-cron-3.0.1/cron.h	Mon Feb 12 15:06:39 2001
@@ -68,7 +68,7 @@
 #define	MAX_COMMAND	1000	/* max length of internally generated cmd */
 #define	MAX_ENVSTR	1000	/* max length of envvar=value\0 strings */
 #define	MAX_TEMPSTR	100	/* obvious */
-#define	MAX_UNAME	20	/* max length of username, should be overkill */
+#define	MAX_UNAME	32	/* max length of username, should be overkill */
 #define	ROOT_UID	0	/* don't change this, it really must be root */
 #define	ROOT_USER	"root"	/* ditto */
 
--- vixie-cron-3.0.1/database.c.buffer	Mon Feb 12 15:06:39 2001
+++ vixie-cron-3.0.1/database.c	Mon Feb 12 15:06:39 2001
@@ -117,7 +117,7 @@
 			continue;
 		/* ignore files starting with # and ending with ~ */
 
-		(void) strcpy(fname, dp->d_name);
+		(void) strncpy(fname, dp->d_name, MAXNAMLEN);
 		snprintf(tabname, MAXNAMLEN+1, "/etc/cron.d/%s", fname);
 
 		process_crontab("root", "*system*", tabname,
@@ -146,7 +146,7 @@
 		if (dp->d_name[0] == '.')
 			continue;
 
-		(void) strcpy(fname, dp->d_name);
+		(void) strncpy(fname, dp->d_name, MAXNAMLEN);
 		snprintf(tabname, MAXNAMLEN+1, CRON_TAB(fname));
 
 		process_crontab(fname, fname, tabname,
--- vixie-cron-3.0.1/crontab.c.buffer	Mon Feb 12 15:06:39 2001
+++ vixie-cron-3.0.1/crontab.c	Mon Feb 12 15:06:39 2001
@@ -143,8 +143,8 @@
 		fprintf(stderr, "bailing out.\n");
 		exit(ERROR_EXIT);
 	}
-	strcpy(User, pw->pw_name);
-	strcpy(RealUser, User);
+	strncpy(User, pw->pw_name, MAX_UNAME-1);
+	strncpy(RealUser, User, MAX_UNAME-1);
 	Filename[0] = '\0';
 	Option = opt_unknown;
 	while (EOF != (argch = getopt(argc, argv, "u:lerx:"))) {
@@ -166,7 +166,7 @@
 					ProgramName, optarg);
 				exit(ERROR_EXIT);
 			}
-			(void) strcpy(User, optarg);
+			(void) strncpy(User, optarg, MAX_UNAME - 1);
 			break;
 		case 'l':
 			if (Option != opt_unknown)
--- vixie-cron-3.0.1/env.c.buffer	Mon Feb 12 15:06:39 2001
+++ vixie-cron-3.0.1/env.c	Mon Feb 12 15:07:31 2001
@@ -115,7 +115,7 @@
 {
 	long	filepos;
 	int	fileline;
-	char	name[MAX_ENVSTR], val[MAX_ENVSTR];
+	char	name[MAX_ENVSTR], val[MAX_ENVSTR], *val2;
 	int	fields;
 
 	filepos = ftell(f);
@@ -142,6 +142,7 @@
 	/*
 	 * process value string
 	 */
+	val2 = val;
 	/*local*/{
 		int	len = strdtb(val);
 
@@ -149,14 +150,14 @@
 			if (val[0] == '\'' || val[0] == '"') {
 				if (val[len-1] == val[0]) {
 					val[len-1] = '\0';
-					(void) strcpy(val, val+1);
+					val2 = val + 1;
 				}
 			}
 		}
 	}
 
-	(void) snprintf(envstr, MAX_ENVSTR, "%s=%s", name, val);
-	Debug(DPARS, ("load_env, <%s> <%s> -> <%s>\n", name, val, envstr))
+	(void) snprintf(envstr, MAX_ENVSTR, "%s=%s", name, val2);
+	Debug(DPARS, ("load_env, <%s> <%s> -> <%s>\n", name, val2, envstr))
 	return (TRUE);
 }
 
