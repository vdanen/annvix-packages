--- xc/programs/Xserver/hw/xfree86/drivers/savage-1.1.26t/savage_cursor.c	2002-10-07 15:17:32.000000000 -0400
+++ xc/programs/Xserver/hw/xfree86/drivers/savage/savage_cursor.c	2003-01-18 10:22:29.000000000 -0500
@@ -39,6 +39,27 @@
                       } 
 #define MAX_CURS 64
 
+/*
+ * Disable HW Cursor on stretched LCDs. We don't know how to
+ * detect if display is stretched. Therefore we cannot rescale
+ * the HW cursor position.
+ */
+
+static Bool
+SavageUseHWCursor(ScreenPtr pScr, CursorPtr pCurs)
+{
+    ScrnInfoPtr pScrn = xf86Screens[pScr->myNum];
+    SavagePtr psav = SAVPTR(pScrn);
+
+    if (psav->PanelX != pScrn->currentMode->HDisplay 
+	|| psav->PanelY != pScrn->currentMode->VDisplay) {
+	/* BIT 1 : CRT is active, BIT 2 : LCD is active */
+	unsigned char cr6d = inCRReg( 0x6d );
+	if (cr6d & 0x02)
+	    return FALSE;
+    }
+    return TRUE;
+}
 
 Bool 
 SavageHWCursorInit(ScreenPtr pScreen)
@@ -80,8 +101,12 @@
     infoPtr->LoadCursorImage = SavageLoadCursorImage;
     infoPtr->HideCursor = SavageHideCursor;
     infoPtr->ShowCursor = SavageShowCursor;
-    infoPtr->UseHWCursor = NULL;
 
+    if ((S3_SAVAGE_MOBILE_SERIES(psav->Chipset)
+	 || (psav->Chipset == S3_PROSAVAGE)) && !psav->CrtOnly)
+	infoPtr->UseHWCursor = SavageUseHWCursor;
+    else
+	infoPtr->UseHWCursor = NULL;
     if( !psav->CursorKByte )
 	psav->CursorKByte = pScrn->videoRam - 4;
 
@@ -93,8 +118,9 @@
 void
 SavageShowCursor(ScrnInfoPtr pScrn)
 {
-   /* Turn cursor on. */
+    /* Turn cursor on. */
    outCRReg( 0x45, inCRReg(0x45) | 0x01 );
+   SAVPTR(pScrn)->hwc_on = TRUE;
 }
 
 
@@ -102,12 +128,12 @@
 SavageHideCursor(ScrnInfoPtr pScrn)
 {
     /* Turn cursor off. */
-
     if( S3_SAVAGE4_SERIES( SAVPTR(pScrn)->Chipset ) )
     {
        waitHSync(5);
     }
     outCRReg( 0x45, inCRReg(0x45) & 0xfe );
+    SAVPTR(pScrn)->hwc_on = FALSE;
 }
 
 static void
--- xc/programs/Xserver/hw/xfree86/drivers/savage-1.1.26t/savage_dga.c	2002-10-07 15:17:32.000000000 -0400
+++ xc/programs/Xserver/hw/xfree86/drivers/savage/savage_dga.c	2003-01-18 10:22:29.000000000 -0500
@@ -275,7 +275,7 @@
 
 	psav->DGAactive = FALSE;
 	SavageSwitchMode(index, pScrn->currentMode, 0);
-	if( psav->hwcursor )
+	if( psav->hwcursor && psav->hwc_on )
 	    SavageShowCursor(pScrn);
     } else {
 	Bool holdBIOS = psav->UseBIOS;
@@ -289,8 +289,11 @@
 	    pMode->bitsPerPixel, pMode->depth);
 #endif
 
-	if( psav->hwcursor )
+	if( psav->hwcursor && psav->hwc_on) {
 	    SavageHideCursor(pScrn);
+	    psav->hwc_on = TRUE;    /* save for later restauration */
+	}
+	
 
 	if(!psav->DGAactive) {  /* save the old parameters */
 	    OldDisplayWidth[index] = pScrn->displayWidth;
--- xc/programs/Xserver/hw/xfree86/drivers/savage-1.1.26t/savage_driver.c	2002-10-07 15:17:33.000000000 -0400
+++ xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.c	2003-02-07 06:21:08.000000000 -0500
@@ -82,7 +82,12 @@
 #define iabs(a)	((int)(a)>0?(a):(-(a)))
 
 #define DRIVER_NAME	"savage"
-#define DRIVER_VERSION	"1.1.27t"
+/* XFree86 CVS has '1.1.26', which is 1.1.26t modified with various changes
+ * from CVS development.  Our driver is Tim Robert's 1.1.27t driver, with
+ * some of the XFree86 CVS 1.1.26 changes added back in, so I'm indicating
+ * our driver is different from stock X, and stock timr's by using 'mh'
+ */
+#define DRIVER_VERSION	"1.1.27mh"
 #define VERSION_MAJOR	1
 #define VERSION_MINOR	1
 #define PATCHLEVEL	27
@@ -954,7 +945,6 @@
 
     if (xf86LoadSubModule(pScrn, "vbe")) {
 	xf86LoaderReqSymLists(vbeSymbols, NULL);
-	psav->pVbe = VBEInit(psav->pInt10, pEnt->index);
     }
 
 
@@ -995,6 +985,9 @@
     } else
 	psav->ChipRev = psav->PciInfo->chipRev;
 
+    if (pEnt->device->videoRam != 0)
+    	pScrn->videoRam = pEnt->device->videoRam;
+
     xfree(pEnt);
 
     /* maybe throw in some more sanity checks here */
@@ -1358,7 +1351,7 @@
 	}
     }
   
-    clockRanges = xnfalloc(sizeof(ClockRange));
+    clockRanges = xnfcalloc(sizeof(ClockRange),1);
     clockRanges->next = NULL;
     clockRanges->minClock = psav->minClock;
     clockRanges->maxClock = psav->maxClock;
@@ -2228,7 +2221,7 @@
     psav = SAVPTR(pScrn);
 
     pEnt = xf86GetEntityInfo(pScrn->entityList[0]); 
-    psav->pVbe = VBEInit(NULL, pEnt->index);
+    psav->pVbe = VBEInit(psav->pInt10, pEnt->index);
  
     SavageEnableMMIO(pScrn);
 
@@ -2839,15 +2832,16 @@
     ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
     TRACE(("SavageSaveScreen(0x%x)\n", mode));
 
-    if( pScrn->vtSema && SAVPTR(pScrn)->hwcursor )
-    {
+    if( pScrn->vtSema && SAVPTR(pScrn)->hwcursor && SAVPTR(pScrn)->hwc_on) {
+
 	if( xf86IsUnblank(mode) )
 	    SavageShowCursor( pScrn );
 	else
 	    SavageHideCursor( pScrn );
+	SAVPTR(pScrn)->hwc_on = TRUE;
     }
 
-    return vgaHWSaveScreen(pScreen, mode);
+	return vgaHWSaveScreen(pScreen, mode);
 }
 
 
--- xc/programs/Xserver/hw/xfree86/drivers/savage-1.1.26t/savage_driver.h	2002-10-07 15:19:04.000000000 -0400
+++ xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.h	2003-01-18 10:22:30.000000000 -0500
@@ -118,6 +118,7 @@
     Bool		fifo_moderate;
     Bool		fifo_aggressive;
     Bool		hwcursor;
+    Bool		hwc_on;
     Bool		NoAccel;
     Bool		shadowFB;
     Bool		UseBIOS;
@@ -212,6 +213,15 @@
 
 #define SAVPTR(p)	((SavagePtr)((p)->driverPrivate))
 
+/* Make the names of these externals driver-unique */
+#define gpScrn savagegpScrn
+#define myOUTREG savageOUTREG
+#define readdw savagereaddw
+#define readfb savagereadfb
+#define writedw savagewritedw
+#define writefb savagewritefb
+#define writescan savagewritescan
+
 /* Prototypes. */
 
 extern void SavageCommonCalcClock(long freq, int min_m, int min_n1,
--- xc/programs/Xserver/hw/xfree86/drivers/savage-1.1.26t/savage_video.c	2002-10-07 15:17:33.000000000 -0400
+++ xc/programs/Xserver/hw/xfree86/drivers/savage/savage_video.c	2003-01-11 22:55:49.000000000 -0500
@@ -869,10 +869,10 @@
 
     psav->adaptor = adapt;
 
-    #if 0
+#if 0
     psav->BlockHandler = pScreen->BlockHandler;
     pScreen->BlockHandler = SavageBlockHandler;
-    #endif
+#endif
 
     return adapt;
 }
@@ -992,8 +992,9 @@
 
     REGION_EMPTY(pScrn->pScreen, &pPriv->clip);   
 
+    SavageStreamsOff( pScrn );
+
     if(shutdown) {
-	SavageStreamsOff( pScrn );
 	if(pPriv->area) {
 	    xf86FreeOffscreenArea(pPriv->area);
 	    pPriv->area = NULL;
@@ -1282,11 +1283,9 @@
     ssControl |= (1 << 24);
     OUTREG(SSTREAM_CONTROL_REG, ssControl);
 
-#if 0
     /* Set color key on primary. */
 
     SavageSetColorKey( pScrn );
-#endif
 
     /* Set FIFO L2 on second stream. */
 
@@ -1384,11 +1383,9 @@
     OUTREG(SEC_STREAM_WINDOW_START, ((dstBox->x1+1) << 16) | (dstBox->y1+1) );
     OUTREG(SEC_STREAM_WINDOW_SZ, ((drw_w) << 16) | drw_h );
 
-#if 0
     /* Set color key on primary. */
 
     SavageSetColorKey( pScrn );
-#endif
 
     /* Set FIFO L2 on second stream. */
 
@@ -1427,7 +1424,6 @@
     int top, left, npixels, nlines;
     BoxRec dstBox;
     CARD32 tmp;
-/*    xf86ErrorFVerb(XVTRACE,"SavagePutImage\n"); */
 
     if(drw_w > 16384) drw_w = 16384;
 
@@ -1523,12 +1519,6 @@
 	SavageCopyData(buf, dst_start, srcPitch, dstPitch, nlines, npixels);
 	break;
     }  
-   
-    /* We need to enable the video before we draw the chroma color.
-       Otherwise, we get blue flashes. */
-
-    SavageDisplayVideo(pScrn, id, offset, width, height, dstPitch,
-	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
 
     /* update cliplist */
     if(!RegionsEqual(&pPriv->clip, clipBoxes)) {
@@ -1538,6 +1528,9 @@
 					REGION_NUM_RECTS(clipBoxes),
 					REGION_RECTS(clipBoxes));
     }
+   
+    SavageDisplayVideo(pScrn, id, offset, width, height, dstPitch,
+	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
 
     pPriv->videoStatus = CLIENT_VIDEO_ON;
 
@@ -1699,7 +1692,6 @@
     XF86SurfacePtr surface
 ){
     OffscreenPrivPtr pPriv = (OffscreenPrivPtr)surface->devPrivate.ptr;
-    xf86ErrorFVerb(XVTRACE,"SavageStopSurface\n");
 
     if(pPriv->isOn) {
 	/*SavagePtr psav = SAVPTR(surface->pScrn);*/
@@ -1762,7 +1754,6 @@
     SavagePortPrivPtr portPriv = GET_PORT_PRIVATE(pScrn);
     INT32 x1, y1, x2, y2;
     BoxRec dstBox;
-    xf86ErrorFVerb(XVTRACE,"SavageDisplaySurface\n");
 
     x1 = src_x;
     x2 = src_x + src_w;
@@ -1786,14 +1777,14 @@
     dstBox.y1 -= pScrn->frameY0;
     dstBox.y2 -= pScrn->frameY0;
 
-    SavageDisplayVideo(pScrn, surface->id, surface->offsets[0], 
-	     surface->width, surface->height, surface->pitches[0],
-	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
-
     XAAFillSolidRects(pScrn, portPriv->colorKey, GXcopy, ~0, 
                                         REGION_NUM_RECTS(clipBoxes),
                                         REGION_RECTS(clipBoxes));
 
+    SavageDisplayVideo(pScrn, surface->id, surface->offsets[0], 
+	     surface->width, surface->height, surface->pitches[0],
+	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
+
     pPriv->isOn = TRUE;
 #if 0
     if(portPriv->videoStatus & CLIENT_VIDEO_ON) {
