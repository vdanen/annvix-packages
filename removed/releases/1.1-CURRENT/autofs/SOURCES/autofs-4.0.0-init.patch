--- autofs-4.0.0pre10/samples/rc.autofs.in.initd	Wed Mar 28 00:08:23 2001
+++ autofs-4.0.0pre10/samples/rc.autofs.in	Fri Nov 30 12:43:57 2001
@@ -1,4 +1,4 @@
-#! /bin/bash
+#!/bin/bash
 #
 # $Id: //depot/autofs-4.0/samples/rc.autofs.in#4 $
 #
@@ -12,7 +12,9 @@
 
 # For Redhat-ish systems
 #
-# chkconfig: 345 15 85
+# chkconfig: 345 72 28
+# processname: /usr/sbin/automount
+# config: /etc/auto.master
 # description: Automounts filesystems on demand
 
 # This is used in the Debian distribution to determine the proper
@@ -28,6 +30,7 @@
 # Location of the automount daemon and the init directory
 #
 DAEMON=@@sbindir@@/automount
+prog=`basename $DAEMON`
 initdir=@@initdir@@
 
 #
@@ -48,10 +51,13 @@
 fi
 
 test -e $DAEMON || exit 0
-thisscript="$0"
-if [ ! -f "$thisscript" ]; then
+
+if [ $system = debian ]; then
+    thisscript="$0"
+    if [ ! -f "$thisscript" ]; then
     echo "$0: Cannot find myself" 1>&2
     exit 1
+    fi
 fi
 
 PATH=/sbin:/usr/sbin:/bin:/usr/bin
@@ -63,6 +69,74 @@
 #
 localoptions=''
 
+# Daemon options
+# e.g. --timeout 60
+#
+daemonoptions=''
+
+#
+# Check for all maps that are to be loaded
+#
+function getschemes()
+{
+    grep ^automount: /etc/nsswitch.conf | sed -e 's/^.*://' -e 's/\[.*\]/ /g'
+}
+function catnismap()
+{
+    if [ -z "$1" ] ; then
+        map="auto_master"
+    else
+        map="$1"
+    fi
+    /usr/bin/ypcat -k "$map" 2> /dev/null | sed -e '/^#/d' -e '/^$/d'
+}
+function getfilemounts()
+{
+    if [ -f /etc/auto.master ] ; then
+        cat /etc/auto.master | grep -v '^\+' | sed -e '/^#/d' -e '/^$/d'
+        for nismap in `cat /etc/auto.master | grep '^\+' | sed -e '/^#/d' -e '/^$/d'`; do
+            catnismap `echo "$nismap" | sed -e 's/^\+//'`
+        done
+    fi
+}
+function getnismounts()
+{
+    catnismap auto.master
+}
+function getldapmounts()
+{
+    /usr/lib/autofs/autofs-ldap-auto-master 2> /dev/null
+}
+function getrawmounts()
+{
+    for scheme in `getschemes` ; do
+        case "$scheme" in
+            files)
+                if [ -z "$filescheme" ] ; then
+                    getfilemounts
+                    filescheme=1
+                    export filescheme
+                fi
+                ;;
+            nis*|yp)
+                if [ -z "$nisscheme" ] ; then
+                    getnismounts
+                    nisscheme=1
+                    export nisscheme
+                fi
+                ;;
+            ldap*)
+                if [ -z "$ldapscheme" ] ; then
+                    getldapmounts
+                    ldapscheme=1
+                    export ldapscheme
+                fi
+                ;;
+        esac
+    done
+}
+
+
 #
 # Daemon options
 # e.g. --timeout 60
@@ -76,55 +150,72 @@
 #
 function getmounts()
 {
-#
-# Check for local maps to be loaded
-#
-if [ -f /etc/auto.master ]
-then
-    cat /etc/auto.master | sed -e '/^#/d' -e '/^$/d'| (
+	knownmaps=" "
+	getrawmounts | (
 	while read dir map options
 	do
+		# These checks screen out duplicates and skip over directories
+		# where the map is '-'.
+		# We can't do empty or direct host maps, so don't bother trying.
+		if [ ! -z "$map" -a "$map" = "-hosts" ] ; then
+		continue
+	    fi
 	    if [ ! -z "$dir" -a ! -z "$map" \
-			-a x`echo "$map" | cut -c1` != 'x-' ]
+			-a x`echo "$map" | cut -c1` != 'x-' \
+			-a "`echo "$knownmaps" | grep '$dir/'`" = "" ]
 	    then
-		map=`echo "/etc/$map" | sed -e 's:^/etc//:/:'`
-		options=`echo "$options" | sed -e 's/\(^\|[ \t]\)-/\1/g'`
-		if [ -x $map ]; then
-		    echo "$DAEMON $daemonoptions $dir program $map $options $localoptions"
-		elif [ -f $map ]; then
-		    echo "$DAEMON $daemonoptions $dir file $map $options $localoptions"
+		# If the options include a -t or --timeout parameter, then
+		# pull those particular options out.
+       : echo DAEMONOPTIONS OPTIONS $daemonoptions $options
+		startupoptions=
+		if echo $options | grep -q -- '-t' ; then
+		    startupoptions="--timeout $(echo $daemonoptions $options | \
+		      sed 's/.*--*t\(imeout\)*[ \t=]*\([0-9][0-9]*\).*$/\2/g')"
+		fi
+		# Other option flags are intended for maps.
+		mapoptions="$(echo "$daemonoptions $options" |\
+		      sed   's/--*t\(imeout\)*[ \t=]*\([0-9][0-9]*\)//g')"
+		# Break up the maptype and map, if the map type is specified
+		maptype=`echo $map | cut -f1 -d:`
+		# Handle degenerate map specifiers
+		if [ "$maptype" = "$map" ] ; then
+		    if [ -x "$map" ]; then
+		    maptype=program
+		    elif [ -x "/etc/$map" ]; then
+		    maptype=program
+		    map=`echo /etc/$map | sed 's^//^/^g'`
+		    elif [ -f "$map" ]; then
+		    maptype=file
+		    elif [ -f "/etc/$map" ]; then
+		    maptype=file
+		    map=`echo /etc/$map | sed 's^//^/^g'`
+		    elif [ "$map" = "hesiod" -o "$map" = "userhome" ] ; then
+		    maptype=$map
+		    map=
+		    elif [ "$map" = "multi" ] ; then
+		    maptype=$map
+			map=
 		else
-		    echo "$DAEMON $daemonoptions $dir `basename $map` $options $localoptions"
+			maptype=yp
+			map=`basename $map | sed -e s/^auto_home/auto.home/ -e s/^auto_mnt/auto.mnt/`
 		fi
 	    fi
-	done
-    )
-fi
+		map=`echo $map | cut -f2- -d:`
 
-#
-# Check for YellowPage maps to be loaded
-#
-if [ -e /usr/bin/ypcat ] && [ `ypcat -k auto.master 2>/dev/null | wc -l` -gt 0 ]
-then
-    ypcat -k auto.master | (
-	while read dir map options
-	do
-	    if [ ! -z "$dir" -a ! -z "$map" \
-			-a x`echo "$map" | cut -c1` != 'x-' ]
-	    then
-		map=`echo "$map" | sed -e 's/^auto_/auto./'`
-		if echo $options | grep -- '-t' >/dev/null 2>&1 ; then
-		    mountoptions="--timeout $(echo $options | \
-		      sed 's/^.*-t\(imeout\)*[ \t]*\([0-9][0-9]*\).*$/\2/g')"
-		fi
-                options=`echo "$options" | sed -e '
-                  s/--*t\(imeout\)*[ \t]*[0-9][0-9]*//g
-                  s/\(^\|[ \t]\)-/\1/g'`
-		echo "$DAEMON $daemonoptions $mountoptions $dir yp $map $options $localoptions"
+		: echo STARTUPOPTIONS $startupoptions
+		: echo DIR $dir
+		: echo MAPTYPE $maptype
+		: echo MAP $map
+		: echo MAPOPTIONS $mapoptions
+		: echo LOCALOPTIONS $localoptions
+		
+		echo "$DAEMON $startupoptions $dir $maptype $map $mapoptions $localoptions" | sed -e 's/    / /g' -e 's/  / /g'
+		
+		: echo ------------------------
 	    fi
+		knownmaps=" $dir/ $knownmaps"
 	done
     )
-fi
 }
 
 #
@@ -132,13 +223,13 @@
 #
 function status()
 {
-	echo "Configured Mount Points:"
+	gprintf "Configured Mount Points:\n"
 	echo "------------------------"
 	getmounts
 	echo ""
-	echo "Active Mount Points:"
+	gprintf "Active Mount Points:\n"
 	echo "--------------------"
-	ps ax|grep "[0-9]:[0-9][0-9] automount " | (
+	ps axwww|grep "[0-9]:[0-9][0-9] $DAEMON " | (
 		while read pid tt stat time command; do echo $command; done
 	)
 }
@@ -169,55 +260,75 @@
 #
 case "$1" in
   start)
-	# Check if the automounter is already running?
-	if [ ! -f /var/lock/subsys/autofs ]; then
-	    echo 'Starting automounter: '
-	    getmounts | sh
-	    touch /var/lock/subsys/autofs
+	[ -z "`pidofproc portmap`" ] && /etc/rc.d/init.d/portmap start
+	# Make sure the autofs filesystem type is available.
+	(grep -q autofs /proc/filesystems || /sbin/modprobe -k autofs || /sbin/modprobe -k autofs4) 2> /dev/null
+	gprintf "Starting %s:" $prog
+	TMP=`mktemp /tmp/autofs.XXXXXX` || { echo $"could not make temp file" >& 2; exit 1; }
+	getmounts | tee $TMP | sh
+	RETVAL=$?
+	if [ -s $TMP ] ; then
+	success "%s startup" $prog || failure "%s startup" $prog
+	[ $RETVAL = 0 ] && touch /var/lock/subsys/autofs
+	else
+	gprintf "No Mountpoints Defined"
+	success "%s startup" $prog
 	fi
+	rm -f $TMP
+	echo
 	;;
   stop)
-	pids=$(/sbin/pidof $DAEMON)
-	kill -TERM $pids 2> /dev/null && sleep 1
-	count=1
-	while alive $pids; do
-	    sleep 5
-	    count=$(expr $count + 1)
-	    if [ $count -gt 5 ]; then
-		echo "Giving up on automounter"
-		break;
+		echo -n $"Stopping $prog:"
+	if [ -z "`pidofproc $prog`" -a -z "`getmounts`" ]; then
+		success "%s shutdown" $prog
+		RETVAL=0
+	else
+	       	killproc $DAEMON -TERM
+	       	RETVAL=$?
 	    fi
-	    echo "Automounter not stopped yet: retrying... (attempt $count)"
+	       count=0
+	       while [ -n "`/sbin/pidof $DAEMON`" -a $count -lt 8 ] ; do
+	    killproc $DAEMON -TERM
+	           RETVAL=$?
+	           umount -a -f -t autofs
+	    [ $RETVAL = 0 ] || sleep ${count+1}
+	           count=`expr $count + 1`
 	done
-	if [ $count -gt 1 -a $count -le 10 ]; then
-	    echo "Automounter stopped"
-	fi
+	       umount -a -f -t autofs
 	rm -f /var/lock/subsys/autofs
+	       echo
+	;;
+  restart)
+	       redhat stop
+	       redhat start
 	;;
-  reload|restart)
+  reload)
 	if [ ! -f /var/lock/subsys/autofs ]; then
-		echo "Automounter not running"
-		exit 1
+		gprintf "%s not running\n" $prog
+		RETVAL=1
+		return
 	fi
-	echo "Checking for changes to /etc/auto.master ...."
-        TMP1=`mktemp /tmp/autofs.XXXXXX` || { echo "could not make temp file" >& 2; exit 1; }
-        TMP2=`mktemp /tmp/autofs.XXXXXX` || { echo "could not make temp file" >& 2; exit 1; }
-	getmounts >$TMP1
-	ps ax|grep "[0-9]:[0-9][0-9] $DAEMON " | (
+	gprintf "Checking for changes to /etc/auto.master ....\n"
+        TMP1=`mktemp /tmp/autofs.XXXXXX` || { echo $"could not make temp file" >& 2; exit 1; }
+        TMP2=`mktemp /tmp/autofs.XXXXXX` || { echo $"could not make temp file" >& 2; exit 1; }
+	getmounts > $TMP1
+	ps axwww|grep "[0-9]:[0-9][0-9] $DAEMON" | (
 	    while read pid tt stat time command; do
 		echo "$command" >>$TMP2
-		if ! grep -q "^$command" $TMP2; then
+		if ! grep -q "^$command" $TMP1; then
+		    if ! echo "$command" | grep -q -e --submount; then
 			while kill -USR2 $pid; do
 			    sleep 3
 			done
-			echo "Stop $command"
+			gprintf "Stop %s\n" $command
+			fi
 		fi
 	    done
 	)
 	( while read x; do
 		if ! grep -q "^$x" $TMP2; then
 			$x
-			echo "Start $x"
+			gprintf "Start %s\n" $x
 		fi
         done ) < $TMP1
 	rm -f $TMP1 $TMP2
@@ -225,9 +336,14 @@
   status)
 	status
 	;;
+  condrestart)
+	[ -f /var/lock/subsys/autofs ] && redhat restart
+        RETVAL=0
+	;;
   *)
-	echo "Usage: $initdir/autofs {start|stop|restart|reload|status}"
-	exit 1
+	gprintf "Usage: %s {start|stop|restart|reload|condrestart|status}" $0
+	RETVAL=0
+	;;
 esac
 }
 
@@ -283,10 +399,11 @@
 esac
 }
 
+RETVAL=0
 if [ $system = debian ]; then
 	debian "$@"
 elif [ $system = redhat ]; then
 	redhat "$@"
 fi
 
-exit 0
+exit $RETVAL
