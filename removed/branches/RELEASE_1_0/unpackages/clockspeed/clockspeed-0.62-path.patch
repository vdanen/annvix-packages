diff -ruN clockspeed-0.62.opensls/clockspeed.1 clockspeed-0.62/clockspeed.1
--- clockspeed-0.62.opensls/clockspeed.1	1998-10-13 11:37:49.000000000 -0600
+++ clockspeed-0.62/clockspeed.1	2004-05-11 15:45:52.000000000 -0600
@@ -12,7 +12,7 @@
 
 .B clockspeed
 reads the real-time measurements from
-.BR /usr/local/clockspeed/adjust .
+.BR /var/lib/clockspeed/adjust .
 Each real-time measurement must be a single 16-byte packet,
 expressed as a TAI64NA time adjustment to the local UNIX clock.
 
@@ -24,12 +24,12 @@
 .B clockspeed
 can figure out the number of real attoseconds per tick.
 It saves this number in TAI64NA format in
-.BR /usr/local/clockspeed/etc/atto ,
+.BR /var/lib/clockspeed/atto ,
 overwriting
-.B /usr/local/clockspeed/etc/atto.tmp
+.B /var/lib/clockspeed/atto.tmp
 for reliability.
 It reads
-.B /usr/local/clockspeed/etc/atto
+.B /var/lib/clockspeed/atto
 when it starts up again.
 
 .B clockspeed
diff -ruN clockspeed-0.62.opensls/clockspeed.c clockspeed-0.62/clockspeed.c
--- clockspeed-0.62.opensls/clockspeed.c	1998-10-13 11:37:49.000000000 -0600
+++ clockspeed-0.62/clockspeed.c	2004-05-11 15:45:09.000000000 -0600
@@ -83,7 +83,7 @@
   if (deriv <= 0) return;
   if (deriv > 200000000) return; /* 5Hz ticks? be serious */
 
-  fd = open_trunc("etc/atto.tmp");
+  fd = open_trunc("/var/lib/clockspeed/atto.tmp");
   if (fd == -1) return;
 
   buf[0] = 0;
@@ -119,7 +119,7 @@
   if (fsync(fd) == -1) { close(fd); return; }
   if (close(fd) == -1) return; /* NFS stupidity */
 
-  rename("etc/atto.tmp","etc/atto"); /* if it fails, bummer */
+  rename("/var/lib/clockspeed/atto.tmp","/var/lib/clockspeed/atto"); /* if it fails, bummer */
 }
 
 void main()
@@ -136,16 +136,16 @@
   if (chdir(auto_home) == -1) _exit(1);
   umask(033);
 
-  if (open_read("etc/atto") == 0) {
+  if (open_read("/var/lib/clockspeed/atto") == 0) {
     r = read(0,buf,sizeof buf);
     if (r == sizeof buf)
       deriv = nano(buf);
     close(0);
   }
 
-  if (fifo_make("adjust",0600) == -1) if (errno != error_exist) _exit(1);
-  if (open_read("adjust") != 0) _exit(1);
-  if (open_write("adjust") == -1) _exit(1);
+  if (fifo_make("/var/lib/clockspeed/adjust",0600) == -1) if (errno != error_exist) _exit(1);
+  if (open_read("/var/lib/clockspeed/adjust") != 0) _exit(1);
+  if (open_write("/var/lib/clockspeed/adjust") == -1) _exit(1);
 
   now(&first);
 
diff -ruN clockspeed-0.62.opensls/INSTALL clockspeed-0.62/INSTALL
--- clockspeed-0.62.opensls/INSTALL	1998-10-13 11:37:49.000000000 -0600
+++ clockspeed-0.62/INSTALL	2004-05-11 15:46:34.000000000 -0600
@@ -39,20 +39,20 @@
  5. Start clockspeed:
        # clockspeed &
     Give clockspeed a time measurement:
-       # sntpclock 1.2.3.4 > /usr/local/clockspeed/adjust &
+       # sntpclock 1.2.3.4 > /var/lib/clockspeed/adjust &
 
  6. After a few hours, give clockspeed a second time measurement:
-       # sntpclock 1.2.3.4 > /usr/local/clockspeed/adjust &
+       # sntpclock 1.2.3.4 > /var/lib/clockspeed/adjust &
     You can run sntpclock as a non-root user, if you change
-    /usr/local/clockspeed/adjust to be owned by that user. I recommend
+    /var/lib/clockspeed/adjust to be owned by that user. I recommend
     this for security.
 
  7. After a few days, check how well clockspeed has adjusted your clock:
        % sntpclock 1.2.3.4 | clockview
     Check how many attoseconds clockspeed thinks are in one tick:
-       % clockview < /usr/local/clockspeed/etc/atto
+       % clockview < /var/lib/clockspeed/atto
     Give it another time measurement:
-       # sntpclock 1.2.3.4 > /usr/local/clockspeed/adjust &
+       # sntpclock 1.2.3.4 > /var/lib/clockspeed/adjust &
 
  8. Repeat step 7 after a few weeks, then after a few months. Your clock
     should now be synchronized to the remote clock to within a few
@@ -70,7 +70,7 @@
     Here 5.6.7.8 is the master's IP address. Set the client's clock:
        # clockadd < adjustment
     Finally, run clockspeed as in step 5, and do
-       % taiclock 5.6.7.8 > /usr/local/clockspeed/adjust &
+       % taiclock 5.6.7.8 > /var/lib/clockspeed/adjust &
     after a few days.
 
 
