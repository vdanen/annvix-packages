--- scheduler/auth.c.orig	Thu Aug 24 18:10:11 2000
+++ scheduler/auth.c	Wed Sep 20 17:23:19 2000
@@ -517,7 +517,7 @@
     * Not doing local certificate-based authentication; check the password...
     */
 
-    if (!con->password[0])
+    if (!con->password)
       return (HTTP_UNAUTHORIZED);
 
    /*
--- cups/util.c.orig	Tue Jul 10 15:29:43 2001
+++ cups/util.c	Tue Jul 10 15:32:25 2001
@@ -334,8 +334,9 @@
 
         if ((password = cupsGetPassword(prompt)) == NULL)
 	  break;
-	if (!password[0])
-	  break;
+	// Do not reject blank passwords
+	//if (!password[0])
+	//  break;
 
         strncpy(pwdstring, password, sizeof(pwdstring) - 1);
 	pwdstring[sizeof(pwdstring) - 1] = '\0';
@@ -1192,8 +1193,9 @@
 
         if ((password = cupsGetPassword(prompt)) == NULL)
 	  break;
-	if (!password[0])
-	  break;
+	// Do not reject blank passwords
+	//if (!password[0])
+	//  break;
 
         strncpy(pwdstring, password, sizeof(pwdstring) - 1);
 	pwdstring[sizeof(pwdstring) - 1] = '\0';
--- cups/usersys.c.orig	Sat Sep 23 01:55:05 2000
+++ cups/usersys.c	Sat Sep 23 02:23:43 2000
@@ -288,7 +288,31 @@
 static const char *			/* O - Password */
 cups_get_password(const char *prompt)	/* I - Prompt string */
 {
-  return (getpass(prompt));
+  char        user[65], tmp[256];
+  char        *host;
+  int         i;
+
+  /* Rip the host name out of the prompt */
+  strncpy(tmp, prompt, 255);
+  host = strstr(tmp," on ");
+  /* if host is NULL, we are called by "lppasswd", only ask for the
+     password using the original prompt in that case */
+  if (!host) return (getpass(prompt));
+  i = strlen(host)-2; host[i] = '\0';
+  printf("Authentication required%s\n",host);
+
+  /* Get a username from the user */
+  printf("Username (leave blank to cancel): ");
+  if (!fgets(user, sizeof(user), stdin)) return (NULL);
+  if ((!user) || (!user[0]) || (user[0] == '\n')) return (NULL);
+
+  /* Strip the newline from the string and set the user */
+  user[strlen(user) - 1] = '\0';
+
+  cupsSetUser(user);
+
+  /* Use getpass() to ask for the password... */
+  return (getpass("Password: "));
 }
 #endif /* WIN32 || __EMX__ */
 
