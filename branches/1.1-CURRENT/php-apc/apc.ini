extension = apc.so

[apc]

apc.enabled = 1
;	This can be set to 0 to disable APC. This is
;	primarily useful when APC is statically compiled
;	into PHP, since there is no other way to disable
;	it (when compiled as a DSO, the zend_extension
;	line can just be commented-out).
;	(Default: 1)
                            
apc.shm_segments = 1
;	The number of shared memory segments to allocate
;	for the compiler cache. If APC is running out of
;	shared memory but you have already set
;	apc.shm_size as high as your system allows, you
;	can try raising this value.
;	(Default: 1)
                            
apc.shm_size = 30
;	The size of each shared memory segment in MB.
;	By default, some systems (including most BSD
;	variants) have very low limits on the size of a
;	shared memory segment.
;	(Default: 30)
                            
apc.optimization = 0
;	The optimization level. Zero disables the
;	optimizer, and higher values use more aggressive
;	optimizations. Expect very modest speed
;	improvements. This is experimental.
;	(Default: 0)
    
apc.num_files_hint = 1000
;	A "hint" about the number of distinct source files
;	that will be included or requested on your web
;	server. Set to zero or omit if you're not sure;
;	this setting is mainly useful for sites that have
;	many thousands of source files.
;	(Default: 1000)

apc.gc_ttl = 3600
;	The number of seconds that a cache entry may
;	remain on the garbage-collection list. This value
;	provides a failsafe in the event that a server
;	process dies while executing a cached source file;
;	if that source file is modified, the memory
;	allocated for the old version will not be
;	reclaimed until this TTL reached. Set to zero to
;	disable this feature.
;	(Default: 3600)

apc.filters = 
;	A comma-separated list of POSIX extended regular
;	expressions. If any pattern matches the source
;	filename, the file will not be cached. Note that
;	the filename used for matching is the one passed
;	to include/require, not the absolute path.
;	(Default: "")

apc.mmap_file_mask = 
;	If compiled with MMAP support by using --enable-mmap
;	this is the mktemp-style file_mask to pass to the
;	mmap module for determing whether your mmap'ed memory
;	region is going to be file-backed or shared memory
;	backed.  For straight file-backed mmap, set it to
;	something like /tmp/apc.XXXXXX (exactly 6 X's).
;	To use POSIX-style shm_open/mmap put a ".shm"
;	somewhere in your mask.  eg.  "/apc.shm.XXXXXX"
;	You can also set it to "/dev/zero" to use your 
;	kernel's /dev/zero interface to anonymous mmap'ed 
;	memory.  Leaving it undefined will force an 
;	anonymous mmap.
