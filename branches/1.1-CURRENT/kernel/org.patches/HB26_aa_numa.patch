--- linux-2.4.21/include/asm-x86_64/mmzone.h.x86_64-aa-numa	2002-11-28 18:53:15.000000000 -0500
+++ linux-2.4.21/include/asm-x86_64/mmzone.h	2003-07-21 10:36:18.000000000 -0400
@@ -22,8 +22,8 @@ struct bootmem_data_t;
 
 extern plat_pg_data_t *plat_node_data[];
 
+#include <asm/max_numnodes.h>
 #define MAXNODE 8 
-#define MAX_NUMNODES MAXNODE
 #define NODEMAPSIZE 0xff
 
 /* Simple perfect hash to map physical addresses to node numbers */
--- linux-2.4.21/include/asm-x86_64/max_numnodes.h.x86_64-aa-numa	2003-07-21 10:36:18.000000000 -0400
+++ linux-2.4.21/include/asm-x86_64/max_numnodes.h	2003-07-21 10:36:18.000000000 -0400
@@ -0,0 +1,14 @@
+#ifndef _ASM_MAX_NUMNODES_H
+#define _ASM_MAX_NUMNODES_H
+
+#include <linux/config.h>
+
+
+
+#ifdef CONFIG_K8_NUMA
+#define MAX_NUMNODES 8 
+#else
+#define MAX_NUMNODES 1
+#endif
+
+#endif
--- linux-2.4.21/include/linux/mmzone.h.x86_64-aa-numa	2003-07-21 05:32:57.000000000 -0400
+++ linux-2.4.21/include/linux/mmzone.h	2003-07-21 10:37:07.000000000 -0400
@@ -258,16 +258,15 @@ static inline zone_t *next_zone(zone_t *
 
 #include <asm/mmzone.h>
 
-/* page->zone is currently 8 bits ... */
-#ifndef MAX_NR_NODES
-#define MAX_NR_NODES		(255 / MAX_NR_ZONES)
-#endif
-
 #endif /* !CONFIG_DISCONTIGMEM */
 
 #define MAP_ALIGN(x)	((((x) % sizeof(mem_map_t)) == 0) ? (x) : ((x) + \
 		sizeof(mem_map_t) - ((x) % sizeof(mem_map_t))))
 
+#ifndef MAX_NR_NODES
+#define MAX_NR_NODES		(255 / MAX_NR_ZONES)
+#endif
+
 #endif /* !__ASSEMBLY__ */
 #endif /* __KERNEL__ */
 #endif /* _LINUX_MMZONE_H */
--- linux-2.4.21/arch/x86_64/mm/numa.c.x86_64-aa-numa	2003-06-13 10:51:32.000000000 -0400
+++ linux-2.4.21/arch/x86_64/mm/numa.c	2003-07-21 10:36:18.000000000 -0400
@@ -73,6 +73,8 @@ void __init setup_node_bootmem(int nodei
 
 	if (nodeid > maxnode) 
 		maxnode = nodeid;
+	if (nodeid+1 > numnodes) 
+		numnodes = nodeid + 1;
 	nodes_present |= (1UL << nodeid); 
 } 
 
