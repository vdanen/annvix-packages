diff -urNp --exclude-from=/home/mitica/quintela/config/misc/dontdiff --exclude='defconfig*' --exclude='log.*' --exclude='log2?' w2/drivers/usb/serial/safe_serial.c w1/drivers/usb/serial/safe_serial.c
--- w2/drivers/usb/serial/safe_serial.c	2003-08-20 19:13:48.000000000 +0200
+++ w1/drivers/usb/serial/safe_serial.c	2003-08-20 14:41:46.000000000 +0200
@@ -215,12 +215,13 @@ static void safe_read_bulk_callback (str
         //printk(KERN_DEBUG"safe_read_bulk_callback:\n");
 
         if (!serial) {
-                dbg(__FUNCTION__ " - bad serial pointer, exiting");
+                dbg("%s - bad serial pointer, exiting", __FUNCTION__);
                 return;
         }
 
         if (urb->status) {
-                dbg(__FUNCTION__ " - nonzero read bulk status received: %d", urb->status);
+                dbg("%s - nonzero read bulk status received: %d", 
+		    __FUNCTION__, urb->status);
                 return;
         }
 
@@ -246,7 +247,8 @@ static void safe_read_bulk_callback (str
 
                         if (actual_length <= (length - 2)) {
 
-                                info(__FUNCTION__ " - actual: %d", actual_length);
+                                info("%s - actual: %d", __FUNCTION__, 
+				     actual_length);
 
                                 for (i = 0; i < actual_length; i++) {
                                         tty_insert_flip_char(port->tty, data[i], 0);
@@ -254,11 +256,12 @@ static void safe_read_bulk_callback (str
                                 tty_flip_buffer_push(port->tty);
                         }
                         else {
-                                err(__FUNCTION__ " - inconsistant lengths %d:%d", actual_length, length);
+                                err("%s - inconsistant lengths %d:%d",
+				    __FUNCTION__, actual_length, length);
                         }
                 }
                 else {
-                        err(__FUNCTION__ " - bad CRC %x", fcs);
+                        err("%s - bad CRC %x", __FUNCTION__, fcs);
                 }
         }
         else {
@@ -275,7 +278,8 @@ static void safe_read_bulk_callback (str
                         safe_read_bulk_callback, port);
 
         if ((result = usb_submit_urb(urb))) {
-                err(__FUNCTION__ " - failed resubmitting read urb, error %d", result);
+                err("%s - failed resubmitting read urb, error %d",
+		    __FUNCTION__, result);
         }
 }
 
@@ -283,7 +287,7 @@ static int safe_write (struct usb_serial
 {
         struct usb_serial 	*serial	= port->serial;
         unsigned char 		*data;
-        unsigned long		flags;
+//        unsigned long		flags;
         int			result;
         int                     i;
         int                     packet_length;
@@ -293,22 +297,22 @@ static int safe_write (struct usb_serial
         dbg("safe_write port: %p %d urb: %p count: %d", port,  port->number, port->write_urb, count);
 
         if (!port->write_urb) {
-                dbg(__FUNCTION__" - write urb NULL");
+                dbg("%s - write urb NULL", __FUNCTION__);
                 return (0);
         }
 
 	dbg("safe_write write_urb: %d transfer_buffer_length", port->write_urb->transfer_buffer_length);
 
         if (!port->write_urb->transfer_buffer_length) {
-		dbg(__FUNCTION__" - write urb transfer_buffer_length zero");
+		dbg("%s - write urb transfer_buffer_length zero", __FUNCTION__);
 		return (0);
         }
 	if (count == 0) {
-		dbg(__FUNCTION__" - write request of 0 bytes");
+		dbg("%s - write request of 0 bytes", __FUNCTION__);
 		return (0);
 	}
 	if (port->write_urb->status == -EINPROGRESS) {
-		dbg (__FUNCTION__" - already writing");
+		dbg ("%s - already writing", __FUNCTION__);
 		return (0);
 	}
 
@@ -371,11 +375,12 @@ static int safe_write (struct usb_serial
 #endif
         port->write_urb->dev = serial->dev;
         if ((result = usb_submit_urb(port->write_urb))) {
-                err(__FUNCTION__ " - failed submitting write urb, error %d", result);
+                err("%s - failed submitting write urb, error %d",
+		    __FUNCTION__, result);
                 //spin_unlock_irqrestore (&port->port_lock, flags);
                 return 0;
         }
-        dbg(__FUNCTION__ " urb: %p submitted", port->write_urb);
+        dbg("%s urb: %p submitted", __FUNCTION__, port->write_urb);
 
         //spin_unlock_irqrestore (&port->port_lock, flags);
         return (count);
@@ -384,9 +389,7 @@ static int safe_write (struct usb_serial
 
 static int safe_write_room (struct usb_serial_port *port)
 {
-        struct usb_serial 	*serial = port->serial;
-
         int room = 0; // Default: no room
 
         //printk(KERN_DEBUG"safe_write_room:\n");
 
