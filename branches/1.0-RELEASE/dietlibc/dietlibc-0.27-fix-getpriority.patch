--- dietlibc-0.27/lib/c-getpriority.c.fix-getpriority	2005-01-18 09:54:40.708192784 -0500
+++ dietlibc-0.27/lib/c-getpriority.c	2005-01-18 09:53:55.592091896 -0500
@@ -0,0 +1,38 @@
+/* getpriority for Linux.
+   Copyright (C) 1996,98,2000,02,03 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+/* The return value of getpriority syscall is biased by this value
+   to avoid returning negative values.  */
+#define PZERO 20
+
+/* Return the highest priority of any process specified by WHICH and WHO
+   (see above); if WHO is zero, the current process, process group, or user
+   (as specified by WHO) is used.  A lower priority number means higher
+   priority.  Priorities range from PRIO_MIN to PRIO_MAX.  */
+
+extern int __syscall_getpriority (int which, int who);
+
+int
+getpriority (int which, int who)
+{
+  int res = __syscall_getpriority (which, who);
+  if (res >= 0)
+    res = PZERO - res;
+  return res;
+}
--- dietlibc-0.27/syscalls.s/getpriority.S.fix-getpriority	2001-01-25 07:48:03.000000000 -0500
+++ dietlibc-0.27/syscalls.s/getpriority.S	2005-01-18 09:50:51.609978747 -0500
@@ -1,3 +1,3 @@
 #include "syscalls.h"
 
-syscall(getpriority,getpriority)
+syscall(getpriority,__syscall_getpriority)
