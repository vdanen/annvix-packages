
Remove installed/not-installed detection code.

--- apr-util-0.9.4/apu-config.in.config
+++ apr-util-0.9.4/apu-config.in
@@ -70,8 +70,6 @@
 
 APRUTIL_LIBNAME="@APRUTIL_LIBNAME@"
 
-APU_SOURCE_DIR="@abs_srcdir@"
-APU_BUILD_DIR="@abs_builddir@"
 APR_XML_EXPAT_OLD="@APR_XML_EXPAT_OLD@"
 APU_DB_VERSION="@apu_db_version@"
 
@@ -111,42 +109,7 @@
     exit 1
 fi
 
-thisdir="`dirname $0`"
-thisdir="`cd $thisdir && pwd`"
-if test -d $bindir; then
-    tmpbindir="`cd $bindir && pwd`"
-else
-    tmpbindir=""
-fi
-# If we have the realpath program, use it to resolve symlinks.
-# Otherwise, being in a symlinked dir may result in incorrect output.
-if test -x "`which realpath 2>/dev/null`"; then
-    thisdir="`realpath $thisdir`"
-    if test -d "$APU_SOURCE_DIR"; then
-        APU_SOURCE_DIR="`realpath $APU_SOURCE_DIR`"
-    fi
-    if test -n "$tmpbindir"; then
-        tmpbindir="`realpath $tmpbindir`"
-    fi
-fi
-if test "$tmpbindir" = "$thisdir"; then
-    location=installed
-elif test "$APU_SOURCE_DIR" = "$thisdir"; then
-    location=source
-else
-    location=build
-fi
-
-if test "$location" = "installed"; then
-    LA_FILE="$libdir/lib${APRUTIL_LIBNAME}.la"
-
-    LIBS=`echo "$LIBS" | sed -e "s $APU_BUILD_DIR/xml/expat $prefix g" -e "s $prefix/lib/libexpat.la -lexpat g"`
-    LDFLAGS=`echo "$LDFLAGS" | sed -e "s $APU_BUILD_DIR/xml/expat $prefix g"`
-    INCLUDES=`echo "$INCLUDES" | sed -e "s $APU_BUILD_DIR/xml/expat $prefix g" -e "s -I$prefix/lib  g"`
-else
-    LA_FILE="$thisdir/lib${APRUTIL_LIBNAME}.la"
-fi
-
+LA_FILE="${libdir}/lib${APRUTIL_LIBNAME}.la"
 flags=""
 
 while test $# -gt 0; do
@@ -173,32 +136,18 @@
     flags="$flags $LIBS"
     ;;
     --includedir)
-    if test "$location" = "installed"; then
-        flags="$includedir"
-    elif test "$location" = "source"; then
-        flags="$APU_SOURCE_DIR/include"
-    else
-        # this is for VPATH builds
-        flags="$thisdir/include $APU_SOURCE_DIR/include"
-    fi
-    echo $flags
+    echo $includedir
     exit 0
     ;;
     --includes)
-    if test "$location" = "installed"; then
-        flags="$flags -I$includedir $INCLUDES"
-    elif test "$location" = "source"; then
-        flags="$flags -I$APU_SOURCE_DIR/include $INCLUDES"
-    else
-        # this is for VPATH builds
-        flags="$flags -I$thisdir/include -I$APU_SOURCE_DIR/include $INCLUDES"
-    fi
+    flags="$flags -I$includedir $INCLUDES"
     ;;
     --ldflags)
     flags="$flags $LDFLAGS"
     ;;
     --srcdir)
-    echo $APU_SOURCE_DIR
+    # Lie - nobody should care about this.
+    echo ${libdir}/apr 
     exit 0
     ;;
     --version)
@@ -206,31 +155,13 @@
     exit 0
     ;;
     --link-ld)
-    if test "$location" = "installed"; then
-        ### avoid using -L if libdir is a "standard" location like /usr/lib
-        flags="$flags -L$libdir -l$APRUTIL_LIBNAME"
-    else
-        flags="$flags -L$thisdir -l$APRUTIL_LIBNAME"
-    fi
+    flags="$flags -l$APRUTIL_LIBNAME"
     ;;
     --link-libtool)
-    # If the LA_FILE exists where we think it should be, use it.  If we're
-    # installed and the LA_FILE does not exist, assume to use -L/-l
-    # (the LA_FILE may not have been installed).  If we're building ourselves,
-    # we'll assume that at some point the .la file be created.
-    if test -f "$LA_FILE"; then
-        flags="$flags $LA_FILE"
-    elif test "$location" = "installed"; then
-        ### avoid using -L if libdir is a "standard" location like /usr/lib
-        flags="$flags -L$libdir -l$APRUTIL_LIBNAME"
-    else
-        flags="$flags $LA_FILE"
-    fi
+    flags="$flags $LA_FILE"
     ;;
     --apu-la-file)
-    if test -f "$LA_FILE"; then
-        flags="$flags $LA_FILE"
-    fi
+    flags="$flags $LA_FILE"
     ;;
     --old-expat)
     if test ! -n "$APR_XML_EXPAT_OLD"; then
