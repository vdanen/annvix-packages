diff -urN --exclude-from=/home/mitica/quintela/work/kernel/exclude linux/drivers/input/joydev.c work/drivers/input/joydev.c
--- linux/drivers/input/joydev.c	Thu Apr 12 04:02:30 2001
+++ work/drivers/input/joydev.c	Wed Jun  6 21:47:21 2001
@@ -1,5 +1,5 @@
 /*
- * $Id: joydev.c,v 1.19 2001/01/10 19:49:40 vojtech Exp $
+ * $Id: joydev.c,v 1.22 2001/06/02 23:10:38 jdeneux Exp $
  *
  *  Copyright (c) 1999-2000 Vojtech Pavlik 
  *  Copyright (c) 1999 Colin Van Dyke 
@@ -413,7 +413,8 @@
 	int i, j, minor;
 
 	if (!(test_bit(EV_KEY, dev->evbit) && test_bit(EV_ABS, dev->evbit) &&
-	     (test_bit(ABS_X, dev->absbit) || test_bit(ABS_Y, dev->absbit)) &&
+	     (test_bit(ABS_X, dev->absbit) || test_bit(ABS_Y, dev->absbit)
+		|| test_bit(ABS_WHEEL, dev->absbit)) &&
 	     (test_bit(BTN_TRIGGER, dev->keybit) || test_bit(BTN_A, dev->keybit)
 		|| test_bit(BTN_1, dev->keybit)))) return NULL; 
 
--- linux/drivers/char/joystick/iforce.c	Wed Jun 13 21:01:05 2001
+++ linux/drivers/char/joystick/iforce.c	Wed Jun 13 20:06:00 2001
@@ -1,5 +1,5 @@
 /*
- * $Id: iforce.c,v 1.56 2001/05/27 14:41:26 jdeneux Exp $
+ * $Id: iforce.c,v 1.61 2001/06/06 20:22:04 jdeneux Exp $
  *
  *  Copyright (c) 2000-2001 Vojtech Pavlik <vojtech@suse.cz>
  *  Copyright (c) 2001 Johann Deneux <deneux@ifrance.com>
@@ -106,6 +106,8 @@
 	signed short *ff;
 } iforce_device[] = {
 	{ 0x046d, 0xc281, "Logitech WingMan Force",			btn_joystick, abs_joystick, ff_iforce },
+	{ 0x046d, 0xc283, "Logitech WingMan Force 3D",			btn_joystick, abs_joystick, ff_iforce },
+	{ 0x046d, 0xc285, "Logitech WingMan Strike Force 3D",		btn_joystick, abs_joystick, ff_iforce },
 	{ 0x046d, 0xc291, "Logitech WingMan Formula Force",		btn_wheel, abs_wheel, ff_iforce },
 	{ 0x05ef, 0x020a, "AVB Top Shot Pegasus",			btn_joystick, abs_joystick, ff_iforce },
 	{ 0x05ef, 0x8884, "AVB Mag Turbo Force",			btn_wheel, abs_wheel, ff_iforce },
@@ -153,6 +155,9 @@
 /* Encode a time value */
 #define TIME_SCALE(a)	((a) == 0xffff ? 0xffff : (a) * 1000 / 256)
 
+/* Forward declaration */
+static int iforce_erase_effect(struct input_dev *dev, int effect_id);
+
 static void dump_packet(char *msg, u16 cmd, unsigned char *data)
 {
 	int i;
@@ -349,12 +354,28 @@
 			break;
 #endif
 	}
+
+	/* Reset device */
+	send_packet(iforce, FF_CMD_ENABLE, "\004");
+
 	return 0;
 }
 
 static void iforce_close(struct input_dev *dev)
 {
 	struct iforce *iforce = dev->private;
+	int i;
+
+	/* Disable force feedback playback */
+	send_packet(iforce, FF_CMD_ENABLE, "\001");
+
+	/* Erase all effects */
+	for (i=0; i<dev->ff_effects_max; ++i) {
+		if (test_bit(FF_CORE_IS_USED, iforce->core_effects[i].flags) && iforce_erase_effect(dev, i)) {
+			printk(KERN_WARNING "input%d: iforce_close: erase effect %d failed\n",
+				dev->number, i);
+		}
+	}
 
 	switch (iforce->bus) {
 #ifdef IFORCE_USB
@@ -894,6 +915,13 @@
 	if (!get_id_packet(iforce, "N"))
 		iforce->dev.ff_effects_max = iforce->edata[1];
 
+	/* Check if the device can store more effects than the driver can really handle */
+	if (iforce->dev.ff_effects_max > FF_EFFECTS_MAX) {
+		printk(KERN_WARNING "input??: Device can handle %d effects, but N_EFFECTS_MAX is set to %d in iforce.c\n",
+			iforce->dev.ff_effects_max, FF_EFFECTS_MAX);
+		iforce->dev.ff_effects_max = FF_EFFECTS_MAX;
+	}
+
 /*
  * Display additional info.
  */
@@ -908,7 +936,6 @@
  */
 
 	send_packet(iforce, FF_CMD_AUTOCENTER, "\004\000");
-	send_packet(iforce, FF_CMD_ENABLE, "\004");
 
 /*
  * Find appropriate device entry
@@ -1061,6 +1088,8 @@
 
 static struct usb_device_id iforce_usb_ids [] = {
 	{ USB_DEVICE(0x046d, 0xc281) },		/* Logitech WingMan Force */
+	{ USB_DEVICE(0x046d, 0xc283) },		/* Logitech WingMan Force 3D */
+	{ USB_DEVICE(0x046d, 0xc285) },		/* Logitech WingMan Strike Force 3D */
 	{ USB_DEVICE(0x046d, 0xc291) },		/* Logitech WingMan Formula Force */
 	{ USB_DEVICE(0x05ef, 0x020a) },		/* AVB Top Shot Pegasus */
 	{ USB_DEVICE(0x05ef, 0x8884) },		/* AVB Mag Turbo Force */
