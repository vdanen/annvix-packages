diff -Nurp -X /Data/dontdiff old/drivers/media/video/Makefile patched/drivers/media/video/Makefile
--- old/drivers/media/video/Makefile	2003-08-11 15:08:52.000000000 +0300
+++ patched/drivers/media/video/Makefile	2003-08-13 19:52:17.000000000 +0300
@@ -27,14 +27,14 @@ O_TARGET := video.o
 
 export-objs     :=	i2c-old.o videodev.o bttv-if.o cpia.o btcx-risc.o \
 			v4l2-common.o v4l1-compat.o video-buf.o \
-			cx88-cards.o cx88-core.o
+			cx88-cards.o cx88-core.o saa7134-gpio.o
 
 list-multi	:=	bttv.o zoran.o saa7134.o cx88xx.o cx8800.o
 bttv-objs	:=	bttv-driver.o bttv-cards.o bttv-if.o
 zoran-objs      :=	zr36120.o zr36120_i2c.o zr36120_mem.o
 saa7134-objs	:=	saa7134-core.o saa7134-i2c.o saa7134-video.o \
 			saa7134-vbi.o saa7134-tvaudio.o saa7134-oss.o \
-			saa7134-cards.o saa7134-ts.o
+			saa7134-cards.o saa7134-ts.o saa7134-gpio.o
 cx88xx-objs	:=	cx88-cards.o cx88-core.o btcx-risc.o
 cx8800-objs	:=	cx88-video.o cx88-tvaudio.o cx88-i2c.o
 
diff -Nurp -X /Data/dontdiff old/drivers/media/video/saa7134-core.c patched/drivers/media/video/saa7134-core.c
--- old/drivers/media/video/saa7134-core.c	2003-08-11 15:08:52.000000000 +0300
+++ patched/drivers/media/video/saa7134-core.c	2003-08-13 19:52:17.000000000 +0300
@@ -521,7 +521,8 @@ int saa7134_set_dmabits(struct saa7134_d
 static char *irqbits[] = {
 	"DONE_RA0", "DONE_RA1", "DONE_RA2", "DONE_RA3",
 	"AR", "PE", "PWR_ON", "RDCAP", "INTL", "FIDT", "MMC",
-	"TRIG_ERR", "CONF_ERR", "LOAD_ERR"
+	"TRIG_ERR", "CONF_ERR", "LOAD_ERR", "GPIO16?", "GPIO18",
+	"GPIO22", "GPIO23"
 };
 #define IRQBITS ARRAY_SIZE(irqbits)
 
@@ -589,6 +590,10 @@ static void saa7134_irq(int irq, void *d
 		if ((report & SAA7134_IRQ_REPORT_DONE_RA3))
 			saa7134_irq_oss_done(dev,status);
 
+		if ((report & SAA7134_IRQ_REPORT_GPIO16) ||
+		    (report & SAA7134_IRQ_REPORT_GPIO18))
+			wake_up(&dev->gpio_wq);
+
 	};
 	if (10 == loop) {
 		print_irqstatus(dev,loop,report,status);
@@ -886,6 +891,10 @@ static void __devexit saa7134_finidev(st
 	saa7134_tvaudio_fini(dev);
 	saa7134_i2c_unregister(dev);
 
+	/* warn gpio programs of shutdown */
+	dev->shutdown=1;
+	wake_up(&dev->gpio_wq);
+
 	/* release ressources */
 	free_irq(pci_dev->irq, dev);
 	release_mem_region(pci_resource_start(pci_dev,0),
diff -Nurp -X /Data/dontdiff old/drivers/media/video/saa7134-gpio.c patched/drivers/media/video/saa7134-gpio.c
--- old/drivers/media/video/saa7134-gpio.c	1970-01-01 02:00:00.000000000 +0200
+++ patched/drivers/media/video/saa7134-gpio.c	2003-08-13 19:52:17.000000000 +0300
@@ -0,0 +1,115 @@
+/*
+ * device driver for philips saa7134 based TV cards
+ * gpio interface support
+ *
+ * By David Atkinson <px-gpio'AT'psykax.com>
+ *
+ * Based on bttv-if.c (part of bttv - bt848 frame grabber driver)
+ * Copyright (C) 1996,97,98 Ralph  Metzler (rjkm@thp.uni-koeln.de)
+ *                        & Marcus Metzler (mocm@thp.uni-koeln.de)
+ * (c) 1999-2003 Gerd Knorr <kraxel@bytesex.org>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#include <linux/init.h>
+#include <linux/list.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+
+#include "saa7134-reg.h"
+#include "saa7134.h"
+
+EXPORT_SYMBOL(saa7134_get_cardinfo);
+EXPORT_SYMBOL(saa7134_get_pcidev);
+EXPORT_SYMBOL(saa7134_read_gpio);
+EXPORT_SYMBOL(saa7134_write_gpio);
+EXPORT_SYMBOL(saa7134_get_gpio_queue);
+
+struct saa7134_dev* get_device(unsigned int card)
+{
+	/* Gets a pointer to a saa7134_dev struct from a card index */
+
+	unsigned int list_count = 0;
+	struct list_head* list_ptr;
+
+	list_for_each(list_ptr, &saa7134_devlist) {
+		if(list_count == card) break;
+		list_count ++;
+	}
+
+	if(list_ptr == &saa7134_devlist) {
+		return NULL;
+	}
+
+	return list_entry(list_ptr, struct saa7134_dev, devlist);
+}
+
+int saa7134_get_cardinfo(unsigned int card, unsigned int *board, unsigned int *reserved)
+{
+	struct saa7134_dev* dev;
+	dev = get_device(card);
+	if(dev == NULL) return -1;
+
+	*board  = dev->board;
+	*reserved = 0; /* reserved is for possible future use in board identification */
+
+	return 0;
+}
+
+struct pci_dev* saa7134_get_pcidev(unsigned int card)
+{
+	struct saa7134_dev* dev;
+	dev = get_device(card);
+	if(dev == NULL) return NULL;
+
+	return dev->pci;
+}
+
+int saa7134_read_gpio(unsigned int card, unsigned long *data)
+{
+	struct saa7134_dev* dev;
+	dev = get_device(card);
+	if(dev == NULL) return -EINVAL;
+	if(dev->shutdown) return -ENODEV;
+
+	/* rising SAA7134_GPIO_GPRESCAN reads the status */
+	saa_andorb(SAA7134_GPIO_GPMODE3,SAA7134_GPIO_GPRESCAN,0);
+	saa_andorb(SAA7134_GPIO_GPMODE3,SAA7134_GPIO_GPRESCAN,SAA7134_GPIO_GPRESCAN);
+	*data = saa_readl(SAA7134_GPIO_GPSTATUS0 >> 2) & 0xfffffff;
+	return 0;
+}
+
+int saa7134_write_gpio(unsigned int card, unsigned long mask, unsigned long data)
+{
+	struct saa7134_dev* dev;
+	dev = get_device(card);
+	if(dev == NULL) return -EINVAL;
+
+	saa_andorl(SAA7134_GPIO_GPSTATUS0 >> 2, mask, data);
+	if (gpio_tracking) saa7134_track_gpio(dev,"extern write");
+
+	return 0;
+}
+
+wait_queue_head_t* saa7134_get_gpio_queue(unsigned int card)
+{
+	struct saa7134_dev* dev;
+	dev = get_device(card);
+	if(dev == NULL) return NULL;
+	if(dev->shutdown) return NULL;
+
+	return &dev->gpio_wq;
+}
diff -Nurp -X /Data/dontdiff old/drivers/media/video/saa7134.h patched/drivers/media/video/saa7134.h
--- old/drivers/media/video/saa7134.h	2003-08-11 17:03:50.000000000 +0300
+++ patched/drivers/media/video/saa7134.h	2003-08-13 19:52:17.000000000 +0300
@@ -328,6 +328,10 @@ struct saa7134_dev {
 	struct i2c_client          i2c_client;
 	unsigned char              eedata[64];
 
+	/* gpio irq */
+	wait_queue_head_t          gpio_wq;
+	int                        shutdown;
+
 	/* video overlay */
 	struct v4l2_framebuffer    ovbuf;
 	struct saa7134_format      *ovfmt;
@@ -389,6 +393,7 @@ struct saa7134_dev {
 
 extern struct list_head  saa7134_devlist;
 extern unsigned int      saa7134_devcount;
+extern unsigned int      gpio_tracking;
 
 void saa7134_print_ioctl(char *name, unsigned int cmd);
 void saa7134_track_gpio(struct saa7134_dev *dev, char *msg);
@@ -492,6 +497,14 @@ int saa7134_oss_init(struct saa7134_dev 
 int saa7134_oss_fini(struct saa7134_dev *dev);
 void saa7134_irq_oss_done(struct saa7134_dev *dev, unsigned long status);
 
+/* ----------------------------------------------------------- */
+/* saa7134-gpio.c                                              */
+
+int saa7134_get_cardinfo(unsigned int card, unsigned int *board, unsigned int *reserved);
+struct pci_dev* saa7134_get_pcidev(unsigned int card);
+int saa7134_read_gpio(unsigned int card, unsigned long *data);
+int saa7134_write_gpio(unsigned int card, unsigned long mask, unsigned long data);
+wait_queue_head_t* saa7134_get_gpio_queue(unsigned int card);
 
 /*
  * Local variables:
diff -Nurp -X /Data/dontdiff old/drivers/media/video/saa7134-reg.h patched/drivers/media/video/saa7134-reg.h
--- old/drivers/media/video/saa7134-reg.h	2003-08-11 15:08:52.000000000 +0300
+++ patched/drivers/media/video/saa7134-reg.h	2003-08-13 19:52:17.000000000 +0300
@@ -102,6 +102,15 @@
 #define   SAA7134_IRQ1_INTE_RA0_1               (1 <<  1)
 #define   SAA7134_IRQ1_INTE_RA0_0               (1 <<  0)
 #define SAA7134_IRQ2                            (0x2c8 >> 2)
+
+#define   SAA7134_IRQ2_INTE_GPIO23A             (1 << 17)
+#define   SAA7134_IRQ2_INTE_GPIO23              (1 << 16)
+#define   SAA7134_IRQ2_INTE_GPIO22A             (1 << 15)
+#define   SAA7134_IRQ2_INTE_GPIO22              (1 << 14)
+#define   SAA7134_IRQ2_INTE_GPIO18A             (1 << 13)
+#define   SAA7134_IRQ2_INTE_GPIO18              (1 << 12)
+#define   SAA7134_IRQ2_INTE_GPIO16              (1 << 11) /* not certain */
+
 #define   SAA7134_IRQ2_INTE_SC2                 (1 << 10)
 #define   SAA7134_IRQ2_INTE_SC1                 (1 <<  9)
 #define   SAA7134_IRQ2_INTE_SC0                 (1 <<  8)
@@ -114,6 +123,12 @@
 #define   SAA7134_IRQ2_INTE_PE                  (1 <<  1)
 #define   SAA7134_IRQ2_INTE_AR                  (1 <<  0)
 #define SAA7134_IRQ_REPORT                      (0x2cc >> 2)
+
+#define   SAA7134_IRQ_REPORT_GPIO23             (1 << 17)
+#define   SAA7134_IRQ_REPORT_GPIO22             (1 << 16)
+#define   SAA7134_IRQ_REPORT_GPIO18             (1 << 15)
+#define   SAA7134_IRQ_REPORT_GPIO16             (1 << 14) /* not certain */
+
 #define   SAA7134_IRQ_REPORT_LOAD_ERR           (1 << 13)
 #define   SAA7134_IRQ_REPORT_CONF_ERR           (1 << 12)
 #define   SAA7134_IRQ_REPORT_TRIG_ERR           (1 << 11)
