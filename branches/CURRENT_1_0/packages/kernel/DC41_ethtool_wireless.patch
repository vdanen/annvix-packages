--- linux-2.4.20/include/linux/wireless.h.chmou	2003-01-22 12:35:15.000000000 +0100
+++ linux-2.4.20/include/linux/wireless.h	2003-01-22 13:28:00.000000000 +0100
@@ -72,6 +72,7 @@
 #include <linux/types.h>		/* for "caddr_t" et al		*/
 #include <linux/socket.h>		/* for "struct sockaddr" et al	*/
 #include <linux/if.h>			/* for IFNAMSIZ and co... */
+#include <linux/ethtool.h>
 
 /***************************** VERSION *****************************/
 /*
--- linux-2.4.20/drivers/net/wireless/airo.c.chmou	2002-11-29 00:53:14.000000000 +0100
+++ linux-2.4.20/drivers/net/wireless/airo.c	2003-01-22 13:28:00.000000000 +0100
@@ -4061,6 +4061,29 @@
 	remove_proc_entry("aironet", proc_root_driver);
 }
 
+static int netdev_ethtool_ioctl(struct net_device *dev, void *useraddr)
+{
+	u32 ethcmd;
+		
+	if (copy_from_user(&ethcmd, useraddr, sizeof(ethcmd)))
+		return -EFAULT;
+	
+        switch (ethcmd) {
+	case ETHTOOL_GDRVINFO: {
+		struct ethtool_drvinfo info = {ETHTOOL_GDRVINFO};
+		strncpy(info.driver, "airo", sizeof(info.driver)-1);
+		strncpy(info.version, version, sizeof(info.version)-1);
+		if (copy_to_user(useraddr, &info, sizeof(info)))
+			return -EFAULT;
+		return 0;
+	}
+	
+        }
+	
+	return -EOPNOTSUPP;
+}
+
+
 #ifdef WIRELESS_EXT
 /*
  * Initial Wireless Extension code for Aironet driver by :
@@ -5832,6 +5855,10 @@
 	break;
 #endif /* CISCO_EXT */
 
+	case SIOCETHTOOL:
+	      return netdev_ethtool_ioctl(dev, (void *) rq->ifr_data);
+	                
+
 	// All other calls are currently unsupported
 	default:
 		rc = -EOPNOTSUPP;
--- linux-2.4.20/drivers/net/wireless/orinoco.c.chmou	2002-08-03 02:39:44.000000000 +0200
+++ linux-2.4.20/drivers/net/wireless/orinoco.c	2003-01-22 13:28:00.000000000 +0100
@@ -3121,6 +3121,28 @@
 	return 0;
 }
 
+static int netdev_ethtool_ioctl(struct net_device *dev, void *useraddr)
+{
+	u32 ethcmd;
+		
+	if (copy_from_user(&ethcmd, useraddr, sizeof(ethcmd)))
+		return -EFAULT;
+	
+        switch (ethcmd) {
+	case ETHTOOL_GDRVINFO: {
+		struct ethtool_drvinfo info = {ETHTOOL_GDRVINFO};
+		strncpy(info.driver, "orinoco_cs", sizeof(info.driver)-1);
+		strncpy(info.version, version, sizeof(info.version)-1);
+		if (copy_to_user(useraddr, &info, sizeof(info)))
+			return -EFAULT;
+		return 0;
+	}
+	
+        }
+	
+	return -EOPNOTSUPP;
+}
+
 static int
 orinoco_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
@@ -3479,7 +3501,9 @@
 		      dev->name);
 		err = orinoco_ioctl_getibssport(dev, wrq);
 		break;
-
+	case SIOCETHTOOL:
+		return netdev_ethtool_ioctl(dev, (void *) rq->ifr_data);
+	                
 
 	default:
 		err = -EOPNOTSUPP;
