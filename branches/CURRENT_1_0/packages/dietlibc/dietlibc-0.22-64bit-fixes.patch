--- dietlibc/include/netinet/in.h.64bit-fixes	2003-04-02 12:25:23.000000000 +0200
+++ dietlibc/include/netinet/in.h	2003-08-19 09:15:56.000000000 +0200
@@ -354,10 +354,10 @@ struct ipv6hdr {
 #undef htons
 #undef ntohl
 #undef ntohs
-unsigned long int htonl(unsigned long int hostlong);
-unsigned short int htons(unsigned short int hostshort);
-unsigned long int ntohl(unsigned long int netlong);
-unsigned short int ntohs(unsigned short int netshort);
+uint32_t htonl(uint32_t hostlong);
+uint16_t htons(uint16_t hostshort);
+uint32_t ntohl(uint32_t netlong);
+uint16_t ntohs(uint16_t netshort);
 
 #define IN6_IS_ADDR_UNSPECIFIED(a) \
 	(((__const uint32_t *) (a))[0] == 0				      \
--- dietlibc/lib/htonl.c.64bit-fixes	2002-02-23 23:18:42.000000000 +0100
+++ dietlibc/lib/htonl.c	2003-08-19 09:16:19.000000000 +0200
@@ -1,7 +1,7 @@
 #include <endian.h>
 #include <netinet/in.h>
 
-unsigned long int htonl(unsigned long int hostlong) {
+uint32_t htonl(uint32_t hostlong) {
 #if __BYTE_ORDER==__LITTLE_ENDIAN
   return (hostlong>>24) | ((hostlong&0xff0000)>>8) |
 	  ((hostlong&0xff00)<<8) | (hostlong<<24);
@@ -10,4 +10,4 @@ unsigned long int htonl(unsigned long in
 #endif
 }
 
-unsigned long int ntohl(unsigned long int hostlong) __attribute__((weak,alias("htonl")));
+uint32_t ntohl(uint32_t hostlong) __attribute__((weak,alias("htonl")));
--- dietlibc/lib/htons.c.64bit-fixes	2002-02-23 23:18:42.000000000 +0100
+++ dietlibc/lib/htons.c	2003-08-19 09:16:07.000000000 +0200
@@ -1,7 +1,7 @@
 #include <endian.h>
 #include <netinet/in.h>
 
-unsigned short int htons(unsigned short int hostshort) {
+uint16_t htons(uint16_t hostshort) {
 #if __BYTE_ORDER==__LITTLE_ENDIAN
   return ((hostshort>>8)&0xff) | (hostshort<<8);
 #else
@@ -9,4 +9,4 @@ unsigned short int htons(unsigned short 
 #endif
 }
 
-unsigned short int ntohs(unsigned short int hostshort) __attribute__((weak,alias("htons")));
+uint16_t ntohs(uint16_t hostshort) __attribute__((weak,alias("htons")));
