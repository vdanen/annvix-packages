#!/bin/sh
#
# nfslock       This shell script takes care of starting and stopping
#               the NFS file locking service.
#
# chkconfig: 345 14 86
# description: NFS is a popular protocol for file sharing across \
#	       TCP/IP networks. This service provides NFS file \
#	       locking functionality.
# probe: true

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
if [ ! -f /etc/sysconfig/network ]; then
    exit 0
fi

. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

[ -x /sbin/rpc.lockd ] || exit 0
[ -x /sbin/rpc.statd ] || exit 0

# Check for and source configuration file otherwise set defaults
[ -f /etc/sysconfig/nfs ] && . /etc/sysconfig/nfs

if [ -n "${STATD_HOSTNAME}" ]; then
    STATDARG="-n ${STATD_HOSTNAME}"
else
    STATDARG=""
fi

# See how we were called.
case "$1" in
  start)
	# Start daemons.
        echo -n $"Starting NFS lockd: "
	daemon rpc.lockd
	echo
	echo -n $"Starting NFS statd: "
	# See if a statd's ports has been defined
	[ -n "$STATD_PORT" ] && STATDARG="$STATDARG -p $STATD_PORT"
	[ -n "$STATD_OUTGOING_PORT" ] \
		&& STATDARG="$STATDARG -o $STATD_OUTGOING_PORT"
	daemon rpc.statd "$STATDARG"
	echo
	touch /var/lock/subsys/nfslock
	;;
  stop)
	# Stop daemons.
	echo $"Stopping NFS lockd: "
	pidlist=`pidofproc lockd`
	if [ -n "$pidlist" ]; then
		pid=
		for apid in $pidlist ; do
			[ -f /proc/$apid/exe ] && pid="$pid $apid"
		done
		if [ -n "$pid" ]; then
			echo -n "Shutting down NFS lockd: "
			killproc lockd
			echo
		fi
	fi
	echo -n $"Stopping NFS statd: "
	killproc rpc.statd
	echo
	rm -f /var/lock/subsys/nfslock
	;;
  status)
	status lockd
	status rpc.statd
	;;
  reload)
	;;
  restart)
	$0 stop || :
	$0 start
	;;
  probe)
	if [ ! -f /var/lock/subsys/nfslock ] ; then
	  echo start; exit 0
	fi
	/sbin/pidof rpc.statd >/dev/null 2>&1; STATD="$?"
	/sbin/pidof lockd >/dev/null 2>&1; LOCKD="$?"
	if [ $STATD = 1 -o $LOCKD = 1 ] ; then
	  echo restart; exit 0
	fi
	;;
  *)
	echo "Usage: $0 {start|stop|status|restart}"
	exit 1
esac

exit 0
