
Fix worker as per prefork to only kill number of RUNNING children
not number of children there ever were: otherwise worker parent
may hang on restarts.

--- httpd-2.0.48/server/mpm/worker/worker.c.workerhup
+++ httpd-2.0.48/server/mpm/worker/worker.c
@@ -1746,7 +1746,7 @@
          * (By "gracefully" we don't mean graceful in the same sense as 
          * "apachectl graceful" where we allow old connections to finish.)
          */
-        ap_mpm_pod_killpg(pod, ap_daemons_limit, FALSE);
+        ap_mpm_pod_killpg(pod, ap_max_daemons_limit, FALSE);
         ap_reclaim_child_processes(1);                /* Start with SIGTERM */
 
         if (!child_fatal) {
@@ -1784,7 +1784,7 @@
         ap_log_error(APLOG_MARK, APLOG_NOTICE, 0, ap_server_conf,
                      AP_SIG_GRACEFUL_STRING " received.  Doing graceful restart");
         /* wake up the children...time to die.  But we'll have more soon */
-        ap_mpm_pod_killpg(pod, ap_daemons_limit, TRUE);
+        ap_mpm_pod_killpg(pod, ap_max_daemons_limit, TRUE);
     
 
         /* This is mostly for debugging... so that we know what is still
@@ -1797,7 +1797,7 @@
          * and a SIGHUP, we may as well use the same signal, because some user
          * pthreads are stealing signals from us left and right.
          */
-        ap_mpm_pod_killpg(pod, ap_daemons_limit, FALSE);
+        ap_mpm_pod_killpg(pod, ap_max_daemons_limit, FALSE);
 
         ap_reclaim_child_processes(1);                /* Start with SIGTERM */
         ap_log_error(APLOG_MARK, APLOG_NOTICE, 0, ap_server_conf,
