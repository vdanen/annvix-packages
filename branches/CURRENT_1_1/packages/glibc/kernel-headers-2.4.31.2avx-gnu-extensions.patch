--- kernel-headers/asm-arm/types.h.kheaders-gnu-extensions	2003-12-17 21:58:04.000000000 -0500
+++ kernel-headers/asm-arm/types.h	2004-01-08 06:41:00.000000000 -0500
@@ -19,9 +19,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/asm-cris/types.h.kheaders-gnu-extensions	2003-12-17 21:58:57.000000000 -0500
+++ kernel-headers/asm-cris/types.h	2004-01-08 06:41:00.000000000 -0500
@@ -19,9 +19,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/asm-i386/types.h.kheaders-gnu-extensions	2003-12-17 21:58:57.000000000 -0500
+++ kernel-headers/asm-i386/types.h	2004-01-08 06:41:00.000000000 -0500
@@ -19,9 +19,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/asm-m68k/types.h.kheaders-gnu-extensions	2003-12-17 21:57:57.000000000 -0500
+++ kernel-headers/asm-m68k/types.h	2004-01-08 06:41:00.000000000 -0500
@@ -27,9 +27,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/asm-mips/types.h.kheaders-gnu-extensions	2003-12-17 21:58:07.000000000 -0500
+++ kernel-headers/asm-mips/types.h	2004-01-08 06:41:00.000000000 -0500
@@ -41,9 +41,9 @@ typedef unsigned long __u64;
 
 #else
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif
--- kernel-headers/asm-parisc/types.h.kheaders-gnu-extensions	2003-12-17 21:58:15.000000000 -0500
+++ kernel-headers/asm-parisc/types.h	2004-01-08 06:41:02.000000000 -0500
@@ -19,9 +19,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/asm-ppc/types.h.kheaders-gnu-extensions	2003-12-17 21:59:35.000000000 -0500
+++ kernel-headers/asm-ppc/types.h	2004-01-08 06:41:02.000000000 -0500
@@ -12,9 +12,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 typedef struct {
--- kernel-headers/asm-s390/types.h.kheaders-gnu-extensions	2003-12-17 21:58:50.000000000 -0500
+++ kernel-headers/asm-s390/types.h	2004-01-08 06:42:54.000000000 -0500
@@ -29,8 +29,8 @@ typedef unsigned int __u32;
 
 #ifndef __s390x__
 #if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 #else /* __s390x__ */
 typedef __signed__ long __s64;
--- kernel-headers/asm-sh/types.h.kheaders-gnu-extensions	2003-12-17 21:59:38.000000000 -0500
+++ kernel-headers/asm-sh/types.h	2004-01-08 06:41:02.000000000 -0500
@@ -19,9 +19,9 @@ typedef unsigned short __u16;
 typedef __signed__ int __s32;
 typedef unsigned int __u32;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef __signed__ long long __s64;
-typedef unsigned long long __u64;
+#if defined(__GNUC__)
+__extension__ typedef __signed__ long long __s64;
+__extension__ typedef unsigned long long __u64;
 #endif
 
 #endif /* __ASSEMBLY__ */
--- kernel-headers/linux/byteorder/swab.h.kheaders-gnu-extensions	2002-11-28 18:53:15.000000000 -0500
+++ kernel-headers/linux/byteorder/swab.h	2005-09-05 12:22:56.000000000 -0400
@@ -19,34 +19,34 @@
  * how U/UL/ULL map to __u16, __u32, __u64. At least not in a portable way.
  */
 #define ___swab16(x) \
-({ \
+(__extension__({ \
 	__u16 __x = (x); \
 	((__u16)( \
 		(((__u16)(__x) & (__u16)0x00ffU) << 8) | \
 		(((__u16)(__x) & (__u16)0xff00U) >> 8) )); \
-})
+}))
 
 #define ___swab24(x) \
-({ \
+(__extension__({ \ 
 	__u32 __x = (x); \
 	((__u32)( \
 		((__x & (__u32)0x000000ffUL) << 16) | \
 		 (__x & (__u32)0x0000ff00UL)        | \
 		((__x & (__u32)0x00ff0000UL) >> 16) )); \
-})
+}))
 
 #define ___swab32(x) \
-({ \
+(__extension__({ \ 
 	__u32 __x = (x); \
 	((__u32)( \
 		(((__u32)(__x) & (__u32)0x000000ffUL) << 24) | \
 		(((__u32)(__x) & (__u32)0x0000ff00UL) <<  8) | \
 		(((__u32)(__x) & (__u32)0x00ff0000UL) >>  8) | \
 		(((__u32)(__x) & (__u32)0xff000000UL) >> 24) )); \
-})
+}))
 
 #define ___swab64(x) \
-({ \
+(__extension__({ \ 
 	__u64 __x = (x); \
 	((__u64)( \
 		(__u64)(((__u64)(__x) & (__u64)0x00000000000000ffULL) << 56) | \
@@ -57,7 +57,7 @@
 		(__u64)(((__u64)(__x) & (__u64)0x0000ff0000000000ULL) >> 24) | \
 		(__u64)(((__u64)(__x) & (__u64)0x00ff000000000000ULL) >> 40) | \
 		(__u64)(((__u64)(__x) & (__u64)0xff00000000000000ULL) >> 56) )); \
-})
+}))
 
 #define ___constant_swab16(x) \
 	((__u16)( \
@@ -89,16 +89,16 @@
  * provide defaults when no architecture-specific optimization is detected
  */
 #ifndef __arch__swab16
-#  define __arch__swab16(x) ({ __u16 __tmp = (x) ; ___swab16(__tmp); })
+#  define __arch__swab16(x) (__extension__({ __u16 __tmp = (x) ; ___swab16(__tmp); }))
 #endif
 #ifndef __arch__swab24
-#  define __arch__swab24(x) ({ __u32 __tmp = (x) ; ___swab24(__tmp); })
+#  define __arch__swab24(x) (__extension__({ __u32 __tmp = (x) ; ___swab24(__tmp); }))
 #endif
 #ifndef __arch__swab32
-#  define __arch__swab32(x) ({ __u32 __tmp = (x) ; ___swab32(__tmp); })
+#  define __arch__swab32(x) (__extension__({ __u32 __tmp = (x) ; ___swab32(__tmp); }))
 #endif
 #ifndef __arch__swab64
-#  define __arch__swab64(x) ({ __u64 __tmp = (x) ; ___swab64(__tmp); })
+#  define __arch__swab64(x) (__extension__({ __u64 __tmp = (x) ; ___swab64(__tmp); }))
 #endif
 
 #ifndef __arch__swab16p
--- kernel-headers/linux/byteorder/swabb.h.kheaders-gnu-extensions	2003-12-17 21:58:38.000000000 -0500
+++ kernel-headers/linux/byteorder/swabb.h	2004-01-08 06:41:00.000000000 -0500
@@ -26,19 +26,19 @@
  */
 
 #define ___swahw32(x) \
-({ \
+(__extension__({ \
 	__u32 __x = (x); \
 	((__u32)( \
 		(((__u32)(__x) & (__u32)0x0000ffffUL) << 16) | \
 		(((__u32)(__x) & (__u32)0xffff0000UL) >> 16) )); \
-})
+}))
 #define ___swahb32(x) \
-({ \
+(__extension__({ \
 	__u32 __x = (x); \
 	((__u32)( \
 		(((__u32)(__x) & (__u32)0x00ff00ffUL) << 8) | \
 		(((__u32)(__x) & (__u32)0xff00ff00UL) >> 8) )); \
-})
+}))
 
 #define ___constant_swahw32(x) \
 	((__u32)( \
--- kernel-headers/linux/types.h.kheaders-gnu-extensions	2005-09-05 12:11:31.000000000 -0400
+++ kernel-headers/linux/types.h	2005-09-05 12:11:31.000000000 -0400
@@ -86,10 +86,10 @@
 typedef		__u16		uint16_t;
 typedef		__u32		uint32_t;
 
-#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
-typedef		__u64		uint64_t;
-typedef		__u64		u_int64_t;
-typedef		__s64		int64_t;
+#if defined(__GNUC__)
+__extension__ typedef		__u64		uint64_t;
+__extension__ typedef		__u64		u_int64_t;
+__extension__ typedef		__s64		int64_t;
 #endif
 
 #endif /* __KERNEL_STRICT_NAMES */
