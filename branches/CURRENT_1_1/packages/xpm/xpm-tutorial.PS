%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
%		/u k currentundercolorremoval exec def
		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 23 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Courier FMFONTDEFINE
3 0 /Courier-Oblique FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(T) 194.62 700 T
0 24 Q
(HE) 211.3 700 T
0 30 Q
(XPM) 250.79 700 T
(F) 319.94 700 T
0 24 Q
(ORMA) 338.27 700 T
(T) 404.03 700 T
72 649 540 658 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 653.89 541 653.89 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
0 24 Q
0 X
0 0 0 1 0 0 0 K
(AND) 230.13 668 T
0 30 Q
(L) 285.63 668 T
0 24 Q
(IBRAR) 302.31 668 T
(Y) 368.52 668 T
(A) 249.7 623 T
(T) 270.37 623 T
0 19.2 Q
(UT) 283.71 623 T
(ORIAL) 307.9 623 T
0 11 Q
(Arnaud Le Hors) 270.25 529.67 T
(January 1996) 275.6 516.67 T
0 16 Q
(I) 72 484.33 T
0 12.8 Q
(NTRODUCTION) 77.33 484.33 T
0 0 0 1 0 0 0 K
1 10 Q
0.18 (XPM stands for X PixMap. XPM encompasses both a format and a C library that can be used to save and retrieve X) 72 464.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.92 (pixmaps to and from various forms of storage. XPM fills a gap in the X Window System software which defines) 72 452.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.53 (only the XBM \050X BitMap\051 format for pixmaps that are 1-bit deep. As a result, XPM has become the de facto stan-) 72 440.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (dard in many commercial and non-commercial applications. Moreover, the use of XPM is going to increase because) 72 428.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.11 (Motif 2.0 includes the XPM library and because the Common Desktop Environment specifies that icons must be) 72 416.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.6 (stored in either XBM or XPM format. At this time, several vendors distribute the XPM library as contributed soft-) 72 404.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ware on the platforms they sell.) 72 392.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (This tutorial describes how to use XPM to create and manipulate icons in X applications.  We present several exam-) 72 374.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (ples that use XPM to solve common pixmap-related problems. This article covers version 3 of the XPM format and) 72 362.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(version 3.4 of the XPM library.) 72 350.33 T
0 0 0 1 0 0 0 K
0 14 Q
(T) 72 323.67 T
0 11.2 Q
(HE) 79.78 323.67 T
0 14 Q
(XPM) 98.21 323.67 T
(F) 130.48 323.67 T
0 11.2 Q
(ORMA) 139.04 323.67 T
(T) 169.73 323.67 T
0 0 0 1 0 0 0 K
1 10 Q
0.29 (While many image formats are available, the XPM format was designed to fit the special need of storing icons. The) 72 304.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(following points make icons different from regular images:) 72 292.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 274.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Icons are usually small.) 90 274.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 258.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.09 (Icons may need to be drawn differently depending on whether they are being displayed on a color or mono-) 90 258.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(chrome screen.) 90 246.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 230.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.95 (Icons may want to define symbolic colors, such as \322Foreground\323 and \322Background\323, that can be changed) 90 230.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(depending on the context in which the icons are used.) 90 218.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 202.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Icons can be of any shape, not just rectangular.) 90 202.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.25 (XPM is an ASCII format with a C syntax that allows you to include XPM files in C and C++ programs, which) 72 184.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (saves you the trouble of having to maintain and read separate files containing the definition. In addition, the ASCII) 72 172.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (format makes XPM portable and allows you to use any external compression program.  Using) 72 160.33 P
0 0 0 1 0 0 0 K
0 F
0.54 (gzip) 458.39 160.33 P
0 0 0 1 0 0 0 K
1 F
0.54 ( in this way can) 475.07 160.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (yield a better compression rate than the built-in GIF algorithm.  This feature also means that you can take advantage) 72 148.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of any new algorithms when they are developed.) 72 136.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (The XPM format allows you to define colors with various default values in order to specify how they should be allo-) 72 118.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.81 (cated.  Thus you can control how a color image is displayed on a monochrome screen, for instance. You can also) 72 106.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.22 (define symbolic names for colors so the default values can be overridden dynamically. This feature is especially) 72 94.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.08 (useful in the X environment where application resources can be customized by the user. For example, defining a) 72 82.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(2) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
0.97 (Background symbolic color name lets the user modify the background color of the icon at load time. In addition,) 72 713.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.65 (with XPM you can use the color None for \322transparent\323 pixels. Although the X Window System does not actually) 72 701.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.74 (provide such a feature, you can achieve this visual result in several ways.  Finally, the XPM format can store) 72 689.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.58 (hotspot coordinates. The XPM format can also store application-specific data, such as the coordinates of a connec-) 72 677.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion port, as an extension to the format.) 72 665.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.86 (An example of what you can do with XPM is store a red bullet icon in such a way that you can use, without any) 72 647.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.62 (duplication, the same file for building a green or blue bullet pixmap as well. With GIF you would need a different) 72 635.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(file for each color.) 72 623.33 T
0 0 0 1 0 0 0 K
0 14 Q
(T) 72 596.67 T
0 11.2 Q
(HE) 79.78 596.67 T
0 14 Q
(XPM) 98.21 596.67 T
(L) 130.48 596.67 T
0 11.2 Q
(IBRAR) 138.27 596.67 T
(Y) 169.17 596.67 T
0 0 0 1 0 0 0 K
1 10 Q
1.1 (The XPM API consists of two sets of Xlib-level C functions and structures. The first set enables you to perform) 72 577.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (simple operations such as reading a pixmap and displaying it on a Motif PushButton or saving a pixmap to an XPM) 72 565.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.39 (file. Basically, this set contains functions for saving and retrieving) 72 553.33 P
0 0 0 1 0 0 0 K
2 F
0.93 (Pixmap) 343.63 553.33 P
0 0 0 1 0 0 0 K
1 F
0.39 ( and) 379.63 553.33 P
0 0 0 1 0 0 0 K
2 F
0.93 (XImage) 399.85 553.33 P
0 0 0 1 0 0 0 K
1 F
0.39 ( objects to and from files,) 435.85 553.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (buffers \050files in memory\051, and data \050included files\051. The XPM library is designed to let take advantage of features in) 72 541.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the XPM format, so you can use it to override symbolic colors and build icons with transparent color.) 72 529.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (The second set of routines, which function at a lower level and are called by routines from the first set, provides you) 72 511.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.46 (with advanced features for writing applications such as pixmap editors and image format converters.  These) 72 499.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.56 (routines are also useful in applications in which you want to cache XPM files.  This set contains functions for) 72 487.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (saving and retrieving) 72 475.33 P
0 0 0 1 0 0 0 K
2 F
0.49 (XpmImage) 159.55 475.33 P
0 0 0 1 0 0 0 K
1 F
0.21 ( objects to and from the same forms of storage \050files, buffers, and data\051, plus func-) 207.55 475.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tions to build) 72 463.33 T
0 0 0 1 0 0 0 K
2 F
(XImage) 127.29 463.33 T
0 0 0 1 0 0 0 K
1 F
( and) 163.29 463.33 T
0 0 0 1 0 0 0 K
2 F
(Pixmap) 182.73 463.33 T
0 0 0 1 0 0 0 K
1 F
( objects from an) 218.73 463.33 T
0 0 0 1 0 0 0 K
2 F
(XpmImage) 285.94 463.33 T
0 0 0 1 0 0 0 K
1 F
( object and vice versa.) 333.94 463.33 T
0 0 0 1 0 0 0 K
0 14 Q
(A) 72 436.67 T
0 11.2 Q
(V) 80.55 436.67 T
(AILABILITY) 86.57 436.67 T
0 0 0 1 0 0 0 K
1 10 Q
1.16 (Since XPM is not an X Consortium standard, the XPM library may not be present on your system. If this is the) 72 417.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.37 (case, you should get the latest version of XPM via anonymous FTP from) 72 405.33 P
0 0 0 1 0 0 0 K
0 F
1.37 (ftp.x.org) 383.68 405.33 P
0 0 0 1 0 0 0 K
1 F
1.37 ( in) 417.57 405.33 P
0 0 0 1 0 0 0 K
0 F
1.37 (/contrib/libraries) 433.09 405.33 P
0 0 0 1 0 0 0 K
1 F
1.37 (, or from) 501.99 405.33 P
0 0 0 1 0 0 0 K
0 F
0.83 (koala.inria.fr) 72 393.33 P
0 0 0 1 0 0 0 K
1 F
0.83 ( in) 125.34 393.33 P
0 0 0 1 0 0 0 K
0 F
0.83 (/pub/xpm) 139.79 393.33 P
0 0 0 1 0 0 0 K
1 F
0.83 (. You can also get it from the X11R6 contributed software package distributed by the X) 177.01 393.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (Consortium. The XPM library is known to compile on most systems, so follow the instructions in the) 72 381.33 P
0 0 0 1 0 0 0 K
0 F
0.26 (README) 483.92 381.33 P
0 0 0 1 0 0 0 K
1 F
0.26 ( file) 523.91 381.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and everything should work fine.) 72 369.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.81 (You can get support by sending any questions or suggestions related to XPM to) 72 351.33 P
0 0 0 1 0 0 0 K
0 F
0.81 (lehors@sophia.inria.fr) 404.47 351.33 P
0 0 0 1 0 0 0 K
1 F
0.81 (.  You can) 496.46 351.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7.31 (subscribe to the mailing list) 72 339.33 P
0 0 0 1 0 0 0 K
0 F
7.31 (xpm-talk@sophia.inria.fr) 221.6 339.33 P
0 0 0 1 0 0 0 K
1 F
7.31 ( by simply sending a request to) 323.58 339.33 P
0 0 0 1 0 0 0 K
0 F
7.31 (xpm-talk-) 501.68 339.33 P
0.42 (request@sophia.inria.fr.) 72 327.33 P
0 0 0 1 0 0 0 K
1 F
0.42 ( Since XPM is widely used, you can also obtain help from other users through newsgroups) 170.93 327.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(such as) 72 315.33 T
0 0 0 1 0 0 0 K
0 F
(comp.windows.x.) 103.66 315.33 T
0 0 0 1 0 0 0 K
1 F
0.16 (The example XPM files and programs shown in this tutorial are available via anonymous FTP from) 72 297.33 P
0 0 0 1 0 0 0 K
0 F
0.16 (koala.inria.fr) 475.67 297.33 P
0 0 0 1 0 0 0 K
1 F
0.16 ( as) 529.01 297.33 P
0 0 0 1 0 0 0 K
0 F
(/pub/xpm/xpm_examples.tar.gz) 72 285.33 T
0 0 0 1 0 0 0 K
1 F
(.) 196.43 285.33 T
0 0 0 1 0 0 0 K
0 16 Q
(D) 72 253.33 T
0 12.8 Q
(EFINING) 83.55 253.33 T
0 16 Q
(P) 138.03 253.33 T
0 12.8 Q
(IXMAPS) 147.81 253.33 T
0 0 0 1 0 0 0 K
1 10 Q
0.21 (The first step in using XPM is to define a pixmap, which you can do using the XPM format.  In version 3, a pixmap) 72 233.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is simply an array of character strings that is composed as follows:) 72 221.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (/* XPM */) 95.98 204 S
-0.45 (static char* <) 95.98 192 S
3 F
-0.45 (pixmap_name) 165.28 192 S
2 F
-0.45 (>[] = {) 219.73 192 S
-0.45 (\322) 95.98 180 S
3 F
-0.45 (Values-string) 100.93 180 S
2 F
-0.45 (\323,) 165.28 180 S
-0.45 (\322) 95.98 168 S
3 F
-0.45 (Colors-strings) 100.93 168 S
2 F
-0.45 (\323,) 170.23 168 S
-0.45 (\322) 95.98 156 S
3 F
-0.45 (Pixels-strings) 100.93 156 S
2 F
-0.45 (\323,) 170.23 156 S
-0.45 (\322) 95.98 144 S
3 F
-0.45 (Extensions-strings) 100.93 144 S
2 F
-0.45 (\323,) 190.03 144 S
-0.45 (};) 95.98 132 S
0 0 0 1 0 0 0 K
1 10 Q
0.85 (Each string is surrounded by double-quotes and separated by a comma. In a string containing multiple values, the) 72 113.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.38 (words are separated by white space, which can be composed of space and tab characters.  Regular C comments can) 72 101.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.18 (be placed anywhere outside of  the character strings; the pixmap must have a header comment that contains only the) 72 89.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(word) 72 77.33 T
0 0 0 1 0 0 0 K
2 F
(XPM) 95.05 77.33 T
0 0 0 1 0 0 0 K
1 F
(.) 113.05 77.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(3) 535 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.53 (The) 72 713.33 P
0 0 0 1 0 0 0 K
3 F
1.26 (Values-string) 90.58 713.33 P
0 0 0 1 0 0 0 K
1 F
0.53 ( is a single string that must contain four integers that correspond to the width and height of) 168.58 713.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.78 (the pixmap, the number of colors in the pixmap, and the number of characters per pixel in the color specification.) 72 701.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (The string can optionally specify the hotspot coordinates and the word) 72 689.33 P
0 0 0 1 0 0 0 K
2 F
0.81 (XPMEXT) 359.86 689.33 P
0 0 0 1 0 0 0 K
1 F
0.34 ( if the pixmap includes an) 395.86 689.33 P
0 0 0 1 0 0 0 K
3 F
0.81 (Exten-) 504 689.33 P
(sions-string) 72 677.33 T
0 0 0 1 0 0 0 K
1 F
(.  The format of the string is as follows:) 144 677.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322) 95.98 660 S
3 F
-0.45 (width) 100.93 660 S
-0.45 (height) 130.63 660 S
-0.45 (ncolors) 165.28 660 S
-0.45 (cpp) 204.88 660 S
2 F
-0.45 ( [) 219.73 660 S
3 F
-0.45 (x_hotspot) 229.63 660 S
-0.45 (y_hotspot) 279.13 660 S
2 F
-0.45 (] [XPMEXT]) 323.68 660 S
0 0 0 1 0 0 0 K
1 10 Q
0.94 (The) 72 641.33 P
0 0 0 1 0 0 0 K
3 F
2.25 (Colors-strings) 90.99 641.33 P
0 0 0 1 0 0 0 K
1 F
0.94 ( section contains as many strings as there are colors. Each string specifies the characters) 174.99 641.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(used to represent the color, the type of the color, and the actual color value.  Each string has the following format:) 72 629.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322) 95.98 612 S
3 F
-0.45 (chars) 100.93 612 S
-0.45 (key) 130.63 612 S
-0.45 (value) 150.43 612 S
2 F
-0.45 ( ...\323) 175.18 612 S
0 0 0 1 0 0 0 K
1 10 Q
0.75 (The) 72 593.33 P
0 0 0 1 0 0 0 K
3 F
1.79 (chars) 90.8 593.33 P
0 0 0 1 0 0 0 K
1 F
0.75 ( value contains) 120.8 593.33 P
0 0 0 1 0 0 0 K
3 F
1.79 (cpp) 185.53 593.33 P
0 0 0 1 0 0 0 K
1 F
0.75 ( characters; these characters are used to represent pixels of that color in the actual) 203.53 593.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.62 (pixmap. A color specification can have multiple key/value pairs, where) 72 581.33 P
0 0 0 1 0 0 0 K
3 F
1.49 (value) 365.94 581.33 P
0 0 0 1 0 0 0 K
1 F
0.62 ( is the specified color and) 395.94 581.33 P
0 0 0 1 0 0 0 K
3 F
1.49 (key) 504.65 581.33 P
0 0 0 1 0 0 0 K
1 F
0.62 ( is a) 522.65 581.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(keyword describing the type of the value. XPM defines the following keys:) 72 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 551.33 T
0 0 0 1 0 0 0 K
2 F
(m) 90 551.33 T
0 0 0 1 0 0 0 K
1 F
( for a monochrome visual) 96 551.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 535.33 T
0 0 0 1 0 0 0 K
2 F
(c) 90 535.33 T
0 0 0 1 0 0 0 K
1 F
( for a color visual) 96 535.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 519.33 T
0 0 0 1 0 0 0 K
2 F
(g4) 90 519.33 T
0 0 0 1 0 0 0 K
1 F
( for 4-level grayscale) 102 519.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 503.33 T
0 0 0 1 0 0 0 K
2 F
(g) 90 503.33 T
0 0 0 1 0 0 0 K
1 F
( for grayscale with more than 4 levels) 96 503.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 81 487.33 T
0 0 0 1 0 0 0 K
2 F
(s) 90 487.33 T
0 0 0 1 0 0 0 K
1 F
( for a symbolic name) 96 487.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (The actual color can be specified by giving the colorname, a \324) 72 469.33 P
0 0 0 1 0 0 0 K
2 F
0.35 (#) 320.76 469.33 P
0 0 0 1 0 0 0 K
1 F
0.14 (\325 followed by the RGB code in hexadecimal, or a \324) 326.76 469.33 P
0 0 0 1 0 0 0 K
2 F
0.35 (%) 530.67 469.33 P
0 0 0 1 0 0 0 K
1 F
0.14 (\325) 536.67 469.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.59 (followed by the HSV \050Hue, Saturation, Value\051 code.) 72 457.33 P
0 0 0 1 0 0 0 K
1 8 Q
0.47 (\240) 286.07 461.33 P
0 0 0 1 0 0 0 K
1 10 Q
0.59 ( In addition, the value) 290.07 457.33 P
0 0 0 1 0 0 0 K
2 F
1.41 (None) 383 457.33 P
0 0 0 1 0 0 0 K
1 F
0.59 ( can be given as a color name to) 407 457.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mean the transparent color.) 72 445.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.93 (The) 72 427.33 P
0 0 0 1 0 0 0 K
3 F
2.23 (Pixels-strings) 90.98 427.33 P
0 0 0 1 0 0 0 K
1 F
0.93 ( section contains the actual pixmap definition.  This section consists of) 174.98 427.33 P
0 0 0 1 0 0 0 K
3 F
2.23 (height) 471.4 427.33 P
0 0 0 1 0 0 0 K
1 F
0.93 ( strings.) 507.4 427.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.85 (Each string contains) 72 415.33 P
0 0 0 1 0 0 0 K
3 F
2.03 (width) 158.13 415.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
2.03 (*) 191.48 415.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
2.03 (cpp) 200.82 415.33 P
0 0 0 1 0 0 0 K
1 F
0.85 ( characters.  Every) 218.82 415.33 P
0 0 0 1 0 0 0 K
3 F
2.03 (cpp) 299.11 415.33 P
0 0 0 1 0 0 0 K
1 F
0.85 ( length string must be one of the colors defined in the) 317.11 415.33 P
0 0 0 1 0 0 0 K
3 F
(Colors-strings) 72 403.33 T
0 0 0 1 0 0 0 K
1 F
( section.) 156 403.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.02 (The final section is the optional) 72 385.33 P
0 0 0 1 0 0 0 K
3 F
4.85 (Extensions-strings) 213.01 385.33 P
0 0 0 1 0 0 0 K
1 F
2.02 ( section, which must be indicated in the) 321.01 385.33 P
0 0 0 1 0 0 0 K
3 F
4.85 (Values-) 498 385.33 P
3.54 (string) 72 373.33 P
0 0 0 1 0 0 0 K
1 F
1.47 (. This section can contain data for multiple extensions. The data for a single extension can be a single) 108 373.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string or multiple strings. If the data is a single string, the extension takes the following form:) 72 361.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322XPMEXT) 95.98 344 S
3 F
-0.45 (extension-name) 135.58 344 S
-0.45 (extension-data\323,) 209.83 344 S
0 0 0 1 0 0 0 K
1 10 Q
(If the extension uses multiple strings, the form is as follows:) 72 325.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322XPMEXT) 95.98 308 S
3 F
-0.45 (extension-name) 135.58 308 S
2 F
-0.45 (\323,) 204.88 308 S
-0.45 (\322) 95.98 296 S
3 F
-0.45 (extension-data) 100.93 296 S
2 F
-0.45 (\323,) 170.23 296 S
-0.45 (...) 95.98 284 S
0 0 0 1 0 0 0 K
1 10 Q
(In either case, if this section is included, it must end with the string) 72 265.33 T
0 0 0 1 0 0 0 K
2 F
(XPMENDEXT) 342.54 265.33 T
0 0 0 1 0 0 0 K
1 F
(.) 396.54 265.33 T
0 0 0 1 0 0 0 K
0 14 Q
(A) 72 238.67 T
(S) 84.05 238.67 T
0 11.2 Q
(IMPLE) 91.05 238.67 T
0 14 Q
(E) 127.53 238.67 T
0 11.2 Q
(XAMPLE) 136.08 238.67 T
0 0 0 1 0 0 0 K
1 10 Q
0.09 (The following pixmap definition shows you how to create the red bullet icon shown in Figure 1 Since this documen-) 72 219.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tation is printed in black and white, the color icons in the figures appear in various shades of gray.) 72 207.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (/* XPM */) 95.98 190 S
-0.45 (static char * bullet_xpm[] = {) 95.98 178 S
-0.45 (/* width height number_of_colors chars_per_pixel */) 95.98 166 S
-0.45 (/* colors */) 95.98 154 S
-0.45 (\32225 25 2 1\323,) 95.98 142 S
-0.45 (\322X    c black\323,) 95.98 130 S
-0.45 (\322.    c red\323,) 95.98 118 S
-0.45 (/* pixels */) 95.98 106 S
72 86 540 101 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 92 234 92 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
1 8 Q
0 X
0 0 0 1 0 0 0 K
(\240) 72 80.67 T
(The HSV codes are not supported by the current XPM library.) 78 80.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(4) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 714 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 702 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 690 S
-0.45 (\322XXXXXXXXXX.....XXXXXXXXXX\323,) 95.98 678 S
-0.45 (\322XXXXXXXX.........XXXXXXXX\323,) 95.98 666 S
-0.45 (\322XXXXXX.............XXXXXX\323,) 95.98 654 S
-0.45 (\322XXXXX...............XXXXX\323,) 95.98 642 S
-0.45 (\322XXXXX...............XXXXX\323,) 95.98 630 S
-0.45 (\322XXXX.................XXXX\323,) 95.98 618 S
-0.45 (\322XXXX.................XXXX\323,) 95.98 606 S
-0.45 (\322XXX...................XXX\323,) 95.98 594 S
-0.45 (\322XXX...................XXX\323,) 95.98 582 S
-0.45 (\322XXX...................XXX\323,) 95.98 570 S
-0.45 (\322XXX...................XXX\323,) 95.98 558 S
-0.45 (\322XXX...................XXX\323,) 95.98 546 S
-0.45 (\322XXXX.................XXXX\323,) 95.98 534 S
-0.45 (\322XXXX.................XXXX\323,) 95.98 522 S
-0.45 (\322XXXXX...............XXXXX\323,) 95.98 510 S
-0.45 (\322XXXXX...............XXXXX\323,) 95.98 498 S
-0.45 (\322XXXXXX.............XXXXXX\323,) 95.98 486 S
-0.45 (\322XXXXXXXX.........XXXXXXXX\323,) 95.98 474 S
-0.45 (\322XXXXXXXXXX.....XXXXXXXXXX\323,) 95.98 462 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 450 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 438 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323};) 95.98 426 S
0 0 0 1 0 0 0 K
1 10 Q
1.15 (The comments point out the different sections of the format. The icon is a 25 by 25 pixmap that uses the colors) 72 407.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.54 (black and red. These colors are represented by the single characters X, and . \050dot\051, respectively. This icon is stored) 72 395.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.61 (in a file called) 72 383.33 P
0 0 0 1 0 0 0 K
0 F
0.61 (bullet.xpm) 133.86 383.33 P
0 0 0 1 0 0 0 K
1 F
0.61 (, which is relevant to a discussion about using the icon with the XPM library later in this) 175.8 383.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tutorial..) 72 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (However, when this icon is displayed on a monochrome screen, it will appear all black, as shown in Figure 2.  This) 72 245.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.87 (happens because the color red recerts to black on a monochrome displayTo avoid this problem, you can force the) 72 233.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.64 (color red to revert to white instead of black by changing the definition of the . \050dot\051 character in) 72 221.77 P
0 0 0 1 0 0 0 K
2 F
1.54 (bullet.xpm) 469.08 221.77 P
0 0 0 1 0 0 0 K
1 F
0.64 ( to) 529.08 221.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the following:) 72 209.77 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322.    c red m white\323,) 95.98 192.44 S
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 232.76 270.11 T
1 8.8 Q
(IGURE) 238.87 270.11 T
1 11 Q
(1:) 268.51 270.11 T
0 F
(T) 279.81 270.11 T
0 8.8 Q
(HE) 285.93 270.11 T
0 11 Q
(R) 300.41 270.11 T
0 8.8 Q
(ED) 307.13 270.11 T
0 11 Q
(B) 321.61 270.11 T
0 8.8 Q
(ULLET) 328.33 270.11 T
0 11 Q
(I) 357.49 270.11 T
0 8.8 Q
(CON) 361.15 270.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 169.57 91.55 T
1 8.8 Q
(IGURE) 175.69 91.55 T
1 11 Q
(2:) 205.32 91.55 T
0 F
(T) 216.63 91.55 T
0 8.8 Q
(HE) 222.74 91.55 T
0 11 Q
(R) 237.23 91.55 T
0 8.8 Q
(ED) 243.95 91.55 T
0 11 Q
(B) 258.43 91.55 T
0 8.8 Q
(ULLET) 265.15 91.55 T
0 11 Q
(I) 294.3 91.55 T
0 8.8 Q
(CON) 297.97 91.55 T
(ON) 318.81 91.55 T
(A) 333.78 91.55 T
0 11 Q
(M) 341.91 91.55 T
0 8.8 Q
(ONOCHROME) 351.07 91.55 T
0 11 Q
(S) 409.06 91.55 T
0 8.8 Q
(CREEN) 414.56 91.55 T
72 281.44 540 356 C
276.72 281.44 335.28 340 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  2034     
97 97 46.56 46.56 0 282.72 287.44
/red <
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBF8B
0000708BFF008BC740008CD9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA55555555555555555555
55555555555500000000000000000000000026C3E5613EC472FFEBE0ADB83173
0B1821BCC83EA747516C8E9E97877E746259EEFFEE00FF80FFDE99FFFF223299
FF295345274348D36BFAB27BCD99FFFFF570D2FF00008BCD87008B00FEB0D987
B37F5572B08FEE1A4FED98FFCDFFFF9999FF00F548AFB4FF8FFFCD99FFD94DB2
8CCCD000FFEEB0EE6AD466CC4C981973E7478EB0F076DBFF8F7F2FC0FF5300FF
> store
/green <
BFBFBFBFBF7F7F7F7F7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBFBF7FBF5A
0064705AFF86001540008C0000000000000000000000000000FFFFAAAAAAAA55
555555000000FFFFFFFFAAAAAAAA5555555500000000FFFFFFFFAAAAAAAA5555
555500000000FFFFAAAAAAAA55555555000026C3E58757D79FE1EBE0ADB8317F
0B1821BCC83EA747516C8E9E97877E746259636982FF4580EFB87FFFD38BCD8D
FF53A78B406E76D386FFDF6EB768F4AEDE80B4FA64000A00CE8B0000FE30D9CE
B37F6B77B080D51A2FEDF5FFB5EBC09589E4FFF53DEEEEF88BFF0083FFBA4D22
78AFC800DA00C4E873E766CC99FF1973E78FFFC080EE7000BCFF4FC0888600FF
> store
/blue <
FFBF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3FFFBF7F3F00FFBF7F3F00FFBF00
00007000FF8B8B8540D98C00FFFFFFFFFFFFFFFFFFFFFFFFFFAA55FFAA5500FF
AA5500FFAA55FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA
5500FFAA5500AA55FFAA5500FFAA5500AA5526C3E5D98CFFFFFFEBE0ADB8318A
0B1821BCC83EA747516C8E9E97877E74625963B4EEFF0080D5875DD99B22327B
E0458B748BEEFFD38FFFEE5F9E6FFFB9B3908CCD00CD50CDEB0000FFEF60D9FA
B37F2F85B06EB71A4FEDFF00CDCDCB8476C400F58BEEB4DC7BF6006FDE9D4D22
6694E180B9EEDECD8AFF66CC7FFF7073E777EEE680C693008FD44FC0F68B00FF
> store
 BEGINBITMAPCOLORc
z
P%FE7Z
P#







@z
O?FE








Jz
I/F7

J'E'
CF7F7F7F7F7F7F7F7F7F7F7F7

J'J'
=F7F7F7F7F7F7;F7F7F7F7F7F7

J$J$
:F7F7F7GF7F7F7




J$J$
7F7F7F7MF7F7F7




J$J$
4F7F7F7O%F7F7F7













J$J$
4FEFEFEO%FEFEFE




J$J$
7FEFEFEMFEFEFE




J$J$
:FEFEFEGFEFEFE

J'J'
=FEFEFEFEFEFE;FEFEFEFEFEFE

J'E'
CFEFEFEFEFEFEFEFEFEFEFEFE

Jz
I/FE








@Z
O?







7z
P#FE
ENDBITMAP
%%EndBinary
72 281.44 540 356 C
0 0 612 792 C
72 102.88 540 177.44 C
276.72 102.88 335.28 161.44 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1794     
97 97 46.56 46.56 0 282.72 108.88
/red <
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBF8B
0000708BFF008BC740008CD9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA55555555555555555555
55555555555500000000000000000000000026C3E5613EC472FFEBE0ADB83173
0B1821BCC83EA747516C8E9E97877E746259EEFFEE00FF80FFDE99FFFF223299
FF295345274348D36BFAB27BCD99FFFFF570D2FF00008BCD87008B00FEB0D987
B37F5572B08FEE1A4FED98FFCDFFFF9999FF00F548AFB4FF8FFFCD99FFD94DB2
8CCCD000FFEEB0EE6AD466CC4C981973E7478EB0F076DBFF8F7F2FC0FF5300FF
> store
/green <
BFBFBFBFBF7F7F7F7F7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBFBF7FBF5A
0064705AFF86001540008C0000000000000000000000000000FFFFAAAAAAAA55
555555000000FFFFFFFFAAAAAAAA5555555500000000FFFFFFFFAAAAAAAA5555
555500000000FFFFAAAAAAAA55555555000026C3E58757D79FE1EBE0ADB8317F
0B1821BCC83EA747516C8E9E97877E746259636982FF4580EFB87FFFD38BCD8D
FF53A78B406E76D386FFDF6EB768F4AEDE80B4FA64000A00CE8B0000FE30D9CE
B37F6B77B080D51A2FEDF5FFB5EBC09589E4FFF53DEEEEF88BFF0083FFBA4D22
78AFC800DA00C4E873E766CC99FF1973E78FFFC080EE7000BCFF4FC0888600FF
> store
/blue <
FFBF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3FFFBF7F3F00FFBF7F3F00FFBF00
00007000FF8B8B8540D98C00FFFFFFFFFFFFFFFFFFFFFFFFFFAA55FFAA5500FF
AA5500FFAA55FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA
5500FFAA5500AA55FFAA5500FFAA5500AA5526C3E5D98CFFFFFFEBE0ADB8318A
0B1821BCC83EA747516C8E9E97877E74625963B4EEFF0080D5875DD99B22327B
E0458B748BEEFFD38FFFEE5F9E6FFFB9B3908CCD00CD50CDEB0000FFEF60D9FA
B37F2F85B06EB71A4FEDFF00CDCDCB8476C400F58BEEB4DC7BF6006FDE9D4D22
6694E180B9EEDECD8AFF66CC7FFF7073E777EEE680C693008FD44FC0F68B00FF
> store
 BEGINBITMAPCOLORc
z
P%FE7Z
P#







@z
O?FE











































































@Z
O?







7z
P#FE
ENDBITMAP
%%EndBinary
72 102.88 540 177.44 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(5) 535 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.96 (In this color specification, we use multiple key/value pairs. We indicate that the . \050dot\051 represents the color value) 72 713.33 P
0 0 0 1 0 0 0 K
2 F
3.8 (red) 72 701.33 P
0 0 0 1 0 0 0 K
1 F
1.58 ( on a color display by using the keyword) 90 701.33 P
0 0 0 1 0 0 0 K
2 F
3.8 (c) 269.52 701.33 P
0 0 0 1 0 0 0 K
1 F
1.58 (, while on a monochrome display the character means) 275.52 701.33 P
0 0 0 1 0 0 0 K
2 F
3.8 (white) 507.5 701.33 P
0 0 0 1 0 0 0 K
1 F
1.58 (,) 537.5 701.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(because we use the) 72 689.33 T
0 0 0 1 0 0 0 K
2 F
(m) 150.86 689.33 T
0 0 0 1 0 0 0 K
1 F
( keyword. Figure 3 shows how the new icon looks on a monochrome display.) 156.86 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.3 (This feature of XPM allows you to combine several icon definitions in a single file. You can use dithering in a) 72 563.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(monochrome icon and a solid color in the color version. We use this technique in the following example:) 72 551.77 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (/* XPM */) 95.98 534.44 S
-0.45 (static char * newbullet_xpm[] = {) 95.98 522.44 S
-0.45 (\32225 25 3 1\323,) 95.98 510.44 S
-0.45 (\322X    c black\323,) 95.98 498.44 S
-0.45 (\322.    c red m black\323,) 95.98 486.44 S
-0.45 (\322     c red m white\323,) 95.98 474.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 462.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 450.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 438.44 S
-0.45 (\322XXXXXXXXXX. . .XXXXXXXXXX\323,) 95.98 426.44 S
-0.45 (\322XXXXXXXX . . . . XXXXXXXX\323,) 95.98 414.44 S
-0.45 (\322XXXXXX. . . . . . .XXXXXX\323,) 95.98 402.44 S
-0.45 (\322XXXXX. . . . . . . .XXXXX\323,) 95.98 390.44 S
-0.45 (\322XXXXX . . . . . . . XXXXX\323,) 95.98 378.44 S
-0.45 (\322XXXX . . . . . . . . XXXX\323,) 95.98 366.44 S
-0.45 (\322XXXX. . . . . . . . .XXXX\323,) 95.98 354.44 S
-0.45 (\322XXX. . . . . . . . . .XXX\323,) 95.98 342.44 S
-0.45 (\322XXX . . . . . . . . . XXX\323,) 95.98 330.44 S
-0.45 (\322XXX. . . . . . . . . .XXX\323,) 95.98 318.44 S
-0.45 (\322XXX . . . . . . . . . XXX\323,) 95.98 306.44 S
-0.45 (\322XXX. . . . . . . . . .XXX\323,) 95.98 294.44 S
-0.45 (\322XXXX. . . . . . . . .XXXX\323,) 95.98 282.44 S
-0.45 (\322XXXX . . . . . . . . XXXX\323,) 95.98 270.44 S
-0.45 (\322XXXXX . . . . . . . XXXXX\323,) 95.98 258.44 S
-0.45 (\322XXXXX. . . . . . . .XXXXX\323,) 95.98 246.44 S
-0.45 (\322XXXXXX. . . . . . .XXXXXX\323,) 95.98 234.44 S
-0.45 (\322XXXXXXXX . . . . XXXXXXXX\323,) 95.98 222.44 S
-0.45 (\322XXXXXXXXXX. . .XXXXXXXXXX\323,) 95.98 210.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 198.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323,) 95.98 186.44 S
-0.45 (\322XXXXXXXXXXXXXXXXXXXXXXXXX\323};) 95.98 174.44 S
0 0 0 1 0 0 0 K
1 10 Q
0.37 (This definition creates a red bullet icon that uses three color specifications instead of two. The red pixels have been) 72 143.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.62 (put in two groups: one that is black on a monochrome screen and the other that is white on a monochrome screen.) 72 131.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.2 (Thus, the bullet is red on a color screen, just like the one shown in Figure 1, and it is gray on a monochrome screen,) 72 119.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(as shown in Figure 4.) 72 107.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 170.43 588.11 T
1 8.8 Q
(IGURE) 176.54 588.11 T
1 11 Q
(3:) 206.18 588.11 T
0 F
(T) 217.48 588.11 T
0 8.8 Q
(HE) 223.6 588.11 T
0 11 Q
(N) 238.08 588.11 T
0 8.8 Q
(EW) 245.42 588.11 T
0 11 Q
(R) 260.87 588.11 T
0 8.8 Q
(ED) 267.6 588.11 T
0 11 Q
(B) 282.08 588.11 T
0 8.8 Q
(ULLET) 288.8 588.11 T
(ON) 317.95 588.11 T
(A) 332.93 588.11 T
0 11 Q
(M) 341.05 588.11 T
0 8.8 Q
(ONOCHROME) 350.22 588.11 T
0 11 Q
(S) 408.2 588.11 T
0 8.8 Q
(CREEN) 413.7 588.11 T
72 599.44 540 674 C
276.72 599.44 335.28 658 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1984     
97 97 46.56 46.56 0 282.72 605.44
/red <
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBF8B
0000708BFF008BC740008CD9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA55555555555555555555
55555555555500000000000000000000000026C3E5613EC472FFEBE0ADB83173
0B1821BCC83EA747516C8E9E97877E746259EEFFEE00FF80FFDE99FFFF223299
FF295345274348D36BFAB27BCD99FFFFF570D2FF00008BCD87008B00FEB0D987
B37F5572B08FEE1A4FED98FFCDFFFF9999FF00F548AFB4FF8FFFCD99FFD94DB2
8CCCD000FFEEB0EE6AD466CC4C981973E7478EB0F076DBFF8F7F2FC0FF5300FF
> store
/green <
BFBFBFBFBF7F7F7F7F7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBFBF7FBF5A
0064705AFF86001540008C0000000000000000000000000000FFFFAAAAAAAA55
555555000000FFFFFFFFAAAAAAAA5555555500000000FFFFFFFFAAAAAAAA5555
555500000000FFFFAAAAAAAA55555555000026C3E58757D79FE1EBE0ADB8317F
0B1821BCC83EA747516C8E9E97877E746259636982FF4580EFB87FFFD38BCD8D
FF53A78B406E76D386FFDF6EB768F4AEDE80B4FA64000A00CE8B0000FE30D9CE
B37F6B77B080D51A2FEDF5FFB5EBC09589E4FFF53DEEEEF88BFF0083FFBA4D22
78AFC800DA00C4E873E766CC99FF1973E78FFFC080EE7000BCFF4FC0888600FF
> store
/blue <
FFBF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3FFFBF7F3F00FFBF7F3F00FFBF00
00007000FF8B8B8540D98C00FFFFFFFFFFFFFFFFFFFFFFFFFFAA55FFAA5500FF
AA5500FFAA55FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA
5500FFAA5500AA55FFAA5500FFAA5500AA5526C3E5D98CFFFFFFEBE0ADB8318A
0B1821BCC83EA747516C8E9E97877E74625963B4EEFF0080D5875DD99B22327B
E0458B748BEEFFD38FFFEE5F9E6FFFB9B3908CCD00CD50CDEB0000FFEF60D9FA
B37F2F85B06EB71A4FEDFF00CDCDCB8476C400F58BEEB4DC7BF6006FDE9D4D22
6694E180B9EEDECD8AFF66CC7FFF7073E777EEE680C693008FD44FC0F68B00FF
> store
 BEGINBITMAPCOLORc
z
P%FE7Z
P#







@z
O?FE








JZ
I/

JQEQ
C

JQJQ
=;

J$J$
:FFFFFFGFFFFFF




J$J$
7FFFFFFMFFFFFF




J$J$
4FFFFFFO%FFFFFF













J$J$
4FEFEFEO%FEFEFE




J$J$
7FEFEFEMFEFEFE




J$J$
:FEFEFEGFEFEFE

J'J'
=FEFEFEFEFEFE;FEFEFEFEFEFE

J'E'
CFEFEFEFEFEFEFEFEFEFEFEFE

Jz
I/FE








@Z
O?







7z
P#FE
ENDBITMAP
%%EndBinary
72 599.44 540 674 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(6) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(S) 72 609.11 T
0 11.2 Q
(YMBOLIC) 79 609.11 T
0 14 Q
(C) 130.41 609.11 T
0 11.2 Q
(OLORS) 139.75 609.11 T
0 0 0 1 0 0 0 K
1 10 Q
0.83 (With XPM, it\325s very easy to define a symbolic color name, such as Foreground. You change only a single line in) 72 589.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the) 72 577.77 T
0 0 0 1 0 0 0 K
0 F
(bullet.xpm) 86.72 577.77 T
0 0 0 1 0 0 0 K
1 F
( file. To define a symbolic color name, use the following color specification for the color) 128.66 577.77 T
0 0 0 1 0 0 0 K
2 F
(red) 486.93 577.77 T
0 0 0 1 0 0 0 K
1 F
(:) 504.93 577.77 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322.    c red s Foreground\323,) 95.98 560.44 S
0 0 0 1 0 0 0 K
1 10 Q
1.39 (All we have done is add the) 72 541.77 P
0 0 0 1 0 0 0 K
2 F
3.35 (s) 195.35 541.77 P
0 0 0 1 0 0 0 K
1 F
1.39 ( keyword, which means that the following value,) 201.35 541.77 P
0 0 0 1 0 0 0 K
2 F
3.35 (Foreground) 410.26 541.77 P
0 0 0 1 0 0 0 K
1 F
1.39 (, is the symbolic) 470.26 541.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (name of this color. As a result, you can dynamically define Foreground to be blue or any other color and get a bullet) 72 529.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(icon of any color from the same file. In our later discussion, we refer to this new icon as) 72 517.77 T
0 0 0 1 0 0 0 K
0 F
(bullet_symb.xpm) 426.65 517.77 T
0 0 0 1 0 0 0 K
1 F
(.) 494.14 517.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (The way you specify the value of Foreground depends on the application. Later in this tutorial we describe how you) 72 499.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.6 (can use the XPM library for this purpose. In the mean time, you can test out this functionality using the) 72 487.77 P
0 0 0 1 0 0 0 K
0 F
1.6 (sxpm) 519.45 487.77 P
0 0 0 1 0 0 0 K
1 F
0.48 (program, which is part of the XPM distribution. This program is designed to show XPM files. It provides you with) 72 475.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (a set of options that you can use to trigger most of the features of XPM, such as the color overriding mechanism and) 72 463.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (the transparent color. You can obtain a short description of all the supported options by entering the command) 72 451.77 P
0 0 0 1 0 0 0 K
0 F
0.22 (sxpm) 519.45 451.77 P
0.38 (-help) 72 439.77 P
0 0 0 1 0 0 0 K
1 F
0.38 (, or by looking at the manual page for more information. Use the following command to set the Foreground to) 92.55 439.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(blue:) 72 427.77 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (%) 95.98 410.44 S
4 F
-0.45 (sxpm bullet_symb.xpm -s Foreground blue) 105.88 410.44 S
0 14 Q
(T) 72 383.11 T
0 11.2 Q
(RANSP) 79.78 383.11 T
(ARENCY) 111.94 383.11 T
0 0 0 1 0 0 0 K
1 10 Q
0.97 (XPM can handle icons of any shape. For instance, the bullet icon would be more appealing with a circular shape) 72 363.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.22 (instead of a square shape. One simple way to create a shaped icon is to use the color None instead of black, in order) 72 351.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.74 (to have a transparent background. Again, you cahnge only a single line in the XPM file) 72 339.77 P
0 0 0 1 0 0 0 K
0 F
1.74 (bullet.xpm) 451.51 339.77 P
0 0 0 1 0 0 0 K
1 F
1.74 (. This time) 493.45 339.77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(change the color definition for X to the following:) 72 327.77 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322X    c none\323,) 95.98 310.44 S
0 0 0 1 0 0 0 K
1 10 Q
(We will call this new icon) 72 291.77 T
0 0 0 1 0 0 0 K
0 F
(bullet_transp.xpm) 179.21 291.77 T
0 0 0 1 0 0 0 K
1 F
(.  It is illustrated in Figure 5.) 251.71 291.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (Note that the icon is still defined in a rectangle, but it looks like it is not. Here again, the way that the transparent) 72 166.22 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.57 (color is handled depends on the application, and also, in some cases, on whether your X server provides the Shape) 72 154.22 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Extension. We describe how to use the XPM library to achieve this transparent effect later in the tutorial.) 72 142.22 T
0 0 0 1 0 0 0 K
0 14 Q
(E) 72 115.55 T
0 11.2 Q
(XTENSIONS) 80.55 115.55 T
0 0 0 1 0 0 0 K
1 10 Q
0.41 (The following example shows how you can specify hotspot coordinates and private data, such as the coordinates of) 72 96.22 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a connection port, in an XPM definition:) 72 84.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 145.9 634.11 T
1 8.8 Q
(IGURE) 152.01 634.11 T
1 11 Q
(4:) 181.64 634.11 T
0 F
(T) 192.95 634.11 T
0 8.8 Q
(HE) 199.07 634.11 T
0 11 Q
(D) 213.55 634.11 T
0 8.8 Q
(ITHERED) 221.49 634.11 T
0 11 Q
(R) 260.9 634.11 T
0 8.8 Q
(ED) 267.62 634.11 T
0 11 Q
(B) 282.1 634.11 T
0 8.8 Q
(ULLET) 288.82 634.11 T
0 11 Q
(I) 317.98 634.11 T
0 8.8 Q
(CON) 321.64 634.11 T
(ON) 342.49 634.11 T
(A) 357.46 634.11 T
0 11 Q
(M) 365.59 634.11 T
0 8.8 Q
(ONOCHROME) 374.75 634.11 T
0 11 Q
(S) 432.74 634.11 T
0 8.8 Q
(CREEN) 438.24 634.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 178.07 190.55 T
1 8.8 Q
(IGURE) 184.18 190.55 T
1 11 Q
(5:) 213.82 190.55 T
0 F
(T) 225.12 190.55 T
0 8.8 Q
(HE) 231.24 190.55 T
0 11 Q
(R) 245.72 190.55 T
0 8.8 Q
(ED) 252.44 190.55 T
0 11 Q
(B) 266.92 190.55 T
0 8.8 Q
(ULLET) 273.64 190.55 T
0 11 Q
(I) 302.8 190.55 T
0 8.8 Q
(CON) 306.46 190.55 T
(WITH) 327.3 190.55 T
(A) 351.56 190.55 T
0 11 Q
(C) 359.69 190.55 T
0 8.8 Q
(IRCULAR) 367.02 190.55 T
0 11 Q
(S) 405.95 190.55 T
0 8.8 Q
(HAPE) 411.45 190.55 T
72 645.44 540 720 C
276.72 645.44 335.28 704 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  3536     
97 97 46.56 46.56 0 282.72 651.44
/red <
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBF8B
0000708BFF008BC740008CD9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA55555555555555555555
55555555555500000000000000000000000026C3E5613EC472FFEBE0ADB83173
0B1821BCC83EA747516C8E9E97877E746259EEFFEE00FF80FFDE99FFFF223299
FF295345274348D36BFAB27BCD99FFFFF570D2FF00008BCD87008B00FEB0D987
B37F5572B08FEE1A4FED98FFCDFFFF9999FF00F548AFB4FF8FFFCD99FFD94DB2
8CCCD000FFEEB0EE6AD466CC4C981973E7478EB0F076DBFF8F7F2FC0FF5300FF
> store
/green <
BFBFBFBFBF7F7F7F7F7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBFBF7FBF5A
0064705AFF86001540008C0000000000000000000000000000FFFFAAAAAAAA55
555555000000FFFFFFFFAAAAAAAA5555555500000000FFFFFFFFAAAAAAAA5555
555500000000FFFFAAAAAAAA55555555000026C3E58757D79FE1EBE0ADB8317F
0B1821BCC83EA747516C8E9E97877E746259636982FF4580EFB87FFFD38BCD8D
FF53A78B406E76D386FFDF6EB768F4AEDE80B4FA64000A00CE8B0000FE30D9CE
B37F6B77B080D51A2FEDF5FFB5EBC09589E4FFF53DEEEEF88BFF0083FFBA4D22
78AFC800DA00C4E873E766CC99FF1973E78FFFC080EE7000BCFF4FC0888600FF
> store
/blue <
FFBF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3FFFBF7F3F00FFBF7F3F00FFBF00
00007000FF8B8B8540D98C00FFFFFFFFFFFFFFFFFFFFFFFFFFAA55FFAA5500FF
AA5500FFAA55FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA
5500FFAA5500AA55FFAA5500FFAA5500AA5526C3E5D98CFFFFFFEBE0ADB8318A
0B1821BCC83EA747516C8E9E97877E74625963B4EEFF0080D5875DD99B22327B
E0458B748BEEFFD38FFFEE5F9E6FFFB9B3908CCD00CD50CDEB0000FFEF60D9FA
B37F2F85B06EB71A4FEDFF00CDCDCB8476C400F58BEEB4DC7BF6006FDE9D4D22
6694E180B9EEDECD8AFF66CC7FFF7073E777EEE680C693008FD44FC0F68B00FF
> store
 BEGINBITMAPCOLORc
z
P%FE7Z
P#







@z
O?FE








J$9$
LFFFFFFFFFFFF

J$909$
CFFFFFFFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFFFFFF

J5
@AFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
=GFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
:MFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
7O%FFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
7O%FEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
7O%FFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
4O+FFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
4O+FEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
4O+FFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
4O+FEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
7O%FEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
7O%FFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFF

J5
7O%FEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
:MFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
=GFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J5
@AFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFFFFFFFEFEFE

J$909$
CFEFEFEFEFEFEFFFFFFFEFEFEFFFFFFFEFEFEFEFEFE

J$9$
LFEFEFEFEFEFE








@Z
O?







7z
P#FE
ENDBITMAP
%%EndBinary
72 645.44 540 720 C
0 0 612 792 C
72 201.88 540 276.44 C
276.72 201.88 335.28 260.44 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1994     
97 97 46.56 46.56 0 282.72 207.88
/red <
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBF8B
0000708BFF008BC740008CD9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA55555555555555555555
55555555555500000000000000000000000026C3E5613EC472FFEBE0ADB83173
0B1821BCC83EA747516C8E9E97877E746259EEFFEE00FF80FFDE99FFFF223299
FF295345274348D36BFAB27BCD99FFFFF570D2FF00008BCD87008B00FEB0D987
B37F5572B08FEE1A4FED98FFCDFFFF9999FF00F548AFB4FF8FFFCD99FFD94DB2
8CCCD000FFEEB0EE6AD466CC4C981973E7478EB0F076DBFF8F7F2FC0FF5300FF
> store
/green <
BFBFBFBFBF7F7F7F7F7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBFBF7FBF5A
0064705AFF86001540008C0000000000000000000000000000FFFFAAAAAAAA55
555555000000FFFFFFFFAAAAAAAA5555555500000000FFFFFFFFAAAAAAAA5555
555500000000FFFFAAAAAAAA55555555000026C3E58757D79FE1EBE0ADB8317F
0B1821BCC83EA747516C8E9E97877E746259636982FF4580EFB87FFFD38BCD8D
FF53A78B406E76D386FFDF6EB768F4AEDE80B4FA64000A00CE8B0000FE30D9CE
B37F6B77B080D51A2FEDF5FFB5EBC09589E4FFF53DEEEEF88BFF0083FFBA4D22
78AFC800DA00C4E873E766CC99FF1973E78FFFC080EE7000BCFF4FC0888600FF
> store
/blue <
FFBF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3FFFBF7F3F00FFBF7F3F00FFBF00
00007000FF8B8B8540D98C00FFFFFFFFFFFFFFFFFFFFFFFFFFAA55FFAA5500FF
AA5500FFAA55FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA5500FFAA
5500FFAA5500AA55FFAA5500FFAA5500AA5526C3E5D98CFFFFFFEBE0ADB8318A
0B1821BCC83EA747516C8E9E97877E74625963B4EEFF0080D5875DD99B22327B
E0458B748BEEFFD38FFFEE5F9E6FFFB9B3908CCD00CD50CDEB0000FFEF60D9FA
B37F2F85B06EB71A4FEDFF00CDCDCB8476C400F58BEEB4DC7BF6006FDE9D4D22
6694E180B9EEDECD8AFF66CC7FFF7073E777EEE680C693008FD44FC0F68B00FF
> store
 BEGINBITMAPCOLORc
z
P%FE7Z
P#







@z
O?FEAZ
O=







Jz
I/F7

J'E'
CF7F7F7F7F7F7F7F7F7F7F7F7

J'J'
=F7F7F7F7F7F7;F7F7F7F7F7F7

J$J$
:F7F7F7GF7F7F7




J$J$
7F7F7F7MF7F7F7




J$J$
4F7F7F7O%F7F7F7













J$J$
4FFFFFFO%FFFFFF




J$J$
7FFFFFFMFFFFFF




J$J$
:FFFFFFGFFFFFF

JQJQ
=;

JQEQ
C

JZ
I/







Az
O=FE@Z
O?







7z
P#FE
ENDBITMAP
%%EndBinary
72 201.88 540 276.44 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(7) 535 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (/* XPM */) 95.98 714 S
-0.45 (static char * smallbullet_xpm[] = {) 95.98 702 S
-0.45 (/* width height number_of_colors chars_per_pixel x_hotspot y_hotspot */) 95.98 690 S
-0.45 (\3225 5 2 1 2 2 XPMEXT\323,) 95.98 678 S
-0.45 (\322X    c none\323,) 95.98 666 S
-0.45 (\322.    c red m white s Foreground\323,) 95.98 654 S
-0.45 (\322X...X\322,) 95.98 642 S
-0.45 (\322.....\323,) 95.98 630 S
-0.45 (\322.....\323,) 95.98 618 S
-0.45 (\322.....\323,) 95.98 606 S
-0.45 (\322X...X\322,) 95.98 594 S
-0.45 (\322XPMEXT Ports\323,) 95.98 582 S
-0.45 (\3222 0 input\323,) 95.98 570 S
-0.45 (\322XPMENDEXT\323};) 95.98 558 S
0 0 0 1 0 0 0 K
1 10 Q
0.08 (The hotspot is located at the point 2, 2.  The private data is included as an extension.  A port is defined with its coor-) 72 539.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dinates and its name in a private data format.) 72 527.33 T
0 0 0 1 0 0 0 K
0 14 Q
(A) 72 500.67 T
(C) 84.05 500.67 T
0 11.2 Q
(OLORFUL) 93.39 500.67 T
0 14 Q
(E) 147.29 500.67 T
0 11.2 Q
(XAMPLE) 155.85 500.67 T
0 0 0 1 0 0 0 K
1 10 Q
1.25 (As a final example, we want to show you a more colorful icon, to give you a feel for the power of XPM.  The) 72 481.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(following XPM definition creates a pixmap of Bart Simpson, as shown in Figure 6:) 72 469.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (/* XPM */) 95.98 452 S
-0.45 (static char * bart_xpm[] = {) 95.98 440 S
-0.45 (/* width height ncolors chars_per_pixel */) 95.98 428 S
-0.45 (\32264 64 6 1\323,) 95.98 416 S
-0.45 (/* colors */) 95.98 404 S
-0.45 (\322  m None  c None s None\323,) 95.98 392 S
-0.45 (\322. m black c black\323,) 95.98 380 S
-0.45 (\322X m white c #faf080\323,) 95.98 368 S
-0.45 (\322o m white c white\323,) 95.98 356 S
-0.45 (\322O m white c red  s Shirt\323,) 95.98 344 S
-0.45 (\322+ m white c blue s Shorts\323,) 95.98 332 S
-0.45 (/* pixels */) 95.98 320 S
-0.45 (\322                                                                \322,) 95.98 308 S
-0.45 (\322                           ......                               \322,) 95.98 296 S
-0.45 (\322                     .. ... ..X..                               \322,) 95.98 284 S
-0.45 (\322                .. . ....X..XX.X.                               \322,) 95.98 272 S
-0.45 (\322            ... .X...XXX.XX.XXXX.                               \322,) 95.98 260 S
-0.45 (\322             ....XXX.XXXXXXXXXXX.                               \322,) 95.98 248 S
-0.45 (\322             .XX.XXXXXXXXXXXXXXX.                               \322,) 95.98 236 S
-0.45 (\322             ..XXXXXXXXXXXXXXXXX.                               \322,) 95.98 224 S
-0.45 (\322              .XXXXXXXXXXXXXXXXX.                               \322,) 95.98 212 S
-0.45 (\322              ..XXXXXXXXXXXXXX....                              \322,) 95.98 200 S
-0.45 (\322               .XXXXXXXXX...X.ooo..                             \322,) 95.98 188 S
-0.45 (\322               ..XXXXXXX.ooo....o..                             \322,) 95.98 176 S
-0.45 (\322                .XXXXXX.ooooo.ooo..                             \322,) 95.98 164 S
-0.45 (\322                 .XXXXX.o..oo.......                            \322,) 95.98 152 S
-0.45 (\322                 .XXXXX.ooooo...XXX..                           \322,) 95.98 140 S
-0.45 (\322                 .XXXXXX.ooo..XXXXX.                            \322,) 95.98 128 S
-0.45 (\322                  .XXXXXX...XXXXX....                           \322,) 95.98 116 S
-0.45 (\322                  .XXXXXXXXXXXX...X...                          \322,) 95.98 104 S
-0.45 (\322                   .XXXXXXXXXXXXXXXX...                         \322,) 95.98 92 S
-0.45 (\322                   .XXXXXXXXXXXXXXXXX.                          \322,) 95.98 80 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(8) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (\322                   .XXXXXXXXXXXXXXXX...                         \322,) 95.98 714 S
-0.45 (\322                   ..XXXXX.XXXXXXX....                          \322,) 95.98 702 S
-0.45 (\322                    .XXXXX.........                             \322,) 95.98 690 S
-0.45 (\322                    .XXXX.XXXXXX..                              \322,) 95.98 678 S
-0.45 (\322                     .XXXXXXXX...                               \322,) 95.98 666 S
-0.45 (\322                     .XXXXXXXX..                                \322,) 95.98 654 S
-0.45 (\322                     .XXXXXXXX.                                 \322,) 95.98 642 S
-0.45 (\322                   .......XXXX.                                 \322,) 95.98 630 S
-0.45 (\322                  ..OOOOO........                               \322,) 95.98 618 S
-0.45 (\322                  .OOOOOOOOOOO.O..                              \322,) 95.98 606 S
-0.45 (\322                  .OOOOOO.OOOO.O..                              \322,) 95.98 594 S
-0.45 (\322                  .OOOOOO.OOOO.OO.                              \322,) 95.98 582 S
-0.45 (\322                  .OOOOOO..OOO.OO..                             \322,) 95.98 570 S
-0.45 (\322                  .OOOOOOO.OOO..O..                             \322,) 95.98 558 S
-0.45 (\322                  .........OOOO..O.                             \322,) 95.98 546 S
-0.45 (\322                   ..XXX.OOOOOOO.O.                             \322,) 95.98 534 S
-0.45 (\322                   .XXXX.OOOOOOOO.                              \322,) 95.98 522 S
-0.45 (\322                  ..XXXX.OOOOOOOO..                             \322,) 95.98 510 S
-0.45 (\322                 .O.XXXX.OOOOOOOOO.                             \322,) 95.98 498 S
-0.45 (\322                .OO.XXXX.OOOOOOOOO.                             \322,) 95.98 486 S
-0.45 (\322               .OOO.XXXX.OOOOOOOOOO.                            \322,) 95.98 474 S
-0.45 (\322               .OOO..XXX.OOOOOOOOOO.                            \322,) 95.98 462 S
-0.45 (\322               .OOOO.XXX.OOOOOOOOOO.                            \322,) 95.98 450 S
-0.45 (\322               .OOOO.XXX.OOOOOOOOOO.                            \322,) 95.98 438 S
-0.45 (\322               ......XXXX.OOOO.......                           \322,) 95.98 426 S
-0.45 (\322                .+++.XXXX......++++.                            \322,) 95.98 414 S
-0.45 (\322                 .+.XX.XXXX.+++++++.                            \322,) 95.98 402 S
-0.45 (\322                 .+.X.XX....+++++++.                            \322,) 95.98 390 S
-0.45 (\322                 .+..XX.++++++++++.                             \322,) 95.98 378 S
-0.45 (\322                 .++.X..+++++++++++.                            \322,) 95.98 366 S
-0.45 (\322                 .+++++++++........                             \322,) 95.98 354 S
-0.45 (\322                 ............XXX.                               \322,) 95.98 342 S
-0.45 (\322                  ..XXXX.   .XXX.                               \322,) 95.98 330 S
-0.45 (\322                   ..XXX.   .XXX.                               \322,) 95.98 318 S
-0.45 (\322                    .XXX.   .XXX.                               \322,) 95.98 306 S
-0.45 (\322                    .XXX.   .XXX.                               \322,) 95.98 294 S
-0.45 (\322                    .....   .....                               \322,) 95.98 282 S
-0.45 (\322                   .oooo....oooo..                              \322,) 95.98 270 S
-0.45 (\322                    ....X..X....X..                             \322,) 95.98 258 S
-0.45 (\322                   .XXXX..X.XXXX..                              \322,) 95.98 246 S
-0.45 (\322                   .XXXXXX..XXXXXX..                            \322,) 95.98 234 S
-0.45 (\322                   .XXXXXXX.XXXXXXX.                            \322,) 95.98 222 S
-0.45 (\322                   .X.X.X.X.X.X.X.X.                            \322,) 95.98 210 S
-0.45 (\322                   ........X........                            \322};) 95.98 198 S
0 16 Q
(U) 72 165.33 T
0 12.8 Q
(SING) 83.55 165.33 T
0 16 Q
(P) 115.99 165.33 T
0 12.8 Q
(IXMAPS) 125.77 165.33 T
0 0 0 1 0 0 0 K
1 10 Q
0.78 (Now that you\325ve seen a number of examples of pixmaps defined with XPM, it\325s time to look at how you actually) 72 145.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.51 (use them. In this section, we start with a simple example of putting an XPM icon on a Motif PushButton. Then we) 72 133.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.06 (move on to more complex examples that demonstrate the main features of the XPM library. This section doesn\325t) 72 121.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cover all of the XPM functions; for full details see the reference pages that follow this tutorial.) 72 109.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9) 535 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(R) 72 565.67 T
0 11.2 Q
(EADING) 80.55 565.67 T
(AN) 125.11 565.67 T
0 14 Q
(XPM) 142.93 565.67 T
0 11.2 Q
(FILE) 175.2 565.67 T
0 0 0 1 0 0 0 K
1 10 Q
0.54 (In order to use an XPM icon, you must read an XPM file to create a pixmap. The following program demonstrates) 72 546.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (how to use the XPM library to read the XPM file) 72 534.33 P
0 0 0 1 0 0 0 K
0 F
0.13 (bullet.xpm) 272 534.33 P
0 0 0 1 0 0 0 K
1 F
0.13 ( and create a pixmap. Once we have the pixmap, we can) 313.94 534.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(put it on a Motif PushButton widget as shown in Figure 7.) 72 522.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (#include <stdio.h>) 95.98 505 S
-0.45 (#include <Xm/PushB.h>) 95.98 493 S
-0.45 (#include <X11/xpm.h>) 95.98 481 S
-0.45 (main\050int argc, char *argv[]\051) 95.98 457 S
-0.45 ({) 95.98 445 S
-0.45 (    XtAppContext app;) 95.98 433 S
-0.45 (    Widget top, button;) 95.98 421 S
-0.45 (    int status;) 95.98 409 S
-0.45 (    Pixmap pixmap;) 95.98 397 S
-0.45 (    /* create a simple hierarchy with a PushButton widget */) 95.98 373 S
-0.45 (    top = XtAppInitialize\050&app, \322BulletButton\323, NULL, 0, &argc, argv,) 95.98 361 S
-0.45 (                          NULL, NULL, 0\051;) 95.98 349 S
-0.45 (    button = XmCreatePushButton\050top, \322button\323, NULL, 0\051;) 95.98 337 S
-0.45 (    /* create a pixmap from the XPM file */) 95.98 313 S
-0.45 (    status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 301 S
-0.45 (                                 XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 289 S
-0.45 (                                 \322bullet.xpm\323, &pixmap, NULL, NULL\051;) 95.98 277 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 265 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 253 S
-0.45 (        exit\0501\051;) 95.98 241 S
-0.45 (    }) 95.98 229 S
-0.45 (    /* then put the pixmap onto the button */) 95.98 217 S
-0.45 (    XtVaSetValues\050button,) 95.98 205 S
-0.45 (                  XmNlabelType, XmPIXMAP,) 95.98 193 S
-0.45 (                  XmNlabelPixmap, pixmap,) 95.98 181 S
-0.45 (                  NULL\051;) 95.98 169 S
-0.45 (    XtManageChild\050button\051;) 95.98 157 S
-0.45 (    XtRealizeWidget\050top\051;) 95.98 145 S
-0.45 (    XtAppMainLoop\050app\051;) 95.98 133 S
-0.45 (}) 95.98 121 S
0 0 0 1 0 0 0 K
1 10 Q
1.48 (The relevant function call in this example is) 72 102.33 P
0 0 0 1 0 0 0 K
2 F
3.54 (XpmReadFileToPixmap\050\051) 262.12 102.33 P
0 0 0 1 0 0 0 K
1 F
1.48 (. This function creates and returns a) 388.12 102.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (pixmap from the specified XPM file. As with all of the main XPM functions, this function returns a status code that) 72 90.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 236.34 590.67 T
1 8.8 Q
(IGURE) 242.45 590.67 T
1 11 Q
(6:) 272.09 590.67 T
0 F
(A) 283.39 590.67 T
(C) 292.86 590.67 T
0 8.8 Q
(OLORFUL) 300.2 590.67 T
0 11 Q
(P) 342.55 590.67 T
0 8.8 Q
(IXMAP) 349.27 590.67 T
72 602 540 720 C
255 602 357 704 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  2860     
90 90 90 90 0 261 608
/red <
2E9B8B46F0FF64B5FEF48F775BCF3D6FFAC3E3FEFFE4FC4C97AEFEFEFF9DD533
77BB00E0A0FFE52D6AADF5D5FFFF8BCD93A58BE9EE77A0CDDC8BBDBC8B69CD2E
9B58D825723FBEBEA58BA558A5728B8BA53F72F1D8D83FD8A525F1F1F1F1BED8
F1F1D8BE58BEA5A58B3F8B728B725825FA613EC472FFEBE0ADB831730B1821BC
C83EA747516C8E9E97877E746259C700EEFFEE00FF8040FFDE992953452232FF
274348D3F570D2FF0087FED987B37F55721A4FED98FFCDFFFF0048008BCD008B
BF994C98190000F599FFFFAFFFB4476B8EFAB27BCD99FFFF8FFFCDB099FFD9B0
76738CCCE7B22F4D8FEEC0FFB07F99FFF0EED0DB8FEEFF6AD466CCFFB05300FF
> store
/green <
8BCD7D82F082648EF2E4615840A72447E892C7F5FBD5ED306E7FF6F8FA79C833
77BB000020A52D5B5AD8E0CB94782268702A2596E8885285DC83B78F4569C18B
CD58D825723FBEBEA5728B58A5588B8BA53F72D8BED825BE8B0CF1F1F1F1A5D8
D8D8BEBE58A5A58B8B3F727272583F25F08757D79FE1EBE0ADB8317F0B1821BC
C83EA747516C8E9E97877E7462591586636982FF458040EFB88D53A78B8BCDFF
406E76D3DE80B4FA64CEFED9CEB37F6B771A2FEDF5FFB5EBC0FF3D000A008B00
BF9599FF190000F57FFFD3EEF8EE8F86FFFFDF6EB768F4AE8BFF003083FFBAB0
EE7378AFE7224F4D80D5C0DAC4FF89E480E8C870BC008873E766CC00C08600FF
> store
/blue <
579B7BB4F0AB647DFAEA4F4C3B9D253FEF81C8FDFEDAF52E5A6AFEFEFF67C933
77BBB95DF0002DE5CDE6C47FCDDF5289DB2A007AAA992D3FDC866B8F1369C557
9B3FBE25583F8BA58B727258A53F725872253FBEA5A50C8B580CBEF1D8A5728B
A58B72722558583F3F0C3F252525250C80D98CFFFFFFEBE0ADB8318A0B1821BC
C83EA747516C8E9E97877E746259858B63B4EEFF008040D5877B458B742232E0
8BEEFFD3B3908CCD00EBEFD9FAB37F2F851A4FEDFF00CDCDCB008BCD50CD0000
BF847FFF70FF80F55DD99BEEDCB4778FEEFFEE5F9E6FFFB97BF600606FDE9DB0
C6736694E7224F4D6EB7C0B9DED476C480CDE1938FEEF68AFF66CC00E68B00FF
> store
 BEGINBITMAPCOLORc
z
OLFE
8z
OH73J"
OI72:z"
OD7472








J'
HFEFEFEFEFEFEJ(8"
BFEFE74FEFEFE7470J%9*
=FEFE74FEFEFE70FEFE7070FE70J$8(8"9"
9FEFEFE70FEFEFE7070707070J"8"8#:"8"
974FE70707070J#:"
;707070J$
;FE7070J"
:74J"D%
<FEFEFEFEFEJ"@+
;74FEFEFE70FEFFFFFFFEFEJ"=)
=FEFEFFFFFFFEFEFEFEJ"=#9%
<74FEFFFFFEFFFFJ#=#9$8"
=74FEFEFEFEFEFEFEJ#;&
FFFFF707070FEFEJ#9%:"
D70FEFEFE707074J#;'9%
>74FE70FEFEFE7070FEFEFEFEJ$9%8"
F707070FEFEFE70FEJ#A&8"
?74FE7070707070FEJ$
O#70FE74J$
O#FEFEFEJ";"=#8"
AFEFEFEFE74J"=s$
@74FE747474J(8"
FFE70707070707074J#9":%
A74FE70FEFEFE74J"
M74J"
L74Jr
@FEJ(s
?FEFEFBFBFBFBFBFEJ";*
@FBFBFBFBFBFBFEFBFEFEJ"
FFEJ"
MFBJ"="
GFEFEJ";"
FFBFEJr:%
@FEFBFEFEFBJ"8':"
?74707070FEFBFBFBJ"A$
A70FBFE74J"E"
?FEFEJ#D"
>FEFBFBJ#
=FEFBJ#G#
<FEFBFBFEJ"
AFEJ"
@FB
J%:#:r
=FEFEFEFE70FEFEJ&<,
<74FEC5C5C5FEFEFEFEFEC5C5C5C5FE74J(8'
=74FEC5FE7070FE7070FEC5C5C5J'
BFE7070FEFEFEJ)<#
AFE7070FEC5C5C5C5FE74J"8"A#
@C5FEC5FEJ%9s"
AC5C5C5C5FE74Jt8'
?FE707070FE7474J"8)
>7470707070FE747474J$
?74FEFEJ"
@74
J$;$
BFEFEFEFEFEFEJ0
@FEFFFFFFFFFEFEFEFEFFFFFFFFFEFEJ'8)
@74FEFEFEFE7070FEFEFEFE70FEFEJ1
@FE70707070FEFE70FE70707070FEFE74J$;%
E7070FE7070FEFEJ"="
G7070J&9&
BFE70FE70FEFE70FE70FEJr"r
AFE70FEJz
@174







:z
OD729"
728z
OHFE

ENDBITMAP
%%EndBinary
72 602 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(10) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
0.35 (can be used to detect and treat a possible error. As shown in this example, you can use) 72 600.33 P
0 0 0 1 0 0 0 K
2 F
0.84 (XpmGetErrorString\050\051) 426 600.33 P
0 0 0 1 0 0 0 K
1 F
(to build an error message. This function simply returns a character string related to the given error code.) 72 588.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.94 (Since the XPM functions and structures are declared in the XPM header file) 72 570.33 P
0 0 0 1 0 0 0 K
0 F
0.94 (xpm.h) 391.14 570.33 P
0 0 0 1 0 0 0 K
1 F
0.94 (, you must include this header) 415.3 570.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.41 (file in your program. You must also link your program with the XPM library. The) 72 558.33 P
0 0 0 1 0 0 0 K
0 F
0.41 (button) 408.38 558.33 P
0 0 0 1 0 0 0 K
1 F
0.41 ( program can be compiled) 433.94 558.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with the following) 72 546.33 T
0 0 0 1 0 0 0 K
0 F
(Imakefile) 148.39 546.33 T
0 0 0 1 0 0 0 K
1 F
(:) 185.6 546.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (        DEPLIBS = $\050DEPXMULIB\051 $\050DEPXTOOLLIB\051 $\050DEPXLIB\051) 95.98 529 S
-0.45 (LOCAL_LIBRARIES = -lXm -lXpm $\050XMULIB\051 $\050XTOOLLIB\051 $\050XLIB\051) 95.98 517 S
-0.45 (           OBJS = button.o) 95.98 505 S
-0.45 (           SRCS = button.c) 95.98 493 S
-0.45 (ComplexProgramTarget\050button\051) 95.98 469 S
0 0 0 1 0 0 0 K
1 10 Q
(You can also use the following command with X11R5:) 72 450.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (%) 95.98 433 S
4 F
-0.45 (cc -o button button.c -lXm -lXpm -lXmu -lXt -lXext -lX11) 105.88 433 S
0 0 0 1 0 0 0 K
1 10 Q
(With X11R6, use this command instead:) 72 414.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (%) 95.98 397 S
4 F
-0.45 (cc -o button button.c -lXm -lXpm -lXmu -lXt -lSM -lICE -lXext -lX11) 105.88 397 S
0 14 Q
(U) 72 369.67 T
0 11.2 Q
(SING) 82.11 369.67 T
0 14 Q
(P) 110.49 369.67 T
0 11.2 Q
(IXMAP) 119.05 369.67 T
0 14 Q
(A) 156.14 369.67 T
0 11.2 Q
(TTRIBUTES) 164.69 369.67 T
0 0 0 1 0 0 0 K
1 10 Q
0.84 (In the example described above, the last two parameters passes to the) 72 350.33 P
0 0 0 1 0 0 0 K
2 F
2.02 (XpmReadFileToPixmap\050\051) 361.77 350.33 P
0 0 0 1 0 0 0 K
1 F
0.84 ( function are) 487.77 350.33 P
0 0 0 1 0 0 0 K
2 F
1.32 (NULL) 72 338.33 P
0 0 0 1 0 0 0 K
1 F
0.55 (. However, instead of passing) 96 338.33 P
0 0 0 1 0 0 0 K
2 F
1.32 (NULL) 219.55 338.33 P
0 0 0 1 0 0 0 K
1 F
0.55 ( as the last parameter, you can pass a reference to an) 243.55 338.33 P
0 0 0 1 0 0 0 K
2 F
1.32 (XpmAttributes) 462 338.33 P
0 0 0 1 0 0 0 K
1 F
1.79 (structure to specify characteristics of the pixmap, as well as to retrieve useful data about it.  You can use the) 72 326.33 P
0 0 0 1 0 0 0 K
2 F
7.49 (XpmAttributes) 72 314.33 P
0 0 0 1 0 0 0 K
1 F
3.12 ( structure to specify attributes such as the colormap, the visual, and default colors. The) 150 314.33 P
0 0 0 1 0 0 0 K
2 F
4.22 (XpmReadFileToPixmap\050\051) 72 302.33 P
0 0 0 1 0 0 0 K
1 F
1.76 ( routine uses the values you specify to create the pixmap and then it fills in the) 198 302.33 P
0 0 0 1 0 0 0 K
2 F
(XpmAttributes) 72 290.33 T
0 0 0 1 0 0 0 K
1 F
( structure with information about the resulting pixmap. This structure is defined as follows:) 150 290.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (typedef struct {) 95.98 273 S
-0.45 (  unsigned long valuemask;     /* Specifies which components are defined */) 95.98 261 S
-0.45 (  Visual *visual;              /* Specifies the visual to use */) 95.98 249 S
-0.45 (  Colormap colormap;           /* Specifies the colormap to use */) 95.98 237 S
-0.45 (  unsigned int depth;          /* Specifies the depth */) 95.98 225 S
-0.45 (  unsigned int width;          /* The width of the created pixmap */) 95.98 213 S
-0.45 (  unsigned int height;         /* The height of the created pixmap */) 95.98 201 S
-0.45 (  unsigned int x_hotspot;      /* The x hotspot\325s coordinate */) 95.98 189 S
-0.45 (  unsigned int y_hotspot;      /* The y hotspot\325s coordinate */) 95.98 177 S
-0.45 (  unsigned int cpp;            /* Specifies the number of char per pixel */) 95.98 165 S
-0.45 (  Pixel *pixels;               /* List of used color pixels */) 95.98 153 S
-0.45 (  unsigned int npixels;        /* Number of pixels */) 95.98 141 S
-0.45 (  XpmColorSymbol *colorsymbols;/* Array of color symbols to override */) 95.98 129 S
-0.45 (  unsigned int numsymbols;     /* Number of symbols */) 95.98 117 S
-0.45 (  char *rgb_fname;             /* RGB text file name */) 95.98 105 S
-0.45 (  unsigned int nextensions;    /* Number of extensions */) 95.98 93 S
-0.45 (  XpmExtension *extensions;    /* Array of extensions */) 95.98 81 S
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 190.38 622.67 T
1 8.8 Q
(IGURE) 196.49 622.67 T
1 11 Q
(7:) 226.12 622.67 T
0 F
(T) 237.43 622.67 T
0 8.8 Q
(HE) 243.55 622.67 T
0 11 Q
(R) 258.03 622.67 T
0 8.8 Q
(ED) 264.75 622.67 T
0 11 Q
(B) 279.23 622.67 T
0 8.8 Q
(ULLET) 285.95 622.67 T
0 11 Q
(I) 315.11 622.67 T
0 8.8 Q
(CON) 318.77 622.67 T
(ON) 339.61 622.67 T
(A) 354.59 622.67 T
0 11 Q
(P) 362.71 622.67 T
0 8.8 Q
(USH) 369.43 622.67 T
0 11 Q
(B) 386.54 622.67 T
0 8.8 Q
(UTTON) 393.26 622.67 T
72 634 540 720 C
271 634 341 704 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1900     
58 58 58 58 0 277 640
/red <
EED88C613EC472FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBF
BFBF7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F3F3F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F0040000000EEFFFFEBE0ADB831
730B1821BCC83EA747516C8E9E97877E74625980EE00FFFFDE008BCD008B2232
FF274348D3F570D2FFF500BF87AFB40099FE29534500000000CD9900FFD94D00
008CCCD987B30000000000007F55721A00004FED98FF2FFFFFCDFF00000099FF
8FFF00B2D04C981973E7B0478EF076EE48C0DBEE8F7F6AD466FFCCFFB05300FF
> store
/green <
D2BF8C8757D79F00000000000000000000000000FFFFFFBFBFBFBFBF7F7F7F7F
7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBF7F7F7F7F7F3F3F3F3F3F000000
0000FFFFFFFFFFBFBFBFBFBF7F7F7F7F3F3F3F3F3F0000000000FFFFFFFFFFBF
BFBFBFBF7F7F7F7F7F3F3F3F3F3F0000000000FF40FFFFBF6369E1EBE0ADB831
7F0B1821BCC83EA747516C8E9E97877E7462598082FF45EFB8000A008B008BCD
FF406E76D3DE80B4FAF564BFCEEEEE008DFE53A78BBFBFBFBF00837FFFBA4D7F
7F78AFD9CEB37F7F3F3F3F3F7F6B771A3F002FEDF5FF4FDAEBB5C0FF000095F8
8BFF0022C899FF1973E7C48FFF80EEE83DC07000BCFF73E76688CC00C08600FF
> store
/blue <
EED88CD98CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBF7F3FFFBF7F3F00FFBF7F3F
00FFBF7F3F00FFBF7F3FFFBF7F3F00FF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F
3F00FFBF7F3F00FFBF7F3F00FFBF3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00FF
BF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00BF407F3FFF63B4FFEBE0ADB831
8A0B1821BCC83EA747516C8E9E97877E74625980EEFF00D587CD50CD00002232
E08BEEFFD3B3908CCDF500BFEBEEB4FF7BEF458B74BF7F3F00006FFFDE9D4DBF
7F6694D9FAB33F00FFBF7F3F7F2F851A00BF4FEDFF004FB9CDCDCB007F3F84DC
7BF68022E17FFF7073E7DE77EE80C6CD8BC093EE8FD48AFF66F6CC00E68B00FF
> store
 BEGINBITMAPCOLORc
z
O,FE
8z
O(05J"
O)04:z"
O$0604










Fz
9FE

J&
:FBFBFBFBFBJ#;#
8FBFBFBFBJ#?#
6FBFBFBFBJ"C"
5FBFB
J"E"
4FBFB
I"G"
FBFB



I"G"
FEFE
J"E"
4FEFE
J"C"
5FEFEJ#?#
6FEFEFEFEJ#;#
8FEFEFEFEJ&
:FEFEFEFEFE

Fz
906











:z
O$049"
048z
O(FE

ENDBITMAP
%%EndBinary
72 634 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(11) 530 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (  int ncolors;                 /* Number of colors */) 95.98 714 S
-0.45 (  XpmColor *colorTable;        /* Color table pointer */) 95.98 702 S
-0.45 (  char *hints_cmt;             /* Comment of the hints section */) 95.98 690 S
-0.45 (  char *colors_cmt;            /* Comment of the colors section */) 95.98 678 S
-0.45 (  char *pixels_cmt;            /* Comment of the pixels section */) 95.98 666 S
-0.45 (  unsigned int mask_pixel;     /* Transparent pixel color table index */) 95.98 654 S
-0.45 (  /* Color Allocation Directives */) 95.98 642 S
-0.45 (  unsigned int exactColors;    /* Only use exact colors for visual */) 95.98 630 S
-0.45 (  unsigned int closeness;      /* Allowable RGB deviation */) 95.98 618 S
-0.45 (  unsigned int red_closeness;  /* Allowable red deviation */) 95.98 606 S
-0.45 (  unsigned int green_closeness;/* Allowable green deviation */) 95.98 594 S
-0.45 (  unsigned int blue_closeness; /* Allowable blue deviation */) 95.98 582 S
-0.45 (  int color_key;               /* Use colors from this color set */) 95.98 570 S
-0.45 (  Pixel *alloc_pixels;         /* List of allocated color pixels */) 95.98 558 S
-0.45 (  unsigned int nalloc_pixels;  /* Number of allocated pixels */) 95.98 546 S
-0.45 (} XpmAttributes;) 95.98 534 S
0 0 0 1 0 0 0 K
1 10 Q
0.43 (As you can see, this is a rather large structure. In order to be able to specify which fields are actually set, the struc-) 72 515.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (ture also contains a value mask. The) 72 503.33 P
0 0 0 1 0 0 0 K
2 F
0.82 (valuemask) 222.14 503.33 P
0 0 0 1 0 0 0 K
1 F
0.34 ( field is a bitwise inclusive OR of the valid attribute mask bits. If) 276.14 503.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.91 (you are familiar with Xlib, you\325ll recognize this technique as similar to how you handle GCs. The one difference) 72 491.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (here is that the value mask is part of the structure, instead of being passed separately to different routines. The struc-) 72 479.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.5 (ture is designed this way because XPM functions can modify values in the structure to let you know whether some) 72 467.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.37 (optional data, such as hotspot coordinates, is available. For complete details on the) 72 455.33 P
0 0 0 1 0 0 0 K
2 F
3.29 (XpmAttributes) 423.14 455.33 P
0 0 0 1 0 0 0 K
1 F
1.37 ( structure) 501.14 455.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and the valid attribute masks, see the reference page for the structure.) 72 443.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.77 (The following code fragment shows a modified version of the previous program. In this case, an) 72 425.33 P
0 0 0 1 0 0 0 K
2 F
6.64 (XpmAt-) 504 425.33 P
(tributes) 72 413.33 T
0 0 0 1 0 0 0 K
1 F
( structure is used to retrieve the pixmap size in order to set the size of the PushButton widget:) 120 413.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (XpmAttributes attributes;) 95.98 396 S
-0.45 (...) 95.98 384 S
-0.45 (/* initialize the XpmAttributes valuemask */) 95.98 372 S
-0.45 (attributes.valuemask = 0;) 95.98 360 S
-0.45 (/* create a pixmap from the XPM file */) 95.98 336 S
-0.45 (status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 324 S
-0.45 (                             XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 312 S
-0.45 (                             \322bullet.xpm\323, &pixmap, NULL, &attributes\051;) 95.98 300 S
-0.45 (if \050status != XpmSuccess\051 {) 95.98 288 S
-0.45 (    fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 276 S
-0.45 (    exit\0501\051;) 95.98 264 S
-0.45 (}) 95.98 252 S
-0.45 (/* resize the button to the pixmap size plus some margins,) 95.98 228 S
-0.45 ( * and put the pixmap onto the button  */) 95.98 216 S
-0.45 (XtVaSetValues\050button,) 95.98 204 S
-0.45 (              XmNwidth, attributes.width + 50,) 95.98 192 S
-0.45 (              XmNheight, attributes.height + 25,) 95.98 180 S
-0.45 (              XmNlabelType, XmPIXMAP,) 95.98 168 S
-0.45 (              XmNlabelPixmap, pixmap,) 95.98 156 S
-0.45 (              NULL\051;) 95.98 144 S
0 0 0 1 0 0 0 K
1 10 Q
2.36 (The) 72 125.33 P
0 0 0 1 0 0 0 K
2 F
5.67 (XpmReadFileToPixmap\050\051) 92.41 125.33 P
0 0 0 1 0 0 0 K
1 F
2.36 ( function sets the) 218.41 125.33 P
0 0 0 1 0 0 0 K
2 F
5.67 (width) 298.42 125.33 P
0 0 0 1 0 0 0 K
1 F
2.36 ( and) 328.42 125.33 P
0 0 0 1 0 0 0 K
2 F
5.67 (height) 352.58 125.33 P
0 0 0 1 0 0 0 K
1 F
2.36 ( components of the given) 388.58 125.33 P
0 0 0 1 0 0 0 K
2 F
5.67 (XpmAt-) 504 125.33 P
(tributes) 72 113.33 T
0 0 0 1 0 0 0 K
1 F
( structure. We use these values to set the size of the widget.) 120 113.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.87 (Note that we intialize the) 72 95.33 P
0 0 0 1 0 0 0 K
2 F
4.49 (valuemask) 184.4 95.33 P
0 0 0 1 0 0 0 K
1 F
1.87 ( of the) 238.4 95.33 P
0 0 0 1 0 0 0 K
2 F
4.49 (XpmAttributes) 272.06 95.33 P
0 0 0 1 0 0 0 K
1 F
1.87 ( structure by setting it to zero before calling) 350.06 95.33 P
0 0 0 1 0 0 0 K
2 F
3.73 (XpmReadFileToPixmap\050\051) 72 83.33 P
0 0 0 1 0 0 0 K
1 F
1.56 (. This set is very important because the routine checks the structure and uses the) 198 83.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(12) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
1.34 (specified fields in creating the pixmap.  If) 72 713.33 P
0 0 0 1 0 0 0 K
2 F
3.21 (valuemask) 252.39 713.33 P
0 0 0 1 0 0 0 K
1 F
1.34 ( is not set to some valid value, unpredictable errors can) 306.39 713.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.76 (occur. Forgetting to initialize) 72 701.33 P
0 0 0 1 0 0 0 K
2 F
1.82 (valuemask) 194.18 701.33 P
0 0 0 1 0 0 0 K
1 F
0.76 ( is one of the most common errors that programmers make when using) 248.18 701.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the XPM library.) 72 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.37 (One common use of the) 72 671.33 P
0 0 0 1 0 0 0 K
2 F
0.88 (XpmAttributes) 171.88 671.33 P
0 0 0 1 0 0 0 K
1 F
0.37 ( structure is to override the colors of an XPM icon. For example, if you) 249.88 671.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.6 (want the PushButton to display a green bullet icon when it is armed, as shown in Figure 8, you do not need a new) 72 659.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.41 (XPM file. All you have to do is add a symbolic color name like Foreground to your XPM file, as explained earlier,) 72 647.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.98 (and then use this symbolic color to create a green bullet icon from the same file. The following program demon-) 72 635.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(strates this use of the XpmAttributes structure, using the) 72 623.33 T
0 0 0 1 0 0 0 K
0 F
(bullet_symb.xpm) 299.76 623.33 T
0 0 0 1 0 0 0 K
1 F
( pixmap defined earlier.) 367.25 623.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (#include <stdio.h>) 95.98 484 S
-0.45 (#include <Xm/PushB.h>) 95.98 472 S
-0.45 (#include <X11/xpm.h>) 95.98 460 S
-0.45 (main\050int argc, char *argv[]\051) 95.98 436 S
-0.45 ({) 95.98 424 S
-0.45 (    XtAppContext app;) 95.98 412 S
-0.45 (    Widget top, button;) 95.98 400 S
-0.45 (    int status;) 95.98 388 S
-0.45 (    Pixmap pixmap, armpixmap;) 95.98 376 S
-0.45 (    XpmAttributes attributes;) 95.98 364 S
-0.45 (    XpmColorSymbol symbol;) 95.98 352 S
-0.45 (    /* create a simple hierarchy with a PushButton widget */) 95.98 328 S
-0.45 (    top = XtAppInitialize\050&app, \322BulletButton\323, NULL, 0, &argc, argv,) 95.98 316 S
-0.45 (                          NULL, NULL, 0\051;) 95.98 304 S
-0.45 (    button = XmCreatePushButton\050top, \322button\323, NULL, 0\051;) 95.98 292 S
-0.45 (    /* create a red bullet pixmap from the XPM file */) 95.98 268 S
-0.45 (    status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 256 S
-0.45 (                                 XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 244 S
-0.45 (                                 \322bullet_symb.xpm\323, &pixmap, NULL, NULL\051;) 95.98 232 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 220 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 208 S
-0.45 (        exit\0501\051;) 95.98 196 S
-0.45 (    }) 95.98 184 S
-0.45 (    /* set the Foreground to green */) 95.98 172 S
-0.45 (    symbol.name = \322Foreground\323;) 95.98 160 S
-0.45 (    symbol.value = \322green\323;) 95.98 148 S
-0.45 (    attributes.colorsymbols = &symbol;) 95.98 124 S
-0.45 (    attributes.numsymbols = 1;) 95.98 112 S
-0.45 (    attributes.valuemask = XpmColorSymbols;) 95.98 100 S
-0.45 (    /* create a green bullet pixmap with these attributes */) 95.98 76 S
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 170.3 507.67 T
1 8.8 Q
(IGURE) 176.42 507.67 T
1 11 Q
(8:) 206.05 507.67 T
0 F
(A) 217.36 507.67 T
(G) 226.83 507.67 T
0 8.8 Q
(REEN) 234.77 507.67 T
0 11 Q
(B) 259.52 507.67 T
0 8.8 Q
(ULLET) 266.24 507.67 T
0 11 Q
(I) 295.4 507.67 T
0 8.8 Q
(CON) 299.07 507.67 T
(ON) 319.91 507.67 T
(AN) 334.88 507.67 T
0 11 Q
(A) 348.88 507.67 T
0 8.8 Q
(RMED) 355.6 507.67 T
0 11 Q
(P) 382.79 507.67 T
0 8.8 Q
(USH) 389.51 507.67 T
0 11 Q
(B) 406.61 507.67 T
0 8.8 Q
(UTTON) 413.33 507.67 T
72 519 540 608 C
272.31 519 339.69 592 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1903     
58 58 58 58 0 277.31 525
/red <
CCEE8C613EC472FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBF
BFBF7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F3F3F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F0040000000EEFFFFEBE0ADB831
730B1821BCC83EA747516C8E9E97877E74625980EE00FFFFDE008BCD008B2232
FF274348D3F570D2FFF500BF87AFB40099FE29534500000000CD9900FFD94D00
008CCCD987B30000000000007F55721A00004FED98FF2FFFFFCDFF00000099FF
8FFF00B2D04C981973E7B0478EF076EE48C0DBEE8F7F6AD466FFCCFFB05300FF
> store
/green <
D2D28C8757D79F00000000000000000000000000FFFFFFBFBFBFBFBF7F7F7F7F
7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBF7F7F7F7F7F3F3F3F3F3F000000
0000FFFFFFFFFFBFBFBFBFBF7F7F7F7F3F3F3F3F3F0000000000FFFFFFFFFFBF
BFBFBFBF7F7F7F7F7F3F3F3F3F3F0000000000FF40FFFFBF6369E1EBE0ADB831
7F0B1821BCC83EA747516C8E9E97877E7462598082FF45EFB8000A008B008BCD
FF406E76D3DE80B4FAF564BFCEEEEE008DFE53A78BBFBFBFBF00837FFFBA4D7F
7F78AFD9CEB37F7F3F3F3F3F7F6B771A3F002FEDF5FF4FDAEBB5C0FF000095F8
8BFF0022C899FF1973E7C48FFF80EEE83DC07000BCFF73E76688CC00C08600FF
> store
/blue <
EEEE8CD98CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBF7F3FFFBF7F3F00FFBF7F3F
00FFBF7F3F00FFBF7F3FFFBF7F3F00FF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F
3F00FFBF7F3F00FFBF7F3F00FFBF3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00FF
BF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00BF407F3FFF63B4FFEBE0ADB831
8A0B1821BCC83EA747516C8E9E97877E74625980EEFF00D587CD50CD00002232
E08BEEFFD3B3908CCDF500BFEBEEB4FF7BEF458B74BF7F3F00006FFFDE9D4DBF
7F6694D9FAB33F00FFBF7F3F7F2F851A00BF4FEDFF004FB9CDCDCB007F3F84DC
7BF68022E17FFF7073E7DE77EE80C6CD8BC093EE8FD48AFF66F6CC00E68B00FF
> store
 BEGINBITMAPCOLORc
z
O,FE
8z
O(04J"
O)05:z"
O$0305










Fz
9FE

J&
:DBDBDBDBDBJ#;#
8DBDBDBDBJ#?#
6DBDBDBDBJ"C"
5DBDB
J"E"
4DBDB
I"G"
DBDB



I"G"
FEFE
J"E"
4FEFE
J"C"
5FEFEJ#?#
6FEFEFEFEJ#;#
8FEFEFEFEJ&
:FEFEFEFEFE

Fz
903











:z
O$059"
058z
O(FE

ENDBITMAP
%%EndBinary
72 519 540 608 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(13) 530 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (    status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 714 S
-0.45 (                                 XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 702 S
-0.45 (                                 \322bullet_symb.xpm\323, &armpixmap, NULL,) 95.98 690 S
-0.45 (                                 &attributes\051;) 95.98 678 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 666 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 654 S
-0.45 (        exit\0501\051;) 95.98 642 S
-0.45 (    }) 95.98 630 S
-0.45 (    /* then put the two pixmaps onto the button */) 95.98 618 S
-0.45 (    XtVaSetValues\050button,) 95.98 606 S
-0.45 (                  XmNlabelType, XmPIXMAP,) 95.98 594 S
-0.45 (                  XmNlabelPixmap, pixmap,) 95.98 582 S
-0.45 (                  XmNarmPixmap, armpixmap,) 95.98 570 S
-0.45 (                  NULL\051;) 95.98 558 S
-0.45 (    XtManageChild\050button\051;) 95.98 546 S
-0.45 (    XtRealizeWidget\050top\051;) 95.98 534 S
-0.45 (    XtAppMainLoop\050app\051;) 95.98 522 S
-0.45 (}) 95.98 510 S
0 0 0 1 0 0 0 K
1 10 Q
0.11 (The first step in overriding a color in an XPM icon is to set the symbolic color to an actual color using an) 72 491.33 P
0 0 0 1 0 0 0 K
2 F
0.25 (XpmCol-) 498 491.33 P
(orSymbol) 72 479.33 T
0 0 0 1 0 0 0 K
1 F
( structure. This structure is defined as follows:) 120 479.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (typedef struct {) 95.98 462 S
-0.45 (    char *name;     /* Symbolic color name */) 95.98 450 S
-0.45 (    char *value;    /* Color value */) 95.98 438 S
-0.45 (    Pixel pixel;    /* Color pixel */) 95.98 426 S
-0.45 (} XpmColorSymbol;) 95.98 414 S
0 0 0 1 0 0 0 K
1 10 Q
0.51 (The) 72 395.33 P
0 0 0 1 0 0 0 K
2 F
1.23 (pixel) 90.56 395.33 P
0 0 0 1 0 0 0 K
1 F
0.51 ( field, which is not used in the previous example, allows you to specify the color directly with its pixel) 120.56 395.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(value instead of its name, if you already have it.) 72 383.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (In our case, we set Foreground to green. We then use this structure to set the) 72 365.33 P
0 0 0 1 0 0 0 K
2 F
0.34 (colorsymbols) 382.55 365.33 P
0 0 0 1 0 0 0 K
1 F
0.14 ( field of the) 454.55 365.33 P
0 0 0 1 0 0 0 K
2 F
0.34 (XpmAt-) 504 365.33 P
8.78 (tributes) 72 353.33 P
0 0 0 1 0 0 0 K
1 F
3.66 ( structure and set the) 120 353.33 P
0 0 0 1 0 0 0 K
2 F
8.78 (valuemask) 223.54 353.33 P
0 0 0 1 0 0 0 K
1 F
3.66 ( accordingly. The) 277.54 353.33 P
0 0 0 1 0 0 0 K
2 F
8.78 (XpmAttributes) 361.27 353.33 P
0 0 0 1 0 0 0 K
1 F
3.66 ( structure is passed to) 439.27 353.33 P
0 0 0 1 0 0 0 K
2 F
(XpmReadFileToPixmap\050\051) 72 341.33 T
0 0 0 1 0 0 0 K
1 F
(, which uses the structure in creating the pixmap.) 198 341.33 T
0 0 0 1 0 0 0 K
0 12 Q
(U) 72 318 T
0 9.6 Q
(SING) 80.66 318 T
0 12 Q
(T) 105 318 T
0 9.6 Q
(RANSP) 111.67 318 T
(ARENCY) 139.23 318 T
0 0 0 1 0 0 0 K
1 10 Q
0.31 (There are several cases where you need transparency. One is when you simply want a bullet icon with a transparent) 72 299.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(background, so that you get an icon similar to what is shown in Figure 9.:) 72 287.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.62 (One technique for achieving this effect is to use the XPM color overriding mechanism to create a pixmap with the) 72 150.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.32 (transparent color set to the color of the underlying widget. The following code fragment demonstrates this tech-) 72 138.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(nique using the) 72 126.33 T
0 0 0 1 0 0 0 K
0 F
(bullet_transp.xpm) 135.61 126.33 T
0 0 0 1 0 0 0 K
1 F
( file defined earlier:) 208.11 126.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 11 Q
(F) 122.08 174.67 T
1 8.8 Q
(IGURE) 128.2 174.67 T
1 11 Q
(9:) 157.83 174.67 T
0 F
(T) 169.14 174.67 T
0 8.8 Q
(HE) 175.26 174.67 T
0 11 Q
(B) 189.74 174.67 T
0 8.8 Q
(ULLET) 196.46 174.67 T
0 11 Q
(I) 225.61 174.67 T
0 8.8 Q
(CON) 229.28 174.67 T
(WITH) 250.12 174.67 T
(A) 274.38 174.67 T
0 11 Q
(T) 282.5 174.67 T
0 8.8 Q
(RANSPARENT) 288.62 174.67 T
0 11 Q
(B) 344.66 174.67 T
0 8.8 Q
(ACKGROUND) 351.38 174.67 T
(ON) 407.91 174.67 T
(A) 422.88 174.67 T
0 11 Q
(P) 431.01 174.67 T
0 8.8 Q
(USH) 437.73 174.67 T
0 11 Q
(B) 454.84 174.67 T
0 8.8 Q
(UTTON) 461.56 174.67 T
72 186 540 272 C
271.5 186 340.5 256 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  1892     
57 58 57 58 0 277.5 192
/red <
EED88C613EC472FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBF
BFBF7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F3F3F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F0040000000EEFFFFEBE0ADB831
730B1821BCC83EA747516C8E9E97877E74625980EE00FFFFDE008BCD008B2232
FF274348D3F570D2FFF500BF87AFB40099FE29534500000000CD9900FFD94D00
008CCCD987B30000000000007F55721A00004FED98FF2FFFFFCDFF00000099FF
8FFF00B2D04C981973E7B0478EF076EE48C0DBEE8F7F6AD466FFCCFFB05300FF
> store
/green <
D2BF8C8757D79F00000000000000000000000000FFFFFFBFBFBFBFBF7F7F7F7F
7F3F3F3F3F3F00000000FFFFFFFFFFBFBFBFBF7F7F7F7F7F3F3F3F3F3F000000
0000FFFFFFFFFFBFBFBFBFBF7F7F7F7F3F3F3F3F3F0000000000FFFFFFFFFFBF
BFBFBFBF7F7F7F7F7F3F3F3F3F3F0000000000FF40FFFFBF6369E1EBE0ADB831
7F0B1821BCC83EA747516C8E9E97877E7462598082FF45EFB8000A008B008BCD
FF406E76D3DE80B4FAF564BFCEEEEE008DFE53A78BBFBFBFBF00837FFFBA4D7F
7F78AFD9CEB37F7F3F3F3F3F7F6B771A3F002FEDF5FF4FDAEBB5C0FF000095F8
8BFF0022C899FF1973E7C48FFF80EEE83DC07000BCFF73E76688CC00C08600FF
> store
/blue <
EED88CD98CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBF7F3FFFBF7F3F00FFBF7F3F
00FFBF7F3F00FFBF7F3FFFBF7F3F00FF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F
3F00FFBF7F3F00FFBF7F3F00FFBF3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00FF
BF7F3F00FFBF7F3F00FFBF7F3F00FFBF7F3F00BF407F3FFF63B4FFEBE0ADB831
8A0B1821BCC83EA747516C8E9E97877E74625980EEFF00D587CD50CD00002232
E08BEEFFD3B3908CCDF500BFEBEEB4FF7BEF458B74BF7F3F00006FFFDE9D4DBF
7F6694D9FAB33F00FFBF7F3F7F2F851A00BF4FEDFF004FB9CDCDCB007F3F84DC
7BF68022E17FFF7073E7DE77EE80C6CD8BC093EE8FD48AFF66F6CC00E68B00FF
> store
 BEGINBITMAPCOLORc
z
O+FE
8z
O'05J"
O(04:z"
O#0604













J&
:FBFBFBFBFBJ#;#
8FBFBFBFBJ#?#
6FBFBFBFBJ"C"
5FBFB
J"E"
4FBFB
I"G"
FBFB



I"G"
0606
J"E"
40606
J"C"
50606J#?#
606060606J#;#
806060606J&
:0606060606














:z
O#049"
048z
O'FE

ENDBITMAP
%%EndBinary
72 186 540 272 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(14) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (Pixel color;) 95.98 714 S
-0.45 (...) 95.98 702 S
-0.45 (button = XmCreatePushButton\050top, \322button\323, NULL, 0\051;) 95.98 690 S
-0.45 (/* get the background color of the button */) 95.98 666 S
-0.45 (XtVaGetValues\050button, XmNbackground, &color, NULL\051;) 95.98 654 S
-0.45 (/* set the transparent color to the background */) 95.98 630 S
-0.45 (symbol.name = NULL;) 95.98 618 S
-0.45 (symbol.value = \322none\323;) 95.98 606 S
-0.45 (symbol.pixel = color;) 95.98 594 S
-0.45 (attributes.colorsymbols = symbols;) 95.98 570 S
-0.45 (attributes.numsymbols = 1;) 95.98 558 S
-0.45 (attributes.valuemask = XpmColorSymbols;) 95.98 546 S
-0.45 (status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 534 S
-0.45 (                             XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 522 S
-0.45 (                             \322bullet_transp.xpm\323, &pixmap, NULL,) 95.98 510 S
-0.45 (                             &attributes\051;) 95.98 498 S
-0.45 (if \050status != XpmSuccess\051 {) 95.98 486 S
-0.45 (    fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 474 S
-0.45 (    exit\0501\051;) 95.98 462 S
-0.45 (/* put the pixmap on the button */) 95.98 438 S
-0.45 (XtVaSetValues\050button,) 95.98 426 S
-0.45 (              XmNlabelType, XmPIXMAP,) 95.98 414 S
-0.45 (              XmNlabelPixmap, pixmap,) 95.98 402 S
-0.45 (              NULL\051;) 95.98 390 S
-0.45 (}) 95.98 378 S
0 0 0 1 0 0 0 K
1 10 Q
0.2 (This is a modified version of the first program, where the red bullet pixmap is created with the color None set to the) 72 359.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.86 (background color of the PushButton widget. When the pixmap is displayed on the widget, the bullet does not) 72 347.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(appear to have a rectangular border.) 72 335.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (Another case where you need transparency is when you want to use a nonrectangular XPM icon to define the shape) 72 317.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.79 (of a window. As we stated earlier, the X Window System does not actually support transparency, but most X) 72 305.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.88 (servers provide the Shape Extension, which you can use to achieve this effect.) 72 293.33 P
0 0 0 1 0 0 0 K
1 8 Q
0.7 (\240) 395.27 297.33 P
0 0 0 1 0 0 0 K
1 10 Q
0.88 ( The following program illustrates) 399.27 293.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(how you can use XPM and this extension to create a Motif PushButton widget that is shaped like the bullet icon.) 72 281.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (#include <stdio.h>) 95.98 264 S
-0.45 (#include <Xm/PushB.h>) 95.98 252 S
-0.45 (#include <Xm/BulletinB.h>) 95.98 240 S
-0.45 (#include <X11/xpm.h>) 95.98 228 S
-0.45 (#include <X11/extensions/shape.h>) 95.98 216 S
-0.45 (main\050int argc, char *argv[]\051) 95.98 192 S
-0.45 ({) 95.98 168 S
-0.45 (    XtAppContext app;) 95.98 156 S
-0.45 (    Widget top, bb, button;) 95.98 144 S
-0.45 (    int status;) 95.98 132 S
-0.45 (    Pixmap pixmap, mask;) 95.98 120 S
-0.45 (    XpmAttributes attributes;) 95.98 108 S
72 86 540 101 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 92 234 92 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
1 8 Q
0 X
0 0 0 1 0 0 0 K
(\240) 72 80.67 T
(See The X11 Nonrectangular Window Shape Extension documentation for details about this extension.) 78 80.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(15) 530 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (    XpmColorSymbol symbol;) 95.98 714 S
-0.45 (    top = XtAppInitialize\050&app, \322BulletButton\323, NULL, 0, &argc, argv,) 95.98 690 S
-0.45 (                          NULL, NULL, 0\051;) 95.98 678 S
-0.45 (    bb = XmCreateBulletinBoard\050top, \322bb\323, NULL, 0\051;) 95.98 666 S
-0.45 (    button = XmCreatePushButton\050bb, \322button\323, NULL, 0\051;) 95.98 654 S
-0.45 (    /* create a red bullet pixmap from the XPM file */) 95.98 630 S
-0.45 (    status = XpmReadFileToPixmap\050XtDisplay\050top\051,) 95.98 618 S
-0.45 (                                 XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 606 S
-0.45 (                                 \322bullet_transp.xpm\323, &pixmap, &mask,) 95.98 594 S
-0.45 (                                 NULL\051;) 95.98 582 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 570 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 558 S
-0.45 (        exit\0501\051;) 95.98 546 S
-0.45 (    }) 95.98 534 S
-0.45 (    /* put the pixmap onto the button */) 95.98 510 S
-0.45 (    XtVaSetValues\050button,) 95.98 498 S
-0.45 (                  XmNlabelType, XmPIXMAP,) 95.98 486 S
-0.45 (                  XmNlabelPixmap, pixmap,) 95.98 474 S
-0.45 (                  NULL\051;) 95.98 462 S
-0.45 (    XtManageChild\050button\051;) 95.98 450 S
-0.45 (    XtManageChild\050bb\051;) 95.98 438 S
-0.45 (    XtRealizeWidget\050top\051;) 95.98 426 S
-0.45 (    /* finally reshape the button window with the mask */) 95.98 414 S
-0.45 (    XShapeCombineMask\050XtDisplay\050button\051, XtWindow\050button\051, ShapeBounding,) 95.98 402 S
-0.45 (                      6, 6, mask, ShapeSet\051;) 95.98 390 S
-0.45 (    XtAppMainLoop\050app\051;) 95.98 366 S
-0.45 (}) 95.98 354 S
0 0 0 1 0 0 0 K
1 10 Q
0.32 (In this example, we pass a reference to another pixmap variable,) 72 335.33 P
0 0 0 1 0 0 0 K
2 F
0.76 (mask) 335.13 335.33 P
0 0 0 1 0 0 0 K
1 F
0.32 (, to the) 359.13 335.33 P
0 0 0 1 0 0 0 K
2 F
0.76 (XpmReadFileToPixmap\050\051) 390.08 335.33 P
0 0 0 1 0 0 0 K
1 F
0.32 ( func-) 516.08 335.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.29 (tion. Since the XPM file uses the color None, this variable is set to an additional 1-bit deep pixmap that can then be) 72 323.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(used as a shape mask for the) 72 311.33 T
0 0 0 1 0 0 0 K
2 F
(XShapeCombineMask\050\051) 188.36 311.33 T
0 0 0 1 0 0 0 K
1 F
( function.) 302.36 311.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.72 (This functionality allows you store both the pixmap and its mask in an XPM file, rather than having to create two) 72 293.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.65 (files as you would with XBM. Another situation where this feature is useful occurs when you define a cursor.) 72 281.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (Defining a cursor with XPM saves you from having to deal with two files, since both the cursor and its shape can be) 72 269.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stored in a single XPM file.) 72 257.33 T
0 0 0 1 0 0 0 K
0 14 Q
(O) 72 230.67 T
0 11.2 Q
(PTIMIZING) 82.11 230.67 T
(WITH) 140.98 230.67 T
(THE) 171.85 230.67 T
0 14 Q
(L) 196.51 230.67 T
0 11.2 Q
(OW) 204.29 230.67 T
0 14 Q
(-) 221.29 230.67 T
0 11.2 Q
(LEVEL) 225.96 230.67 T
0 14 Q
(R) 262.44 230.67 T
0 11.2 Q
(OUTINES) 270.99 230.67 T
0 0 0 1 0 0 0 K
1 10 Q
0.66 (In this final example, we examine how you can optimize your program using the low-level XPM functions. If you) 72 211.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (look back at the example where we created both red and green bullet icons, it\325s clear that some work has been dupli-) 72 199.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.64 (cated: the same XPM file is read once to create the red bullet icon and a second time to create the green one. You) 72 187.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.48 (can avoid this unnecessary time-consuming operation by using an) 72 175.33 P
0 0 0 1 0 0 0 K
2 F
5.96 (XpmImage) 360.16 175.33 P
0 0 0 1 0 0 0 K
1 F
2.48 ( structure, which is defined as) 408.16 175.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(follows:) 72 163.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (typedef struct {) 95.98 146 S
-0.45 (    unsigned int width;    /* image width */) 95.98 134 S
-0.45 (    unsigned int height;   /* image height */) 95.98 122 S
-0.45 (    unsigned int cpp;      /* number of characters per pixel */) 95.98 110 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(16) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (    unsigned int ncolors;  /* number of colors */) 95.98 714 S
-0.45 (    XpmColor *colorTable;  /* list of related colors */) 95.98 702 S
-0.45 (    unsigned int *data;    /* image data */) 95.98 690 S
-0.45 (} XpmImage;) 95.98 678 S
0 0 0 1 0 0 0 K
1 10 Q
(With the) 72 659.33 T
0 0 0 1 0 0 0 K
2 F
(XpmColor) 109.22 659.33 T
0 0 0 1 0 0 0 K
1 F
( structure defined like this:) 157.22 659.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (typedef struct {) 95.98 642 S
-0.45 (    char *string;      /* characters string */) 95.98 630 S
-0.45 (    char *symbolic;    /* symbolic name */) 95.98 618 S
-0.45 (    char *m_color;     /* monochrome default */) 95.98 606 S
-0.45 (    char *g4_color;    /* 4 level grayscale default */) 95.98 594 S
-0.45 (    char *g_color;     /* other level grayscale default */) 95.98 582 S
-0.45 (    char *c_color;     /* color default */) 95.98 570 S
-0.45 (} XpmColor;) 95.98 558 S
0 0 0 1 0 0 0 K
1 10 Q
0.12 (These structures allow you to read an XPM file and store the image definition in memory with all of the information) 72 539.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.57 (related to the colors it contains. Once you have an XpmImage structure that contains the image definition, you can) 72 527.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.92 (use it to create as many pixmaps as you want without having to read the XPM file multiple times. The following) 72 515.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.98 (program demonstrates this technique by creating the red and green bullet icons reading the file) 72 503.33 P
0 0 0 1 0 0 0 K
0 F
0.98 (bullet_transp.xpm) 467.5 503.33 P
0 0 0 1 0 0 0 K
1 F
(only once.) 72 491.33 T
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (#include <stdio.h>) 95.98 474 S
-0.45 (#include <Xm/PushB.h>) 95.98 462 S
-0.45 (#include <X11/xpm.h>) 95.98 450 S
-0.45 (main\050int argc, char *argv[]\051) 95.98 426 S
-0.45 ({) 95.98 414 S
-0.45 (    XtAppContext app;) 95.98 402 S
-0.45 (    Widget top, button;) 95.98 390 S
-0.45 (    int status;) 95.98 378 S
-0.45 (    Pixmap pixmap, armPixmap;) 95.98 366 S
-0.45 (    XpmAttributes attributes;) 95.98 354 S
-0.45 (    XpmColorSymbol symbols[2];) 95.98 342 S
-0.45 (    Pixel color;) 95.98 330 S
-0.45 (    XpmImage xpmimage;) 95.98 318 S
-0.45 (    top = XtAppInitialize\050&app, \322BulletButton\323, NULL, 0, &argc, argv,) 95.98 294 S
-0.45 (                          NULL, NULL, 0\051;) 95.98 282 S
-0.45 (    button = XmCreatePushButton\050top, \322button\323, NULL, 0\051;) 95.98 270 S
-0.45 (    /* read the XPM file */) 95.98 246 S
-0.45 (    status = XpmReadFileToXpmImage\050\322bullet_transp.xpm\323, &xpmimage, NULL\051;) 95.98 234 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 222 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 210 S
-0.45 (        exit\0501\051;) 95.98 198 S
-0.45 (    }) 95.98 186 S
-0.45 (    /* create a red bullet pixmap from the XpmImage structure */) 95.98 162 S
-0.45 (    XtVaGetValues\050button, XmNbackground, &color, NULL\051;) 95.98 150 S
-0.45 (    symbols[0].name = NULL;) 95.98 126 S
-0.45 (    symbols[0].value = \322none\323;) 95.98 114 S
-0.45 (    symbols[0].pixel = color;) 95.98 102 S
-0.45 (    attributes.colorsymbols = symbols;) 95.98 78 S
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(17) 530 36 T
0 0 0 1 0 0 0 K
1 F
(A Tutorial) 498.06 749.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
-0.45 (    attributes.numsymbols = 1;) 95.98 714 S
-0.45 (    attributes.valuemask = XpmColorSymbols;) 95.98 702 S
-0.45 (    status = XpmCreatePixmapFromXpmImage\050XtDisplay\050top\051,) 95.98 690 S
-0.45 (                                        XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 678 S
-0.45 (                                        &xpmimage, &pixmap, NULL,) 95.98 666 S
-0.45 (                                        &attributes\051;) 95.98 654 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 642 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 630 S
-0.45 (        exit\0501\051;) 95.98 618 S
-0.45 (    }) 95.98 606 S
-0.45 (    /* then, create a green pixmap from the XpmImage structure */) 95.98 582 S
-0.45 (    XtVaGetValues\050button, XmNarmColor, &color, NULL\051;) 95.98 570 S
-0.45 (    symbols[1].pixel = color;) 95.98 546 S
-0.45 (    symbols[1].name = \322Foreground\323;) 95.98 534 S
-0.45 (    symbols[1].value = \322green\323;) 95.98 522 S
-0.45 (    attributes.numsymbols = 2;) 95.98 510 S
-0.45 (    attributes.valuemask = XpmColorSymbols;) 95.98 498 S
-0.45 (    status = XpmCreatePixmapFromXpmImage\050XtDisplay\050top\051,) 95.98 474 S
-0.45 (                                        XRootWindowOfScreen\050XtScreen\050top\051\051,) 95.98 462 S
-0.45 (                                        &xpmimage, &armPixmap, NULL,) 95.98 450 S
-0.45 (                                        &attributes\051;) 95.98 438 S
-0.45 (    if \050status != XpmSuccess\051 {) 95.98 426 S
-0.45 (        fprintf\050stderr, \322XpmError: %s\134n\323, XpmGetErrorString\050status\051\051;) 95.98 414 S
-0.45 (        exit\0501\051;) 95.98 402 S
-0.45 (    }) 95.98 390 S
-0.45 (    /* now put the two pixmaps onto the button */) 95.98 378 S
-0.45 (    XtVaSetValues\050button, XmNlabelType, XmPIXMAP,) 95.98 366 S
-0.45 (                  XmNlabelPixmap, pixmap,) 95.98 354 S
-0.45 (                  XmNarmPixmap, armPixmap,) 95.98 342 S
-0.45 (                  NULL\051;) 95.98 330 S
-0.45 (    XtManageChild\050button\051;) 95.98 306 S
-0.45 (    XtRealizeWidget\050top\051;) 95.98 294 S
-0.45 (    XtAppMainLoop\050app\051;) 95.98 282 S
-0.45 (}) 95.98 270 S
0 0 0 1 0 0 0 K
1 10 Q
0.16 (This program reads the XPM file using) 72 251.33 P
0 0 0 1 0 0 0 K
2 F
0.38 (XpmReadFileToXpmImage\050\051) 232.26 251.33 P
0 0 0 1 0 0 0 K
1 F
0.16 (, which stores all of the data for the image) 370.27 251.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.12 (in the specified) 72 239.33 P
0 0 0 1 0 0 0 K
2 F
2.69 (XpmImage) 138.96 239.33 P
0 0 0 1 0 0 0 K
1 F
1.12 ( structure. Then we create the two pixmaps from the) 186.96 239.33 P
0 0 0 1 0 0 0 K
2 F
2.69 (XpmImage) 409.49 239.33 P
0 0 0 1 0 0 0 K
1 F
1.12 ( structure instead of) 457.49 239.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(from the file, which is much faster.) 72 227.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.4 (Another case where you need to use the) 72 209.33 P
0 0 0 1 0 0 0 K
2 F
0.96 (XpmImage) 236.82 209.33 P
0 0 0 1 0 0 0 K
1 F
0.4 ( structure is when you are writing a pixmap editor dedicated to) 284.82 209.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.68 (the XPM format, so you can directly deal with all the data the format can store.  If you are writing an image) 72 197.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(converter, you will also want to use this structure so you get a free XPM parser.) 72 185.33 T
0 0 0 1 0 0 0 K
0 16 Q
(R) 72 153.33 T
0 12.8 Q
(ELA) 81.78 153.33 T
(TED) 104.06 153.33 T
0 16 Q
(S) 132.24 153.33 T
0 12.8 Q
(OFTW) 140.24 153.33 T
(ARE) 174.18 153.33 T
0 0 0 1 0 0 0 K
1 10 Q
1.01 (You can find many X applications that allow you to edit and manipulate color images and to save them as XPM) 72 133.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.5 (files. However, the program called) 72 121.33 P
0 0 0 1 0 0 0 K
0 F
1.5 (pixmap) 220.84 121.33 P
0 0 0 1 0 0 0 K
1 F
1.5 ( is the only icon editor that is freely available and fully dedicated to) 250.28 121.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (XPM. It provides you with access to all the original XPM capabilities such as symbolic color names. This program) 72 109.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.48 (is written and supported by Lionel Mallet from SIMULOG, who can be reached electronically at) 72 97.33 P
0 0 0 1 0 0 0 K
0 F
1.48 (mallet@simp-) 483.58 97.33 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 0.15 0.85 0.85 0.85]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The XPM Format and Library) 72 749.33 T
0 0 0 1 0 0 0 K
0 F
(18) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.07 (olis.fr.) 72 713.33 P
0 0 0 1 0 0 0 K
1 F
1.07 (You can get) 101.69 713.33 P
0 0 0 1 0 0 0 K
0 F
1.07 (pixmap) 155.72 713.33 P
0 0 0 1 0 0 0 K
1 F
1.07 ( via anonymous FTP from) 185.16 713.33 P
0 0 0 1 0 0 0 K
0 F
1.07 (ftp.x.org) 298.01 713.33 P
0 0 0 1 0 0 0 K
1 F
1.07 ( in) 331.9 713.33 P
0 0 0 1 0 0 0 K
0 F
1.07 (/contrib/applications) 346.82 713.33 P
0 0 0 1 0 0 0 K
1 F
1.07 ( and from) 430.72 713.33 P
0 0 0 1 0 0 0 K
0 F
1.07 (avahi.inria.fr) 475.31 713.33 P
0 0 0 1 0 0 0 K
1 F
1.07 ( in) 528.65 713.33 P
0 0 0 1 0 0 0 K
0 F
(/pub/pixmap) 72 701.33 T
0 0 0 1 0 0 0 K
1 F
(.) 122 701.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (Many of these image editors also allow you to convert XPM files to and from other image formats. The best way to) 72 683.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (deal with image conversion is to use the) 72 671.33 P
0 0 0 1 0 0 0 K
0 F
0.26 (netpbm) 236.87 671.33 P
0 0 0 1 0 0 0 K
1 F
0.26 ( package which provides you with a number of programs to convert) 266.31 671.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.24 (images to and from a variety of different formats, as well as programs that allow a few basic image operations. This) 72 659.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 (package is based on the original) 72 647.33 P
0 0 0 1 0 0 0 K
0 F
0.35 (pbmplus) 204.65 647.33 P
0 0 0 1 0 0 0 K
1 F
0.35 ( package and is supported by a group of programmers who can be reached) 238.54 647.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.29 (through the mailing list) 72 635.33 P
0 0 0 1 0 0 0 K
0 F
1.29 (netpbm@fysik4.kth.se) 173.27 635.33 P
0 0 0 1 0 0 0 K
1 F
1.29 (. The) 260.79 635.33 P
0 0 0 1 0 0 0 K
0 F
1.29 (netpbm) 286.41 635.33 P
0 0 0 1 0 0 0 K
1 F
1.29 ( package is freely available via anonymous FTP from) 315.85 635.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(f) 72 623.33 T
0 0 0 1 0 0 0 K
0 F
(tp.x.org) 75.33 623.33 T
0 0 0 1 0 0 0 K
1 F
( in) 106.44 623.33 T
0 0 0 1 0 0 0 K
0 F
(/R5contrib) 119.22 623.33 T
0 0 0 1 0 0 0 K
1 F
(.) 162 623.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.36 (Finally, if you are looking for a collection of XPM icons, we suggest you to look at) 72 605.33 P
0 0 0 1 0 0 0 K
0 F
1.36 (Anthony\325s X Icon Library) 430.93 605.33 P
0 0 0 1 0 0 0 K
1 F
1.36 (,) 537.5 605.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6.57 (which is also freely available. It can be retrieved via anonymous FTP from) 72 593.33 P
0 0 0 1 0 0 0 K
0 F
6.57 (ftp.cae.wisc.edu) 458.99 593.33 P
0 0 0 1 0 0 0 K
1 F
6.57 ( in) 523.15 593.33 P
0 0 0 1 0 0 0 K
0 F
0.41 (/hpux9/X11R5/Graphics) 72 581.33 P
0 0 0 1 0 0 0 K
1 F
0.41 (. This library contains a large collection of small icons \050less than 100 by 100 pixels in size\051) 169.22 581.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (that are stored in categories. While black and white icons are stored in XBM format, all the color icons are stored in) 72 569.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(XPM format.) 72 557.33 T
0 0 0 1 0 0 0 K
0 16 Q
(C) 72 525.33 T
0 12.8 Q
(ONCLUSION) 82.67 525.33 T
0 0 0 1 0 0 0 K
1 10 Q
0.85 (XPM fills a gap in the X Window System and provides you with a powerful format and library to help you build) 72 505.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.67 (more pleasant graphical user interfaces with attractive color icons. XPM has been designed to fit the special needs) 72 493.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.12 (of designing and using color icons with respect to the X philosophy of providing the user with customizable) 72 481.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(resources.) 72 469.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 18
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 18
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Courier
%%+ Courier-Oblique
%%+ Courier-Bold
%%EOF
